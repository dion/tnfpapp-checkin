{"version":3,"sources":["config.js","core/common/apiCore.js","core/common/Navigation.js","core/ViewClient.js","core/common/Error.js","core/SearchClient.js","core/UpdateClient.js","core/RegisterClient.js","core/PlaceOfService.js","core/common/ClientContext.js","core/common/ClientHelpers.js","core/common/Modal.js","core/DisplayItems.js","core/Checkout.js","core/Serving.js","core/CheckIn.js","core/Storehouse.js","core/FoodPantry.js","core/MRC.js","core/Login.js","Routes.js","serviceWorker.js","index.js"],"names":["API","getClients","placeOfService","jwt","sessionStorage","getItem","axios","post","then","response","catch","error","console","log","updateClientStatus","client","getClient","email","getItems","place_of_service","style","navLink","color","textDecoration","withRouter","logoutFunction","logoutLink","history","isActive","path","location","pathname","className","to","state","place","onClick","useState","redirect","scope","fname","lname","address","phone","paddingTop","type","errorMessage","message","role","props","setError","errorMsg","setErrMsg","setRedirect","setClient","status","familyNumber","specificRequest","values","setValues","useEffect","reload","data","handleSubmit","e","preventDefault","setItem","clear","padding","width","htmlFor","id","onChange","name","event","target","value","form","Object","entries","length","inhouse","city","postalCode","handleChange","updateClientInfo","placeholder","registerClient","places","setPlaces","useHistory","methodsOfPickup","items","setItems","clientItems","setClientItems","clientPlaceOfService","setClientPlaceOfService","clientMethodOfPickup","setClientMethodOfPickup","getPlaceOfService","defaultPlace","getClientById","saveClient","methodOfPickup","inputs","document","querySelectorAll","i","checked","defaultValue","map","index","key","method","display","item","clientItemsFilter","filter","ClientContext","createContext","ClientProvider","checkedIn","serving","checkedOut","clients","setClients","prevClients","interval","setInterval","clearInterval","updateCheckout","Provider","children","clientUpdateStatus","Modal","modalId","refreshFunction","visitSaved","setVisitSaved","useContext","weightValue","setWeightValue","numItemsValue","setNumItemsValue","selectedMethodOfPickup","setSelectedMethodOfPickup","itemsCheckin","setItemsCheckin","date_of_visit","notes","weight","numOfItems","visit","setVisit","selectedItems","push","undefined","selectedItem","find","itemType","querySelector","dataset","handleServing","hasError","forEach","quantity","alert","refreshPage","window","handleVisitBeforeCheckout","c_id","saveClientVisitItem","setTimeout","handleClearCheckout","clearCheckout","handleItems","handleEditCheckin","client_id","updateCheckinItems","result","tabIndex","aria-labelledby","aria-hidden","data-dismiss","aria-label","selected","data-type","required","rows","Items","DisplayItems","noQty","Checkout","textAlign","float","marginBottom","data-toggle","data-target","data-id","Serving","refreshCheckin","maxWidth","backgroundColor","href","aria-controls","aria-selected","activeTab","useLocation","search","activeParam","URLSearchParams","get","checkinTabActive","servingTabActive","checkoutTabActive","checkinContentActive","servingContentActive","checkoutContentActive","Login","username","password","doLogin","marginTop","action","autoFocus","Routes","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"6NACaA,EAAM,sC,gBCYNC,EAAa,SAACC,GACzB,IAAMC,EAAMC,eAAeC,QAAQ,OAEnC,OAAOC,IACJC,KADI,UACIP,EADJ,oBAC2B,CAC9BG,MACAD,mBAEDM,MAAK,SAACC,GACL,OAAOA,KAERC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,OAerBG,EAAqB,SAACC,GACjC,IAAMZ,EAAMC,eAAeC,QAAQ,OAEnC,OAAOC,IACJC,KADI,UACIP,EADJ,6BACoC,CAAEe,SAAQZ,QAClDK,MAAK,SAACC,GAAD,OAAcA,KACnBC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,OAGrBK,EAAY,SAACC,GACxB,IAAMd,EAAMC,eAAeC,QAAQ,OAEnC,OAAOC,IACJC,KADI,UACIP,EADJ,sBAC6B,CAAEiB,QAAOd,QAC1CK,MAAK,SAACC,GAAD,OAAcA,KACnBC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,OAyDrBO,EAAW,SAACC,GACvB,IAAMhB,EAAMC,eAAeC,QAAQ,OAEnC,OAAOC,IACJC,KADI,UACIP,EADJ,cACqB,CAAEmB,mBAAkBhB,QAC7CK,MAAK,SAACC,GAAD,OAAcA,KACnBC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,OCtD5BS,EAAQ,CACZC,QAAS,CACPC,MAAO,UACPC,eAAgB,SAILC,eAnEI,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,eAAgBC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,QAC1CC,EAAW,SAACD,EAASE,GACzB,OAAIF,EAAQG,SAASC,WAAaF,EACzB,CAAEP,MAAO,UAAWC,eAAgB,QAEpC,CAAED,MAAO,UAAWC,eAAgB,SAI/C,OACE,yBAAKS,UAAU,+BACXN,GACA,kBAAC,IAAD,CAAMN,MAAOA,EAAMC,QAASY,GAAG,eAA/B,uBAIDP,GACC,kBAAC,WAAD,KACE,kBAAC,IAAD,CACEN,MAAOQ,EAASD,EAAS,eACzBM,GAAI,CACFF,SAAU,cACVG,MAAO,CACLC,MAAO,mBALb,iBAWA,kBAAC,IAAD,CACEf,MAAOQ,EAASD,EAAS,eACzBM,GAAI,CACFF,SAAU,cACVG,MAAO,CACLC,MAAO,iBALb,eAWA,kBAAC,IAAD,CACEf,MAAOQ,EAASD,EAAS,QACzBM,GAAI,CACFF,SAAU,OACVG,MAAO,CACLC,MAAO,4BALb,0BAWA,kBAAC,IAAD,CAAMf,MAAOA,EAAMC,QAASe,QAASX,EAAgBQ,GAAG,KAAxD,gBCsBKT,eAzEI,SAAC,GAAgB,IAAdT,EAAa,EAAbA,OAAa,EACDsB,oBAAS,GADR,mBAC1BC,EAD0B,UAGjC,GAAIA,EACF,OAAO,kBAAC,IAAD,CAAUL,GAAG,MAsCtB,OACE,kBAAC,WAAD,KACE,yBAAKD,UAAU,OACb,yBAAKA,UAAU,UACb,2BAAOA,UAAU,2CACf,+BACE,4BACE,wBAAIO,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,WACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,WAGJ,+BACE,4BACE,4BAAKxB,EAAOyB,OACZ,4BAAKzB,EAAO0B,OACZ,4BAAK1B,EAAO2B,SACZ,4BAAK3B,EAAOE,OACZ,4BAAKF,EAAO4B,YAtDxB,yBAAKX,UAAU,MAAMZ,MAAO,CAAEwB,WAAY,KACxC,yBAAKZ,UAAU,UACb,kBAAC,IAAD,CACEC,GAAI,CACFF,SAAU,kBACVG,MAAO,CACLnB,WAGJK,MAAO,CAAEG,eAAgB,SAEzB,4BAAQsB,KAAK,SAASb,UAAU,oCAAhC,cAKJ,yBAAKA,UAAU,UACb,kBAAC,IAAD,CACEC,GAAI,CACFF,SAAU,gBACVG,MAAO,CACLnB,WAGJK,MAAO,CAAEG,eAAgB,SAEzB,4BAAQsB,KAAK,SAASb,UAAU,oCAAhC,sBCnCGc,EAAe,SAACC,GAAD,OAC1B,yBAAKf,UAAU,qBAAqBgB,KAAK,SACvC,qCADF,IACiBD,ICyIJvB,eAtIM,SAACyB,GAAW,IAAD,EACJZ,oBAAS,GADL,mBACvB1B,EADuB,KAChBuC,EADgB,OAEAb,mBAAS,IAFT,mBAEvBc,EAFuB,KAEbC,EAFa,OAGEf,oBAAS,GAHX,mBAGvBC,EAHuB,KAGbe,EAHa,OAIFhB,mBAAS,IAJP,mBAIvBtB,EAJuB,KAIfuC,EAJe,OAKFjB,mBAAS,CACnCpB,MAAO,GACPsC,OAAQ,UACRC,aAAc,IACdC,gBAAiB,KATW,mBAKvBC,EALuB,KAKfC,EALe,KAYtB1C,EAA2ByC,EAA3BzC,MAAOwC,EAAoBC,EAApBD,gBAEfG,qBAAU,WACJxD,eAAeC,QAAQ,QAEzBgD,GAAY,GAGVJ,EAAMnB,SAAS+B,QACjB7C,EAAUiC,EAAMnB,SAASb,OAAOT,MAAK,SAACC,GAChCA,EACEA,EAASqD,KAAKnD,OAChBuC,GAAS,GACTE,EAAU3C,EAASqD,KAAKnD,SAExBuC,GAAS,GACTI,EAAU7C,EAASqD,KAAK/C,UAG1BmC,GAAS,GACTE,EAAU,iCAIf,IAQH,GAAId,EACF,OAAO,kBAAC,IAAD,CAAUL,GAAG,MAGtB,IAWM8B,EAAe,SAACC,GACpBA,EAAEC,iBAEY,KAAVhD,EACFD,EAAUC,GAAOT,MAAK,SAACC,GACjBA,EACEA,EAASqD,KAAKnD,OAChBuC,GAAS,GACTE,EAAU3C,EAASqD,KAAKnD,SAExBuC,GAAS,GACTI,EAAU7C,EAASqD,KAAK/C,UAG1BmC,GAAS,GACTE,EAAU,gCAIdF,GAAS,GACTE,EAAU,qCA6Cd,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,CAAY3B,eAxFC,WACfrB,eAAe8D,QAAQ,MAAO,IAC9B9D,eAAe+D,QACfd,GAAY,IAqF4B3B,YAAY,IACjDf,GAASmC,EAAaK,GA5Cd,kBACX,0BAAM/B,MAAO,CAAEgD,QAAS,KACtB,yBAAKpC,UAAU,YACb,yBAAKA,UAAU,qBAAqBZ,MAAO,CAAEiD,MAAO,MAClD,2BAAOC,QAAQ,cACb,uDAEF,2BACEzB,KAAK,QACLb,UAAU,eACVuC,GAAG,aACHC,UA9CYC,EA8CW,QA9CF,SAACC,GAE5Bf,EADU,mBAARc,EACQ,2BACLf,GADI,IAEPD,gBAAgB,GAAD,mBAAMA,GAAN,CAAuBiB,EAAMC,OAAOC,UAG3C,2BAAKlB,GAAN,kBAAee,EAAOC,EAAMC,OAAOC,aAyCxC,6BACA,yBAAK5C,UAAU,YACb,yBAAKA,UAAU,YACb,kBAAC,IAAD,CACEZ,MAAO,CAAEG,eAAgB,QACzBU,GAAI,CACFF,SAAU,oBAGZ,4BAAQC,UAAU,iCAAlB,qBAKJ,yBAAKA,UAAU,YACb,4BACEI,QAAS2B,EACT/B,UAAU,oCAFZ,sBA/DS,IAACyC,EAgFjBI,GACAC,OAAOC,QAAQhE,GAAQiE,OAAS,GAAK,kBAAC,EAAD,CAAYjE,OAAQA,QCiGjDS,eAnOM,SAAC,GAAkB,IAAhBM,EAAe,EAAfA,SAAe,EACXO,oBAAS,GADE,mBAC9B1B,EAD8B,KACvBuC,EADuB,OAEPb,mBAAS,IAFF,mBAE9Bc,EAF8B,KAEpBC,EAFoB,OAGLf,oBAAS,GAHJ,mBAG9BC,EAH8B,KAGpBe,EAHoB,OAIThB,mBAAS,CACnCkC,GAAI,EACJ/B,MAAO,GACPC,MAAO,GACPC,QAAS,GACTuC,QAAS,GACTC,KAAM,GACNhD,MAAO,GACPiD,WAAY,GACZlE,MAAO,GACP0B,MAAO,KAd4B,mBAI9Be,EAJ8B,KAItBC,EAJsB,KAiBrCC,qBAAU,WACR,GAAI9B,EAASI,MAAO,CAAC,IACXnB,EAAWe,EAASI,MAApBnB,OAER4C,EAAU,CACRY,GAAIxD,EAAOwD,GACX/B,MAAOzB,EAAOyB,MACdC,MAAO1B,EAAO0B,MACdC,QAAS3B,EAAO2B,QAChBuC,QAASlE,EAAOkE,QAChBC,KAAMnE,EAAOmE,KACbhD,MAAO,KACPiD,WAAYpE,EAAOoE,WACnBlE,MAAOF,EAAOE,MACd0B,MAAO5B,EAAO4B,WAGjB,IAlCkC,IAoC7BH,EACNkB,EADMlB,MAAOC,EACbiB,EADajB,MAAOC,EACpBgB,EADoBhB,QAASuC,EAC7BvB,EAD6BuB,QAASC,EACtCxB,EADsCwB,KAAMC,EAC5CzB,EAD4CyB,WAAYlE,EACxDyC,EADwDzC,MAAO0B,EAC/De,EAD+Df,MASjE,GAAIL,EACF,OACE,kBAAC,IAAD,CACEL,GAAI,CACFF,SAAU,gBACVd,MAAOA,EACP4C,QAAQ,KAMhB,IAAK/B,EAASI,MACZ,OAAO,kBAAC,IAAD,CAAUD,GAAG,MAGtB,IAAMmD,EAAe,SAACX,GAAD,OAAU,SAACC,GAC9Bf,EAAU,2BAAKD,GAAN,kBAAee,EAAOC,EAAMC,OAAOC,WAGxCb,EAAe,SAACC,GACpBA,EAAEC,iBLN0B,SAAClD,GAC/B,IAAMZ,EAAMC,eAAeC,QAAQ,OAEnC,OAAOC,IACJC,KADI,UACIP,EADJ,2BACkC,CAAEe,SAAQZ,QAChDK,MAAK,SAACC,GAAD,OAAcA,KACnBC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,MKE9B0E,CAAiB3B,GAAQlD,MAAK,SAACC,GACzBA,EACEA,EAASqD,KAAKnD,OAChBuC,GAAS,GACTE,EAAU3C,EAASqD,KAAKnD,QAExB0C,GAAY,IAGdH,GAAS,GACTE,EAAU,gCA2IhB,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,CAAY3B,eApLC,WACfrB,eAAe8D,QAAQ,MAAO,IAC9B9D,eAAe+D,QACfd,GAAY,IAiL4B3B,YAAY,IACjDf,GAASmC,EAAaK,GAxIzB,kBAAC,WAAD,KACE,yBAAKnB,UAAU,WAAWZ,MAAO,CAAEgD,QAAS,KAC1C,yBAAKpC,UAAU,uBACb,2BAAOsC,QAAQ,cACb,+CAEF,2BACEzB,KAAK,OACLb,UAAU,eACVuC,GAAG,aACHe,YAAY,aACZd,SAAUY,EAAa,SACvBR,MAAOpC,KAGX,yBAAKR,UAAU,uBACb,2BAAOsC,QAAQ,cACb,8CAEF,2BACEzB,KAAK,OACLb,UAAU,eACVuC,GAAG,aACHe,YAAY,YACZd,SAAUY,EAAa,SACvBR,MAAOnC,MAIb,yBAAKT,UAAU,WAAWZ,MAAO,CAAEgD,QAAS,KAC1C,yBAAKpC,UAAU,sBAAsBZ,MAAO,CAAEgD,QAAS,KACrD,2BAAOE,QAAQ,gBACb,4CAEF,2BACEzB,KAAK,OACLb,UAAU,eACVuC,GAAG,eACHe,YAAY,eACZd,SAAUY,EAAa,WACvBR,MAAOlC,KAGX,yBAAKV,UAAU,sBAAsBZ,MAAO,CAAEgD,QAAS,KACrD,2BAAOE,QAAQ,WACb,+CAEF,2BACEzB,KAAK,OACLb,UAAU,eACVuC,GAAG,UACHe,YAAY,aACZd,SAAUY,EAAa,WACvBR,MAAOK,MAIb,yBAAKjD,UAAU,WAAWZ,MAAO,CAAEgD,QAAS,KAC1C,yBAAKpC,UAAU,uBACb,2BAAOsC,QAAQ,aACb,yCAEF,2BACEzB,KAAK,OACLb,UAAU,eACVuC,GAAG,YACHC,SAAUY,EAAa,QACvBE,YAAY,SACZV,MAAOM,KAGX,yBAAKlD,UAAU,uBACb,2BAAOsC,QAAQ,cACb,0CAEF,4BAAQC,GAAG,aAAavC,UAAU,gBAChC,6CAGJ,yBAAKA,UAAU,uBACb,2BAAOsC,QAAQ,YACb,wCAEF,2BACEzB,KAAK,OACLb,UAAU,eACVuC,GAAG,WACHC,SAAUY,EAAa,cACvBR,MAAOO,MAIb,yBAAKnD,UAAU,WAAWZ,MAAO,CAAEgD,QAAS,KAC1C,yBAAKpC,UAAU,uBACb,2BAAOsC,QAAQ,cACb,0CAEF,2BACEzB,KAAK,QACLb,UAAU,eACVuC,GAAG,aACHe,YAAY,QACZd,SAAUY,EAAa,SACvBR,MAAO3D,KAGX,yBAAKe,UAAU,uBACb,2BAAOsC,QAAQ,cACb,0CAEF,2BACEzB,KAAK,OACLb,UAAU,eACVuC,GAAG,aACHe,YAAY,QACZd,SAAUY,EAAa,SACvBR,MAAOjC,MAIb,yBAAKX,UAAU,WAAWZ,MAAO,CAAEgD,QAAS,KAC1C,yBAAKpC,UAAU,wBACb,4BACEI,QAAS2B,EACT/B,UAAU,oCAFZ,iBCJKR,eA1MQ,SAAC,GAAiB,EAAfM,SAAgB,IAAD,EACbO,oBAAS,GADI,mBAChC1B,EADgC,KACzBuC,EADyB,OAETb,mBAAS,IAFA,mBAEhCc,EAFgC,KAEtBC,EAFsB,OAGPf,oBAAS,GAHF,mBAGhCC,EAHgC,KAGtBe,EAHsB,OAIXhB,mBAAS,CACnCkC,GAAI,EACJ/B,MAAO,GACPC,MAAO,GACPC,QAAS,GACTuC,QAAS,GACTC,KAAM,GACNhD,MAAO,KACPiD,WAAY,GACZlE,MAAO,GACP0B,MAAO,KAd8B,mBAIhCe,EAJgC,KAIxBC,EAJwB,KAuBvC,GAAIrB,EACF,OACE,kBAAC,IAAD,CACEL,GAAI,CACFF,SAAU,mBA3BqB,IAiC/BS,EACNkB,EADMlB,MAAOC,EACbiB,EADajB,MAAOC,EACpBgB,EADoBhB,QAASuC,EAC7BvB,EAD6BuB,QAASC,EACtCxB,EADsCwB,KAAMC,EAC5CzB,EAD4CyB,WAAYlE,EACxDyC,EADwDzC,MAAO0B,EAC/De,EAD+Df,MAG3DyC,EAAe,SAACX,GAAD,OAAU,SAACC,GAC9Bf,EAAU,2BAAKD,GAAN,kBAAee,EAAOC,EAAMC,OAAOC,WAGxCb,EAAe,SAACC,GACpBA,EAAEC,iBN4BwB,SAAClD,GAC7B,IAAMZ,EAAMC,eAAeC,QAAQ,OAEnC,OAAOC,IACJC,KADI,UACIP,EADJ,wBAC+B,CAAEe,SAAQZ,QAC7CK,MAAK,SAACC,GAAD,OAAcA,KACnBC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,MMhC9B4E,CAAe7B,GAAQlD,MAAK,SAACC,GACvBA,EACEA,EAASqD,KAAKnD,OAChBuC,GAAS,GACTE,EAAU3C,EAASqD,KAAKnD,QAExB0C,GAAY,IAGdH,GAAS,GACTE,EAAU,gCA2IhB,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,CAAY3B,eAjLC,WACfrB,eAAe8D,QAAQ,MAAO,IAC9B9D,eAAe+D,QACfd,GAAY,IA8K4B3B,YAAY,IACjDf,GAASmC,EAAaK,GAxIzB,kBAAC,WAAD,KACE,yBAAKnB,UAAU,WAAWZ,MAAO,CAAEgD,QAAS,KAC1C,yBAAKpC,UAAU,uBACb,2BAAOsC,QAAQ,cACb,+CAEF,2BACEzB,KAAK,OACLb,UAAU,eACVuC,GAAG,aACHe,YAAY,aACZd,SAAUY,EAAa,SACvBR,MAAOpC,KAGX,yBAAKR,UAAU,uBACb,2BAAOsC,QAAQ,cACb,8CAEF,2BACEzB,KAAK,OACLb,UAAU,eACVuC,GAAG,aACHe,YAAY,YACZd,SAAUY,EAAa,SACvBR,MAAOnC,MAIb,yBAAKT,UAAU,WAAWZ,MAAO,CAAEgD,QAAS,KAC1C,yBAAKpC,UAAU,sBAAsBZ,MAAO,CAAEgD,QAAS,KACrD,2BAAOE,QAAQ,gBACb,4CAEF,2BACEzB,KAAK,OACLb,UAAU,eACVuC,GAAG,eACHe,YAAY,eACZd,SAAUY,EAAa,WACvBR,MAAOlC,KAGX,yBAAKV,UAAU,sBAAsBZ,MAAO,CAAEgD,QAAS,KACrD,2BAAOE,QAAQ,WACb,+CAEF,2BACEzB,KAAK,OACLb,UAAU,eACVuC,GAAG,UACHe,YAAY,aACZd,SAAUY,EAAa,WACvBR,MAAOK,MAIb,yBAAKjD,UAAU,WAAWZ,MAAO,CAAEgD,QAAS,KAC1C,yBAAKpC,UAAU,uBACb,2BAAOsC,QAAQ,aACb,yCAEF,2BACEzB,KAAK,OACLb,UAAU,eACVuC,GAAG,YACHC,SAAUY,EAAa,QACvBE,YAAY,SACZV,MAAOM,KAGX,yBAAKlD,UAAU,uBACb,2BAAOsC,QAAQ,cACb,0CAEF,4BAAQC,GAAG,aAAavC,UAAU,gBAChC,6CAGJ,yBAAKA,UAAU,uBACb,2BAAOsC,QAAQ,YACb,wCAEF,2BACEzB,KAAK,OACLb,UAAU,eACVuC,GAAG,WACHC,SAAUY,EAAa,cACvBR,MAAOO,MAIb,yBAAKnD,UAAU,WAAWZ,MAAO,CAAEgD,QAAS,KAC1C,yBAAKpC,UAAU,uBACb,2BAAOsC,QAAQ,cACb,0CAEF,2BACEzB,KAAK,QACLb,UAAU,eACVuC,GAAG,aACHe,YAAY,QACZd,SAAUY,EAAa,SACvBR,MAAO3D,KAGX,yBAAKe,UAAU,uBACb,2BAAOsC,QAAQ,cACb,0CAEF,2BACEzB,KAAK,OACLb,UAAU,eACVuC,GAAG,aACHe,YAAY,QACZd,SAAUY,EAAa,SACvBR,MAAOjC,MAIb,yBAAKX,UAAU,WAAWZ,MAAO,CAAEgD,QAAS,KAC1C,yBAAKpC,UAAU,wBACb,4BACEI,QAAS2B,EACT/B,UAAU,oCAFZ,iBCgGKR,eAhRQ,SAACyB,GAAW,IAAD,EACNZ,oBAAS,GADH,mBACzB1B,EADyB,KAClBuC,EADkB,OAEFb,mBAAS,IAFP,mBAEzBc,EAFyB,KAEfC,EAFe,OAGAf,oBAAS,GAHT,mBAGzBC,EAHyB,KAGfe,EAHe,OAIJhB,mBAAS,IAJL,mBAIzBmD,EAJyB,KAIjBC,EAJiB,QAKhBC,cAE8BrD,mBAAS,CACrD,aACA,aAT8B,mBAOzBsD,EAPyB,aAaNtD,mBAAS,KAbH,mBAazBuD,EAbyB,KAalBC,EAbkB,OAgBMxD,mBAAS,IAhBf,mBAgBzByD,EAhByB,KAgBZC,EAhBY,OAiBwB1D,mBAAS,IAjBjC,mBAiBzB2D,EAjByB,KAiBHC,EAjBG,OAkBwB5D,mBAAS,IAlBjC,mBAkBzB6D,EAlByB,KAkBHC,EAlBG,KAqDhC,GAjCAvC,qBAAU,WAsBR,OArBAhD,QAAQC,IAAI,qBAEPT,eAAeC,QAAQ,QAC1BgD,GAAY,GPmEe,WAC/B,IAAMlD,EAAMC,eAAeC,QAAQ,OAEnC,OAAOC,IACJC,KADI,UACIP,EADJ,4BACmC,CAAEG,QACzCK,MAAK,SAACC,GAAD,OAAcA,KACnBC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,MOtE9ByF,GAAoB5F,MAAK,SAACC,GACpBA,EACEA,EAASqD,KAAKnD,OAChBuC,GAAS,GACTE,EAAU3C,EAASqD,KAAKnD,SAExBuC,GAAS,GACTuC,EAAUhF,EAASqD,KAAK0B,UAG1BtC,GAAS,GACTE,EAAU,+BAIP,WACLxC,QAAQC,IAAI,0BAEb,IAGH+C,qBAAU,WACRhD,QAAQC,IAAI,6CACX,CAACiF,IAGgC,qBAAzB7C,EAAMnB,SAASI,MACxB,OAAO,kBAAC,IAAD,CAAUD,GAAG,MAGtB,GAAIK,EAAU,CACZ,IAAI+D,EAAe,GACnB,OAAQL,GACN,IAAK,cACHK,EAAe,aACf,MACF,IAAK,yBACHA,EAAe,MACf,MACF,QACEA,EAAe,aAGnB,OACE,kBAAC,IAAD,CACEpE,GAAI,CACFF,SAAS,IAAD,OAAMsE,MAMtB,IAmDMtC,EAAe,SAACC,GAGpB,GAFAA,EAAEC,iBAEyB,IAAvB6B,EAAYd,QAAyC,KAAzBkB,EAG9B,OAFAhD,GAAS,GACTE,EAAU,uCACH,GP1FgB,SAACmB,GAC5B,IAAMpE,EAAMC,eAAeC,QAAQ,OAEnC,OAAOC,IACJC,KADI,UACIP,EADJ,4BACmC,CAAEuE,KAAIpE,QAC7CK,MAAK,SAACC,GAAD,OAAcA,KACnBC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,OOyF9B2F,CAFmBrD,EAAMnB,SAASI,MAA1BnB,OAEawD,IAAI/D,MAAK,SAACC,GAC7B,GAAIA,EACF,GAAIA,EAASqD,KAAKnD,MAChBuC,GAAS,GACTE,EAAU3C,EAASqD,KAAKnD,WACnB,CAAC,IACEI,EAAWN,EAASqD,KAApB/C,QPnIQ,SAACA,GACzB,IAAMZ,EAAMC,eAAeC,QAAQ,OAEnC,OAAOC,IACJC,KADI,UACIP,EADJ,oBAC2B,CAC9Be,SACAZ,QAEDK,MAAK,SAACC,GAAD,OAAcA,KACnBC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,OOuIxB4F,CAXsB,CACpB/D,MAAOzB,EAAOyB,MACdC,MAAO1B,EAAO0B,MACdc,OAAQ,UACRC,aAAczC,EAAOkE,QACrB/E,eAAgB8F,EAChBJ,MAAOE,EACP7E,MAAOF,EAAOE,MACduF,eAAgBN,IAGQ1F,MAAK,SAACC,GAC1BA,EACEA,EAASqD,KAAKnD,OAChBuC,GAAS,GACTE,EAAU3C,EAASqD,KAAKnD,SAExBuC,GAAS,GACTG,GAAY,KAGdH,GAAS,GACTE,EAAU,oCAKhBF,GAAS,GACTE,EAAU,+BAsFhB,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,CAAY3B,eA1LC,WACfrB,eAAe8D,QAAQ,MAAO,IAC9B9D,eAAe+D,QACfd,GAAY,IAuL4B3B,YAAY,IACjDf,GAASmC,EAAaK,GAnFzB,0BAAM/B,MAAO,CAAEgD,QAAS,KACtB,yBAAKpC,UAAU,YACb,yBAAKA,UAAU,qBAAqBZ,MAAO,CAAEiD,MAAO,MAClD,yBAAKrC,UAAU,qBACb,2BAAOsC,QAAQ,uBACb,qDAEF,4BACEE,SAtGkB,SAACE,GAI7B,IAFA,IAAI+B,EAASC,SAASC,iBAAiB,qBAE9BC,EAAI,EAAGA,EAAIH,EAAOzB,OAAQ4B,IACjCH,EAAOG,GAAGC,SAAU,EAItBd,EAAe,IAGfE,EAAwBvB,EAAMC,OAAOC,OAErC1D,EAASwD,EAAMC,OAAOC,OAAOpE,MAAK,SAACC,GAC7BA,EACEA,EAASqD,KAAKnD,OAChBuC,GAAS,GACTE,EAAU3C,EAASqD,KAAKnD,SAExBuC,GAAS,GACT2C,EAASpF,EAASqD,KAAK8B,SAGzB1C,GAAS,GACTE,EAAU,gCA8EJpB,UAAU,gBACVuC,GAAG,kBAEH,4BAAQuC,cAAY,EAAClC,MAAM,KAA3B,aAGCY,EAAOuB,KAAI,SAAC5E,EAAO6E,GAAR,OACV,4BAAQC,IAAKD,EAAOpC,MAAOzC,EAAMhB,kBAC9BgB,EAAMhB,uBAMf,yBAAKa,UAAU,qBACb,+BACE,qDAEF,4BACEwC,SA9HmB,SAACE,GAC9ByB,EAAwBzB,EAAMC,OAAOC,QA8H3B5C,UAAU,gBACVuC,GAAG,mBAEH,4BAAQuC,cAAY,EAAClC,MAAM,KAA3B,aAGCe,EAAgBoB,KAAI,SAACG,EAAQF,GAAT,OACnB,4BAAQC,IAAKD,EAAOpC,MAAOsC,GACxBA,QAMT,yBACElF,UAAU,oBACVZ,MAAO,CAAE+F,QAASvB,EAAMZ,OAAS,EAAI,QAAU,SAE/C,+BACE,0CAGDY,EAAMmB,KAAI,SAACK,EAAMJ,GAAP,OACT,yBAAKhF,UAAU,aAAaiF,IAAKD,GAC/B,2BACExC,SAtHc,SAACE,GAC7B,GAAIA,EAAMC,OAAOkC,QACfd,EAAe,GAAD,mBAAKD,GAAL,CAAkBpB,EAAMC,OAAOC,aACxC,CACL,IAAIyC,EAAoBvB,EAAYwB,QAClC,SAACF,GAAD,OAAUA,IAAS1C,EAAMC,OAAOC,SAElCmB,EAAesB,KAgHHrF,UAAU,mBACVa,KAAK,WACL+B,MAAOwC,EAAK3C,KACZF,GAAIyC,IAEN,2BAAOhF,UAAU,mBAAmBsC,QAAS0C,GAC1CI,EAAK3C,WAMd,yBAAKzC,UAAU,qBACb,4BACEI,QAAS2B,EACT/B,UAAU,oCAFZ,kBCnQCuF,EAAgBC,0BAEhBC,EAAiB,SAACxE,GAAW,IAAD,EACXZ,mBAAS,CACnCF,MAAO,GACPuF,UAAW,GACXC,QAAS,GACTC,WAAY,KALyB,mBAClCC,EADkC,KACzBC,EADyB,KA+EvC,OAvEAlE,qBAAU,WACR3D,EAAW4H,EAAQ1F,OAAO3B,MAAK,SAACC,GAC9B,GAAIA,EACF,GAAIA,EAASqD,KAAKnD,MAChBC,QAAQC,IAAI,mBAAoBJ,EAASqD,KAAKnD,WACzC,CACL,IAAM+G,EAAYjH,EAASqD,KAAK+D,QAAQP,QAAO,SAACvG,GAC9C,MAAyB,YAAlBA,EAAOwC,UAGVoE,EAAUlH,EAASqD,KAAK+D,QAAQP,QAAO,SAACvG,GAC5C,MAAyB,YAAlBA,EAAOwC,UAGVqE,EAAanH,EAASqD,KAAK+D,QAAQP,QAAO,SAACvG,GAC/C,MAAyB,aAAlBA,EAAOwC,UAGhBuE,GAAW,SAACC,GACV,OAAO,2BACFA,GADL,IAEE5F,MAAO0F,EAAQ1F,MACfuF,YACAC,UACAC,uBAKNhH,QAAQC,IAAI,wBAIhB,IAAMmH,EAAWC,aAAY,WAC3BhI,EAAW4H,EAAQ1F,OAAO3B,MAAK,SAACC,GAC9B,GAAIA,EACF,GAAIA,EAASqD,KAAKnD,MAChBC,QAAQC,IAAI,mBAAoBJ,EAASqD,KAAKnD,WACzC,CACL,IAAM+G,EAAYjH,EAASqD,KAAK+D,QAAQP,QAAO,SAACvG,GAC9C,MAAyB,YAAlBA,EAAOwC,UAGVoE,EAAUlH,EAASqD,KAAK+D,QAAQP,QAAO,SAACvG,GAC5C,MAAyB,YAAlBA,EAAOwC,UAGVqE,EAAanH,EAASqD,KAAK+D,QAAQP,QAAO,SAACvG,GAC/C,MAAyB,aAAlBA,EAAOwC,UAGhBuE,GAAW,SAACC,GACV,OAAO,2BACFA,GADL,IAEE5F,MAAO0F,EAAQ1F,MACfuF,YACAC,UACAC,uBAKNhH,QAAQC,IAAI,0BAGf,KAGH,OAAO,kBAAMqH,cAAcF,MAC1B,CAACH,EAAQ1F,MAAO0F,EAAQM,iBAGzB,kBAACZ,EAAca,SAAf,CAAwBxD,MAAO,CAACiD,EAASC,IACtC7E,EAAMoF,WCtFAC,EAAqB,SAACT,GAajC,MAAO,CAAEH,UAZSG,EAAQP,QAAO,SAACvG,GAChC,MAAyB,YAAlBA,EAAOwC,UAWIoE,QARJE,EAAQP,QAAO,SAACvG,GAC9B,MAAyB,YAAlBA,EAAOwC,UAOaqE,WAJVC,EAAQP,QAAO,SAACvG,GACjC,MAAyB,aAAlBA,EAAOwC,YCmoBHgF,EA/nBD,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,QAASzH,EAA2C,EAA3CA,OAAQ8B,EAAmC,EAAnCA,KAAM4F,EAA6B,EAA7BA,gBAAiBtG,EAAY,EAAZA,MAAY,EACzCE,oBAAS,GADgC,mBAC5D1B,EAD4D,KACrDuC,EADqD,OAErCb,mBAAS,IAF4B,mBAE5Dc,EAF4D,KAElDC,EAFkD,OAG/Bf,oBAAS,GAHsB,mBAG5DqG,EAH4D,KAGhDC,EAHgD,OAIrCC,qBAAWrB,GAJ0B,mBAInDO,GAJmD,aAK7BzF,mBAAS,IALoB,mBAK5DwG,EAL4D,KAK/CC,EAL+C,OAMzBzG,mBAAS,IANgB,mBAM5D0G,EAN4D,KAM7CC,EAN6C,KAO7DrH,EAAU+D,cAPmD,EASrBrD,mBAAS,CACrD,aACA,YAXiE,mBAS5DsD,EAT4D,aAcPtD,mBAAS,KAdF,mBAc5D4G,EAd4D,KAcpCC,EAdoC,OAiB3B7G,mBAAS,IAjBkB,mBAiB5D8G,GAjB4D,KAiB9CC,GAjB8C,QAkB7B/G,mBAAS,IAlBoB,qBAkB5DyD,GAlB4D,MAkB/CC,GAlB+C,SAqBzC1D,mBAAS,IArBgC,qBAqB5DuD,GArB4D,MAqBrDC,GArBqD,SAuBzCxD,mBAAS,CACjClB,iBAAkB,GAClBkI,cAAe,GACfjC,KAAM,GACNkC,MAAO,GACPC,OAAQ,GACRC,WAAY,KA7BqD,qBAuB5DC,GAvB4D,MAuBrDC,GAvBqD,MAgC3DL,GAAmDI,GAAnDJ,cAAejC,GAAoCqC,GAApCrC,KAAMkC,GAA8BG,GAA9BH,MAAOC,GAAuBE,GAAvBF,OAAQC,GAAeC,GAAfD,WAE5C5F,qBAAU,WACR,GAAa,gBAATf,EAAwB,CAC1BqG,EAA0BnI,EAAOyF,gBACjCtF,EAASH,EAAOb,gBAAgBM,MAAK,YAAe,IAAZsD,EAAW,EAAXA,KACtCsF,GAAgBtF,EAAK8B,UAEvB,IAAI+D,EAAgB,GAChB5I,EAAO6E,OACT7E,EAAO6E,MAAMmB,KAAI,SAACH,GAAD,OAAO+C,EAAcC,KAAKhD,EAAEQ,SAE/CrB,GAAe4D,GAGJ,aAAT9G,GACF3B,EAASiB,GAAO3B,MAAK,YAAe,IAAZsD,EAAW,EAAXA,KAGtB,GAFA+B,GAAS/B,EAAK8B,YAEOiE,IAAjB9I,EAAO6E,OAAuB7E,EAAO6E,MAAMZ,OAAS,EAAG,CACzD,IAAI8E,EAAehG,EAAK8B,MAAMmE,MAC5B,SAAC/F,GAAD,OAAOA,EAAES,OAAS1D,EAAO6E,MAAM,GAAGwB,aAGfyC,IAAjBC,IAC4B,WAA1BA,EAAaE,SACfN,GAAS,2BACJD,IADG,IAENrC,KAAM0C,EAAarF,KACnB8E,OAAQ,EACRC,WAAY,MAGdE,GAAS,2BACJD,IADG,IAENrC,KAAM0C,EAAarF,KACnB8E,OAAQ,GACRC,WAAY,YAOvB,CAACzI,IAEJ,IAAMqE,GAAe,SAACX,GAAD,OAAU,SAACC,GAC9B,GAAY,QAARD,EAAgB,CAClB,IAAMuF,EAAWtD,SAASuD,cAAT,wBACEvF,EAAMC,OAAOC,MADf,OAEfsF,QAAQrH,KAGR6G,GADe,WAAbM,EACO,2BACJP,IADG,IAENrC,KAAM1C,EAAMC,OAAOC,MACnB2E,OAAQ,EACRC,WAAY,KAGL,2BACJC,IADG,IAENrC,KAAM1C,EAAMC,OAAOC,MACnB2E,OAAQ,GACRC,WAAY,SAIH,WAAT/E,GACFqE,EAAepE,EAAMC,OAAOC,OAGjB,eAATH,GACFuE,EAAiBtE,EAAMC,OAAOC,OAGhC8E,GAAS,2BAAKD,IAAN,kBAAchF,EAAOC,EAAMC,OAAOC,WAIxCuF,GAAgB,SAACnG,GACrBA,EAAEC,iBACF,IAAImG,GAAW,EACfrJ,EAAOwC,OAASV,EAEJ,YAARA,GACF9B,EAAO6E,MAAMyE,SAAQ,SAAAjD,GACdA,EAAKkD,WACRF,GAAW,MAIVA,EAMHG,MAAM,uCALNzJ,EAAmBC,GAAQP,MAAK,SAACC,GAC/BgI,QAOJ3H,EAAmBC,GAAQP,MAAK,SAACC,GAC/BgI,QAKA+B,GAAc,SAACxG,GACnBrC,EAAQiI,KAAK,8BACba,OAAO3I,SAAS+B,QAAO,IAGnB6G,GAA4B,SAAC1G,GAGjC,GAFAA,EAAEC,iBAEa,IAAXsF,IACkB,KAAhBV,EAEF,OADA0B,MAAM,kCACC,EAIX,GAAmB,IAAff,IACoB,KAAlBT,EAEF,OADAwB,MAAM,qCACC,EAIX,IAAMd,EAAQ,CACZlF,GAAIxD,EAAOwD,GACXoG,KAAM5J,EAAO4J,KACbxJ,iBAAkBJ,EAAOb,eACzBmJ,iBACAjC,QACAkC,SACAC,UACAC,gBVnG6B,SAACC,GAClC,IAAMtJ,EAAMC,eAAeC,QAAQ,OAEnC,OAAOC,IACJC,KADI,UACIP,EADJ,gCACuC,CAAEyJ,QAAOtJ,QACpDK,MAAK,SAACC,GAAD,OAAcA,KACnBC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,OUgG9BiK,CAAoBnB,GAAOjJ,MAAK,SAACC,GAC/BkI,GAAc,GAEdkC,YAAW,WACTlC,GAAc,GACdG,EAAe,IACfE,EAAiB,IACjBU,GAAS,2BAAKD,GAAN,IAAaH,MAAO,QAC3B,SAIDwB,GAAsB,SAAC9G,GAC3BA,EAAEC,iBV/EuB,SAAC/D,GAC5BU,QAAQC,IAAI,iBAAkBX,GAC9B,IAAMC,EAAMC,eAAeC,QAAQ,OAEnC,OAAOC,IACJC,KADI,UACIP,EADJ,wBAC+B,CAAEE,iBAAgBC,QACrDK,MAAK,SAACC,GAAD,OAAcA,KACnBC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,MU0E9BoK,CAAc5I,GAAO3B,MAAK,SAACC,GACzBR,EAAWkC,GAAO3B,MAAK,SAACC,GACtB,GAAIA,EACF,GAAIA,EAASqD,KAAKnD,MAGhBmH,GAAW,SAACC,GACV,OAAO,2BAAKA,GAAZ,IAAyBH,WAAY,YAElC,CAAC,IAAD,EACsCU,EACzC7H,EAASqD,KAAK+D,SADRH,EADH,EACGA,UAAWC,EADd,EACcA,QAASC,EADvB,EACuBA,WAI5BE,GAAW,SAACC,GACV,OAAO,2BACFA,GADL,IAEE5F,QACAuF,YACAC,UACAC,uBAKN1E,GAAS,GACTE,EAAU,kCAMZ4H,GAAc,SAACvG,GAAD,OAAU,SAACC,GAC7B,GAAIA,EAAMC,OAAOkC,QACfd,GAAe,GAAD,mBAAKD,IAAL,CAAkBpB,EAAMC,OAAOC,aACxC,CACL,IAAIyC,EAAoBvB,GAAYwB,QAClC,SAACF,GAAD,OAAUA,IAAS1C,EAAMC,OAAOC,SAElCmB,GAAesB,MAIb4D,GAAoB,WACxB,GAA2B,IAAvBnF,GAAYd,QAA2C,KAA3BiE,EAE9B,OADAsB,MAAM,uCACC,GV5GqB,SAChCW,EACAhL,EACAsG,EACAZ,GAEA,IAAMzF,EAAMC,eAAeC,QAAQ,OAEnC,OAAOC,IACJC,KADI,UACIP,EADJ,2BACkC,CACrCkL,YACAhL,iBACAsG,iBACAZ,QACAzF,QAEDK,MAAK,SAACC,GAAD,OAAcA,KACnBC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,OU8F9BwK,CACEpK,EAAO4J,KACP5J,EAAOb,eACP+I,EACAnD,IACAtF,MAAK,SAAC4K,GACNxK,QAAQC,IAAI,UAAWuK,GACvBzJ,EAAQiI,KAAK,eACba,OAAO3I,SAAS+B,QAAO,OAiY3B,OACE,kBAAC,WAAD,KACW,eAARhB,GA9XH,yBACEb,UAAU,aACVuC,GAAIiE,EACJ6C,SAAS,KACTrI,KAAK,SACLsI,kBAAgB,mBAChBC,cAAY,QAEZ,yBAAKvJ,UAAU,eAAegB,KAAK,YACjC,yBAAKhB,UAAU,iBACb,yBAAKA,UAAU,gBACZrB,GAASmC,EAAaK,GACvB,wBAAInB,UAAU,cAAcuC,GAAG,oBAA/B,QAGA,4BACE1B,KAAK,SACLb,UAAU,QACVwJ,eAAa,QACbC,aAAW,SAEX,0BAAMF,cAAY,QAAlB,UAGJ,yBAAKvJ,UAAU,cACb,yBAAKA,UAAU,qBACb,+BACE,qDAEF,4BACEwC,SAAU,SAACR,GAAD,OAAOkF,EAA0BlF,EAAEW,OAAOC,QACpD5C,UAAU,gBACVuC,GAAG,mBAEH,4BAAQuC,cAAY,EAAClC,MAAM,KAA3B,aAGC7D,GACC4E,EAAgBoB,KAAI,SAACG,EAAQF,GAC3B,OAAIE,IAAW+B,EAEX,4BAAQhC,IAAKD,EAAO0E,UAAQ,EAAC9G,MAAOsC,GACjCA,GAKL,4BAAQD,IAAKD,EAAOpC,MAAOsC,GACxBA,QAMb,yBAAKlF,UAAU,qBACb,+BACE,0CAGDmH,IACCA,GAAapC,KAAI,SAACK,EAAMJ,GAEtB,OADmBlB,GAAYiE,MAAK,SAACnD,GAAD,OAAOA,IAAMQ,EAAK3C,QAGlD,yBAAKzC,UAAU,aAAaiF,IAAKD,GAC/B,2BACExC,SAAUwG,KACVhJ,UAAU,mBACVa,KAAK,WACL+B,MAAOwC,EAAK3C,KACZF,GAAIyC,EACJH,SAAO,IAET,2BAAO7E,UAAU,mBAAmBsC,QAAS0C,GAC1CI,EAAK3C,OAMZ,yBAAKzC,UAAU,aAAaiF,IAAKD,GAC/B,2BACExC,SAAUwG,KACVhJ,UAAU,mBACVa,KAAK,WACL+B,MAAOwC,EAAK3C,KACZF,GAAIyC,IAEN,2BAAOhF,UAAU,mBAAmBsC,QAAS0C,GAC1CI,EAAK3C,YAOpB,yBAAKzC,UAAU,gBACb,4BACEa,KAAK,SACLb,UAAU,oBACVwJ,eAAa,SAHf,UAOA,4BACEpJ,QAAS6I,GACTjJ,UAAU,kBACVwJ,eAAa,SAHf,YAuRG,WAAR3I,GAzQH,yBACEb,UAAU,aACVuC,GAAIiE,EACJ6C,SAAS,KACTrI,KAAK,SACLsI,kBAAgB,mBAChBC,cAAY,QAEZ,yBAAKvJ,UAAU,eAAegB,KAAK,YACjC,yBAAKhB,UAAU,iBACb,yBAAKA,UAAU,gBACZrB,GAASmC,EAAaK,GACvB,wBAAInB,UAAU,cAAcuC,GAAG,oBAA/B,OACO,IACL,0BAAMnD,MAAO,CAAEE,MAAO,UACnBP,EAAOyB,MADV,IACkBzB,EAAO0B,OACjB,IAJV,MAKMI,EALN,KAOA,4BACEA,KAAK,SACLb,UAAU,QACVwJ,eAAa,QACbC,aAAW,SAEX,0BAAMF,cAAY,QAAlB,UAGJ,yBAAKvJ,UAAU,cAAf,6BAAuDa,EAAvD,QACA,yBAAKb,UAAU,gBACb,4BACEa,KAAK,SACLb,UAAU,oBACVwJ,eAAa,SAHf,UAOA,4BACEpJ,QAAS+H,GACTnI,UAAU,kBACVwJ,eAAa,SAHf,WAqOG,YAAR3I,GAvNH,yBACEb,UAAU,aACVuC,GAAIiE,EACJ6C,SAAS,KACTrI,KAAK,SACLsI,kBAAgB,mBAChBC,cAAY,QAEZ,yBAAKvJ,UAAU,eAAegB,KAAK,YACjC,yBAAKhB,UAAU,iBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,cAAcuC,GAAG,oBAA/B,gBACgB,IACd,0BAAMnD,MAAO,CAAEE,MAAO,UACnBP,EAAOyB,MADV,IACkBzB,EAAO0B,OACjB,IAJV,eAKeI,EALf,KAQA,4BACEA,KAAK,SACLb,UAAU,QACVwJ,eAAa,QACbC,aAAW,SAEX,0BAAMF,cAAY,QAAlB,UAGJ,yBAAKvJ,UAAU,cACb,yBAAKA,UAAU,qBACb,yBACEA,UAAU,sBACVgB,KAAK,QACL5B,MAAO,CAAE+F,QAASuB,EAAa,QAAU,SAH3C,gCAQA,2BAAOpE,QAAQ,eACb,kDAEF,2BACEE,SAAUY,GAAa,iBACvBvC,KAAK,OACLb,UAAU,eACVuC,GAAG,iBAGP,yBAAKvC,UAAU,qBACb,2BAAOsC,QAAQ,QACb,yCAGF,yBAAKtC,UAAU,oBACZ4D,IACC,4BACEpB,SAAUY,GAAa,QACvBpD,UAAU,gBACVuC,GAAG,QAEFqB,GAAMmB,KAAI,SAACH,EAAGI,GACb,MAAa,KAATI,IACER,EAAEnC,OAAS2C,GAEX,4BACEH,IAAKD,EACL0E,UAAQ,EACRC,YAAW/E,EAAEoD,SACbpF,MAAOgC,EAAEnC,MAERmC,EAAEnC,MAOT,4BACEwC,IAAKD,EACL2E,YAAW/E,EAAEoD,SACbpF,MAAOgC,EAAEnC,MAERmC,EAAEnC,YAQjB,yBACEzC,UAAU,oBACVZ,MAAO,CAAE+F,QAAoB,KAAXoC,GAAgB,QAAU,SAE5C,2BAAOjF,QAAQ,UACb,2CAEF,2BACEzB,KAAK,SACLb,UAAU,eACVuC,GAAG,SACHC,SAAUY,GAAa,UACvBR,MAAOiE,EACP+C,UAAQ,KAGZ,yBACE5J,UAAU,oBACVZ,MAAO,CAAE+F,QAAwB,KAAfqC,GAAoB,QAAU,SAEhD,2BAAOlF,QAAQ,cACb,oDAEF,2BACEzB,KAAK,SACLb,UAAU,eACVuC,GAAG,aACHC,SAAUY,GAAa,cACvBR,MAAOmE,EACP6C,UAAQ,KAGZ,yBAAK5J,UAAU,qBACb,2BAAOsC,QAAQ,SACb,0CAEF,8BACEE,SAAUY,GAAa,SACvBpD,UAAU,yBACVuC,GAAG,QACHsH,KAAK,IACLjH,MAAO0E,IAENA,MAIP,yBAAKtH,UAAU,gBACb,4BACEa,KAAK,SACLb,UAAU,oBACVwJ,eAAa,QACbpJ,QAASoI,IAJX,UAQA,4BACEpI,QAASsI,GACT1I,UAAU,mBAFZ,QAMA,4BACEI,QAAS+H,GACTnI,UAAU,kBACVwJ,eAAa,SAHf,wBAgEG,iBAAR3I,GAlDH,yBACEb,UAAU,aACVuC,GAAIiE,EACJ6C,SAAS,KACTrI,KAAK,SACLsI,kBAAgB,mBAChBC,cAAY,QAEZ,yBAAKvJ,UAAU,eAAegB,KAAK,YACjC,yBAAKhB,UAAU,iBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,cAAcuC,GAAG,oBAA/B,8BAGA,4BACE1B,KAAK,SACLb,UAAU,QACVwJ,eAAa,QACbC,aAAW,SAEX,0BAAMF,cAAY,QAAlB,UAGJ,yBAAKvJ,UAAU,cAAf,4BACA,yBAAKA,UAAU,gBACb,4BACEa,KAAK,SACLb,UAAU,oBACVwJ,eAAa,SAHf,UAOA,4BACEpJ,QAAS0I,GACT9I,UAAU,kBACVwJ,eAAa,SAHf,aCxmBNM,EAAQ,SAAC,GAAqB,IAAnB9E,EAAkB,EAAlBA,MAAOI,EAAW,EAAXA,KACtB,OACE,wBAAIH,IAAKD,GACNI,EAAKA,KADR,MACiBA,EAAKkD,SADtB,MACmClD,EAAKkC,QAK7ByC,EApBM,SAAC,GAAsB,IAApBnG,EAAmB,EAAnBA,MAAOoG,EAAY,EAAZA,MAC7B,OAAOpG,EAAMmB,KAAI,SAACK,EAAMJ,GAAP,OACfgF,IAAU5E,EAAKkD,SAAStF,OACtB,kBAAC,EAAD,CAAOgC,MAAOA,EAAOI,KAAMA,EAAMH,IAAKD,IAErCgF,EAGD,KAFE,kBAAC,EAAD,CAAOhF,MAAOA,EAAOI,KAAMA,EAAMH,IAAKD,QCmH/BiF,EAnHE,SAAChJ,GAAW,IACnBd,EAAUc,EAAVd,MADkB,EAEIyG,qBAAWrB,GAFf,mBAEnBM,EAFmB,KAEVC,EAFU,OAGEzF,mBAAS,IAHX,mBAGnBtB,EAHmB,KAGXuC,EAHW,OAIAjB,oBAAS,GAJT,mBAInB1B,EAJmB,KAIZuC,EAJY,OAKIb,mBAAS,IALb,mBAKnBc,EALmB,KAKTC,EALS,KAMlBwE,EAAeC,EAAfD,WAuBR,OACE,kBAAC,WAAD,KACGjH,GAASmC,EAAaK,GACD,GAArByE,EAAW5C,QACV,yBAAKhD,UAAU,OACb,yBAAKA,UAAU,wBACb,yBACEA,UAAU,sBACVgB,KAAK,QACL5B,MAAO,CAAE8K,UAAW,WAEpB,6DAKPtE,EAAW5C,OAAS,GACnB,yBAAKhD,UAAU,OACb,yBAAKA,UAAU,UACb,4BACEZ,MAAO,CAAE+K,MAAO,QAASC,aAAc,GACvCvJ,KAAK,SACLb,UAAU,2BACVqK,cAAY,QACZC,cAAY,kBALd,kBASA,2BAAOtK,UAAU,2CACf,+BACE,4BACE,wBAAIO,MAAM,OAAV,KACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,cACA,wBAAIA,MAAM,OAAV,oBACA,wBAAIA,MAAM,OAAV,sBAGJ,+BACGqF,EAAWb,KAAI,SAAChG,EAAQiG,GACvB,OACE,wBACEuF,UAASxL,EAAOwD,GAChBA,GAAG,cACH0C,IAAKD,EACL5E,QAAS,kBAAMkB,EAAUvC,IACzBsL,cAAY,QACZC,cAAY,2BAEZ,wBAAI/J,MAAM,OAAOyE,EAAQ,GACzB,4BAAKjG,EAAOyB,OACZ,4BAAKzB,EAAO0B,OACZ,4BAAK1B,EAAOyC,cACZ,4BACE,4BACGzC,EAAO6E,OACN,kBAAC,EAAD,CAAcA,MAAO7E,EAAO6E,UAIlC,4BAAK7E,EAAOyF,wBAS5B,kBAAC,EAAD,CACEgC,QAAQ,yBACRzH,OAAQA,EACR8B,KAAK,UACL4F,gBA/FkB,WACtBxI,EAAWkC,GAAO3B,MAAK,SAACC,GACtB,GAAIA,EACF,GAAIA,EAASqD,KAAKnD,MAChBuC,GAAS,GACTE,EAAU3C,EAASqD,KAAKnD,WACnB,CAAC,IAAD,EACsC2H,EACzC7H,EAASqD,KAAK+D,SADRH,EADH,EACGA,UAAWC,EADd,EACcA,QAASC,EADvB,EACuBA,WAG5BE,GAAW,SAACC,GACV,OAAO,2BAAKA,GAAZ,IAAyB5F,QAAOuF,YAAWC,UAASC,uBAIxD1E,GAAS,GACTE,EAAU,iCAiFZ,kBAAC,EAAD,CACEoF,QAAQ,gBACRzH,OAAQA,EACR8B,KAAK,gBACLV,MAAOA,MCCAqK,EA/GC,SAACvJ,GAAW,IAAD,EACK2F,qBAAWrB,GADhB,mBAClBM,EADkB,KACTC,EADS,OAEGzF,mBAAS,IAFZ,mBAElBtB,EAFkB,KAEVuC,EAFU,KA8BjBqE,EAAYE,EAAZF,QAER,OACE,kBAAC,WAAD,KACqB,GAAlBA,EAAQ3C,QACP,yBAAKhD,UAAU,OACb,yBAAKA,UAAU,wBACb,yBACEA,UAAU,sBACVgB,KAAK,QACL5B,MAAO,CAAE8K,UAAW,WAEpB,8DAKPvE,EAAQ3C,OAAS,GAChB,yBAAKhD,UAAU,OACb,yBAAKA,UAAU,UACb,2BAAOA,UAAU,2CACf,+BACE,4BACE,wBAAIO,MAAM,OAAV,KACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,cACA,wBAAIA,MAAM,OAAV,oBACA,wBAAIA,MAAM,OAAV,sBAGJ,+BACGoF,EAAQZ,KAAI,SAAChG,EAAQiG,GACpB,OACE,wBACEuF,UAASxL,EAAOwD,GAChBA,GAAG,cACH0C,IAAKD,EACL5E,QAAS,kBAAMkB,EAAUvC,IACzBsL,cAAY,QACZC,cAAY,iBAEZ,wBAAI/J,MAAM,OAAOyE,EAAQ,GACzB,4BAAKjG,EAAOyB,OACZ,4BAAKzB,EAAO0B,OACZ,4BAAK1B,EAAOyC,cACZ,4BACE,4BACGzC,EAAO6E,OACN,kBAAC,EAAD,CAAcA,MAAO7E,EAAO6E,UAIlC,4BAAK7E,EAAOyF,gBACZ,4BACE,4BACE3D,KAAK,SACLb,UAAU,4BAFZ,iBAelB,kBAAC,EAAD,CACEwG,QAAQ,eACRzH,OAAQA,EACR8B,KAAK,WACL4F,gBApGiB,WACrBxI,EAAWgD,EAAMd,OAAO3B,MAAK,SAACC,GAC5B,GAAIA,EACF,GAAIA,EAASqD,KAAKnD,MAChBC,QAAQC,IAAI,mBAAoBJ,EAASqD,KAAKnD,WACzC,CAAC,IAAD,EACsC2H,EACzC7H,EAASqD,KAAK+D,SADRH,EADH,EACGA,UAAWC,EADd,EACcA,QAASC,EADvB,EACuBA,WAI5BE,GAAW,SAACC,GACV,OAAO,2BACFA,GADL,IAEE5F,MAAOc,EAAMd,MACbuF,YACAC,UACAC,uBAKNhH,QAAQC,IAAI,yBAgFZsB,MAAOc,EAAMd,UCoDNX,eA3JC,SAACyB,GAAW,IAAD,EACCZ,oBAAS,GADV,mBAClB1B,EADkB,KACXuC,EADW,OAEKb,mBAAS,IAFd,mBAElBc,EAFkB,KAERC,EAFQ,OAGKwF,qBAAWrB,GAHhB,mBAGlBM,EAHkB,KAGTC,EAHS,OAIGzF,mBAAS,IAJZ,mBAIlBtB,EAJkB,KAIVuC,EAJU,KAMzB,QAAoBuG,IAAhB5G,EAAMd,MACR,IAAIA,EAAQc,EAAMd,WAEdA,EAAQ,gBAGdyB,qBAAU,WACRkE,GAAW,SAACC,GACV,OAAO,2BACFA,GADL,IAEE5F,eAGH,IAEH,IAAMsK,EAAiB,WACrBxM,EAAWkC,GAAO3B,MAAK,SAACC,GACtB,GAAIA,EACF,GAAIA,EAASqD,KAAKnD,MAChBuC,GAAS,GACTE,EAAU3C,EAASqD,KAAKnD,WACnB,CAAC,IAAD,EACsC2H,EACzC7H,EAASqD,KAAK+D,SADRH,EADH,EACGA,UAAWC,EADd,EACcA,QAASC,EADvB,EACuBA,WAG5BE,GAAW,SAACC,GACV,OAAO,2BAAKA,GAAZ,IAAyB5F,QAAOuF,YAAWC,UAASC,uBAIxD1E,GAAS,GACTE,EAAU,+BAKRsE,EAAcG,EAAdH,UAER,OACE,kBAAC,WAAD,KACG/G,GAASmC,EAAaK,GAEF,GAApBuE,EAAU1C,QACT,yBAAKhD,UAAU,OACb,yBAAKA,UAAU,wBACb,yBACEA,UAAU,sBACVgB,KAAK,QACL5B,MAAO,CAAE8K,UAAW,WAEpB,sDAKPxE,EAAU1C,OAAS,GAClB,yBAAKhD,UAAU,OACb,yBAAKA,UAAU,UACb,2BAAOA,UAAU,2CACf,+BACE,4BACE,wBAAIO,MAAM,OAAV,KACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,cACA,wBAAIA,MAAM,OAAV,oBACA,wBAAIA,MAAM,OAAV,oBACA,sCAGJ,+BACGmF,EAAUX,KAAI,SAAChG,EAAQiG,GACtB,OACE,wBAAIuF,UAASxL,EAAOwD,GAAIA,GAAG,cAAc0C,IAAKD,GAC5C,wBAAIzE,MAAM,OAAOyE,EAAQ,GACzB,wBACE5E,QAAS,kBAAMkB,EAAUvC,IACzBsL,cAAY,QACZC,cAAY,iBAEXvL,EAAOyB,OAEV,wBACEJ,QAAS,kBAAMkB,EAAUvC,IACzBsL,cAAY,QACZC,cAAY,iBAEXvL,EAAO0B,OAEV,wBACEL,QAAS,kBAAMkB,EAAUvC,IACzBsL,cAAY,QACZC,cAAY,iBAEXvL,EAAOyC,cAEV,wBACEpB,QAAS,kBAAMkB,EAAUvC,IACzBsL,cAAY,QACZC,cAAY,iBAEZ,4BACGvL,EAAO6E,OACN,kBAAC,EAAD,CAAcA,MAAO7E,EAAO6E,UAIlC,wBACExD,QAAS,kBAAMkB,EAAUvC,IACzBsL,cAAY,QACZC,cAAY,iBAEXvL,EAAOyF,gBAEV,4BACE,4BACEpE,QAAS,kBAAMkB,EAAUvC,IACzB8B,KAAK,SACLb,UAAU,2BACVqK,cAAY,QACZC,cAAY,cALd,iBAkBlB,kBAAC,EAAD,CACE9D,QAAQ,eACRzH,OAAQA,EACR8B,KAAK,UACL4F,gBAAiBgE,IAEnB,kBAAC,EAAD,CACEjE,QAAQ,YACRzH,OAAQA,EACR8B,KAAK,cACL4F,gBAAiBgE,QC5BVjL,eA1HI,SAACyB,GAAW,IAAD,EACIZ,oBAAS,GADb,mBACrBC,EADqB,KACXe,EADW,KAG5BO,qBAAU,WACJxD,eAAeC,QAAQ,QAEzBgD,GAAY,KAEb,IAQH,OAAIf,EACK,kBAAC,IAAD,CAAUL,GAAG,MAIpB,kBAAC,EAAD,KACE,kBAAC,WAAD,KACE,kBAAC,EAAD,CAAYR,eAbD,WACfrB,eAAe8D,QAAQ,MAAO,IAC9B9D,eAAe+D,QACfd,GAAY,IAU8B3B,YAAY,IAClD,6BAAS6C,GAAG,QACV,yBAAKvC,UAAU,YAAYZ,MAAO,CAAEsL,SAAU,SAC5C,yBAAK1K,UAAU,OACb,yBAAKA,UAAU,YAAYZ,MAAO,CAAEiD,MAAO,SACzC,6BACE,yBACErC,UAAU,wBACVuC,GAAG,UACHvB,KAAK,UACL5B,MAAO,CAAEuL,gBAAiB,UAE1B,uBACE3K,UAAU,2BACVuC,GAAG,eACH8H,cAAY,MACZO,KAAK,YACL5J,KAAK,MACL6J,gBAAc,WACdC,gBAAc,QAPhB,YAWA,uBACE9K,UAAU,oBACVuC,GAAG,kBACH8H,cAAY,MACZO,KAAK,eACL5J,KAAK,MACL6J,gBAAc,cACdC,gBAAc,SAPhB,WAWA,uBACE9K,UAAU,oBACVuC,GAAG,gBACH8H,cAAY,MACZO,KAAK,aACL5J,KAAK,MACL6J,gBAAc,YACdC,gBAAc,SAPhB,eAaJ,yBACE9K,UAAU,gCACVuC,GAAG,kBAEH,yBACEvC,UAAU,0CACVuC,GAAG,WACHvB,KAAK,WACLsI,kBAAgB,gBAEhB,yBAAKtJ,UAAU,8CACb,kBAAC,EAAD,CAASG,MAAM,mBAEjB,kBAAC,IAAD,CAAMF,GAAG,gBAAgBb,MAAO,CAAEG,eAAgB,SAChD,4BACEsB,KAAK,SACLb,UAAU,oCAFZ,cAQJ,yBACEA,UAAU,8BACVuC,GAAG,cACHvB,KAAK,WACLsI,kBAAgB,mBAEhB,yBAAKtJ,UAAU,8CACb,kBAAC,EAAD,CAASG,MAAM,oBAGnB,yBACEH,UAAU,8BACVuC,GAAG,YACHvB,KAAK,WACLsI,kBAAgB,iBAEhB,yBAAKtJ,UAAU,8CACb,kBAAC,EAAD,CAAUG,MAAM,8BCuBvBX,eApII,SAACyB,GAAW,IAAD,EACIZ,oBAAS,GADb,mBACrBC,EADqB,KACXe,EADW,KAEtB0J,EAAYC,cAAcC,OAC1BC,EAAc,IAAIC,gBAAgBJ,GAAWK,IAAI,UACjDC,EAAoBH,EAAyB,GAAX,SAClCI,EAAkC,WAAfJ,EAA2B,SAAW,GACzDK,EAAmC,YAAfL,EAA4B,SAAW,GAC3DM,EAAwBN,EAAuB,GAAT,OACtCO,EAAsC,WAAfP,EAA2B,OAAS,GAC3DQ,EAAuC,YAAfR,EAA4B,OAAS,GAEnEtJ,qBAAU,WACRhD,QAAQC,IAAI,cAAeqM,GAEvB9M,eAAeC,QAAQ,QAEzBgD,GAAY,KAEb,IAQH,OAAIf,EACK,kBAAC,IAAD,CAAUL,GAAG,MAIpB,kBAAC,EAAD,KACE,kBAAC,WAAD,KACE,kBAAC,EAAD,CAAYR,eAbD,WACfrB,eAAe8D,QAAQ,MAAO,IAC9B9D,eAAe+D,QACfd,GAAY,IAU8B3B,YAAY,IAClD,6BAAS6C,GAAG,QACV,yBAAKvC,UAAU,YAAYZ,MAAO,CAAEsL,SAAU,SAC5C,yBAAK1K,UAAU,OACb,yBAAKA,UAAU,YAAYZ,MAAO,CAAEiD,MAAO,SACzC,6BACE,yBACErC,UAAU,wBACVuC,GAAG,UACHvB,KAAK,UACL5B,MAAO,CAAEuL,gBAAiB,UAE1B,uBACE3K,UAAS,4BAAuBqL,GAChC9I,GAAG,eACH8H,cAAY,MACZO,KAAK,YACL5J,KAAK,MACL6J,gBAAc,WACdC,gBAAc,QAPhB,YAWA,uBACE9K,UAAS,4BAAuBsL,GAChC/I,GAAG,kBACH8H,cAAY,MACZO,KAAK,eACL5J,KAAK,MACL6J,gBAAc,cACdC,gBAAc,SAPhB,WAWA,uBACE9K,UAAS,4BAAuBuL,GAChChJ,GAAG,gBACH8H,cAAY,MACZO,KAAK,aACL5J,KAAK,MACL6J,gBAAc,YACdC,gBAAc,SAPhB,eAaJ,yBACE9K,UAAU,gCACVuC,GAAG,kBAEH,yBACEvC,UAAS,wBAAmBwL,EAAnB,YAA2CH,EAA3C,kBACT9I,GAAG,WACHvB,KAAK,WACLsI,kBAAgB,gBAEhB,yBAAKtJ,UAAU,8CACb,kBAAC,EAAD,CAASG,MAAM,iBAEjB,kBAAC,IAAD,CAAMF,GAAG,gBAAgBb,MAAO,CAAEG,eAAgB,SAChD,4BACEsB,KAAK,SACLb,UAAU,oCAFZ,cAQJ,yBACEA,UAAS,wBAAmByL,EAAnB,YAA2CH,EAA3C,kBACT/I,GAAG,cACHvB,KAAK,WACLsI,kBAAgB,mBAEhB,yBAAKtJ,UAAU,8CACb,kBAAC,EAAD,CAASG,MAAM,kBAGnB,yBACEH,UAAS,wBAAmB0L,EAAnB,YAA4CH,EAA5C,kBACThJ,GAAG,YACHvB,KAAK,WACLsI,kBAAgB,iBAEhB,yBAAKtJ,UAAU,8CACb,kBAAC,EAAD,CAAUG,MAAM,4BCGvBX,eA1HH,SAACyB,GAAW,IAAD,EACWZ,oBAAS,GADpB,mBACdC,EADc,KACJe,EADI,KAGrBO,qBAAU,WACJxD,eAAeC,QAAQ,QAEzBgD,GAAY,KAEb,IAQH,OAAIf,EACK,kBAAC,IAAD,CAAUL,GAAG,MAIpB,kBAAC,EAAD,KACE,kBAAC,WAAD,KACE,kBAAC,EAAD,CAAYR,eAbD,WACfrB,eAAe8D,QAAQ,MAAO,IAC9B9D,eAAe+D,QACfd,GAAY,IAU8B3B,YAAY,IAClD,6BAAS6C,GAAG,QACV,yBAAKvC,UAAU,YAAYZ,MAAO,CAAEsL,SAAU,SAC5C,yBAAK1K,UAAU,OACb,yBAAKA,UAAU,YAAYZ,MAAO,CAAEiD,MAAO,SACzC,6BACE,yBACErC,UAAU,wBACVuC,GAAG,UACHvB,KAAK,UACL5B,MAAO,CAAEuL,gBAAiB,UAE1B,uBACE3K,UAAU,2BACVuC,GAAG,eACH8H,cAAY,MACZO,KAAK,YACL5J,KAAK,MACL6J,gBAAc,WACdC,gBAAc,QAPhB,YAWA,uBACE9K,UAAU,oBACVuC,GAAG,kBACH8H,cAAY,MACZO,KAAK,eACL5J,KAAK,MACL6J,gBAAc,cACdC,gBAAc,SAPhB,WAWA,uBACE9K,UAAU,oBACVuC,GAAG,gBACH8H,cAAY,MACZO,KAAK,aACL5J,KAAK,MACL6J,gBAAc,YACdC,gBAAc,SAPhB,eAaJ,yBACE9K,UAAU,gCACVuC,GAAG,kBAEH,yBACEvC,UAAU,0CACVuC,GAAG,WACHvB,KAAK,WACLsI,kBAAgB,gBAEhB,yBAAKtJ,UAAU,8CACb,kBAAC,EAAD,CAASG,MAAM,4BAEjB,kBAAC,IAAD,CAAMF,GAAG,gBAAgBb,MAAO,CAAEG,eAAgB,SAChD,4BACEsB,KAAK,SACLb,UAAU,oCAFZ,cAQJ,yBACEA,UAAU,8BACVuC,GAAG,cACHvB,KAAK,WACLsI,kBAAgB,mBAEhB,yBAAKtJ,UAAU,8CACb,kBAAC,EAAD,CAASG,MAAM,6BAGnB,yBACEH,UAAU,8BACVuC,GAAG,YACHvB,KAAK,WACLsI,kBAAgB,iBAEhB,yBAAKtJ,UAAU,8CACb,kBAAC,EAAD,CAAUG,MAAM,uCCJvBwL,EA3GD,WAAO,IAAD,EACQtL,oBAAS,GADjB,mBACX1B,EADW,KACJuC,EADI,OAEYb,mBAAS,IAFrB,mBAEXc,EAFW,KAEDC,EAFC,OAGcf,oBAAS,GAHvB,mBAGXC,EAHW,KAGDe,EAHC,OAIUhB,mBAAS,CACnCuL,SAAU,GACVC,SAAU,KANM,mBAIXnK,EAJW,KAIHC,EAJG,KASViK,EAAuBlK,EAAvBkK,SAAUC,EAAanK,EAAbmK,SAEZ9J,EAAe,SAACC,GACpBA,EAAEC,iBlBfiB,SAAC,GAA4B,IAA1B2J,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAClC,OAAOvN,IACJC,KADI,UACIP,EADJ,mBAC0B,CAC7B4N,WACAC,aAEDrN,MAAK,SAACC,GAAD,OAAcA,KACnBC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,MkBU9BmN,CAAQpK,GAAQlD,MAAK,YAAe,IAAZsD,EAAW,EAAXA,KAClBA,EAAK3D,MACPC,eAAe8D,QAAQ,MAAOJ,EAAK3D,KACnCkD,GAAY,IAEVS,EAAKnD,QACPuC,GAAS,GACTE,EAAUU,EAAKnD,YAKfyE,EAAe,SAACX,GAAD,OAAU,SAACC,GAC9Bf,EAAU,2BAAKD,GAAN,kBAAee,EAAOC,EAAMC,OAAOC,WAkE9C,OAAItC,GAAYlC,eAAeC,QAAQ,OAC9B,kBAAC,IAAD,CAAU4B,GAAG,gBAIpB,kBAAC,WAAD,KACE,kBAAC,EAAD,CAAYP,YAAY,IACxB,0BAAMsB,KAAK,OAAOhB,UAAU,YAAYZ,MAAO,CAAEsL,SAAU,SArE7D,yBAAK1K,UAAU,WAAWZ,MAAO,CAAE2M,UAAW,KAC5C,yBAAK/L,UAAU,8BACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,eAAf,0BACA,yBAAKA,UAAU,aACZrB,GAASmC,EAAaK,GACvB,0BAAM6K,OAAO,GAAG9G,OAAO,IACrB,yBAAKlF,UAAU,kBACb,2BACEsC,QAAQ,WACRtC,UAAU,yCAFZ,YAMA,yBAAKA,UAAU,YACb,2BACEwC,SAAUY,EAAa,YACvBvC,KAAK,OACL0B,GAAG,WACHvC,UAAU,eACVyC,KAAK,WACLmH,UAAQ,EACRqC,WAAS,EACTrJ,MAAOgJ,MAKb,yBAAK5L,UAAU,kBACb,2BACEsC,QAAQ,WACRtC,UAAU,yCAFZ,YAMA,yBAAKA,UAAU,YACb,2BACEwC,SAAUY,EAAa,YACvBvC,KAAK,WACL0B,GAAG,WACHvC,UAAU,eACVyC,KAAK,WACLmH,UAAQ,EACRhH,MAAOiJ,MAKb,yBAAK7L,UAAU,wBACb,4BAAQI,QAAS2B,EAAc/B,UAAU,mBAAzC,oBCvCHkM,EApCA,WACb,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOrM,KAAK,mBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,eACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,iBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,mBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,iBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,eACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,eACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,QACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,UC7BJsM,EAAcC,QACW,cAA7B3D,OAAO3I,SAASuM,UAEe,UAA7B5D,OAAO3I,SAASuM,UAEhB5D,OAAO3I,SAASuM,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACThO,MAAK,SAAAqO,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB7M,QACfwM,UAAUC,cAAcO,YAI1BtO,QAAQC,IACN,iHAKE4N,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlBjO,QAAQC,IAAI,sCAGR4N,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5BnO,OAAM,SAAAC,GACLC,QAAQD,MAAM,4CAA6CA,MC3FjE0O,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF7I,SAAS8I,eAAe,SDanB,SAAkBf,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIe,IAAIC,IAAwBjF,OAAO3I,SAAS8K,MACpD+C,SAAWlF,OAAO3I,SAAS6N,OAIvC,OAGFlF,OAAOmF,iBAAiB,QAAQ,WAC9B,IAAMpB,EAAK,UAAMkB,IAAN,sBAEPvB,IAgEV,SAAiCK,EAAOC,GAEtCoB,MAAMrB,EAAO,CACXsB,QAAS,CAAE,iBAAkB,YAE5BtP,MAAK,SAAAC,GAEJ,IAAMsP,EAActP,EAASqP,QAAQ1C,IAAI,gBAEnB,MAApB3M,EAAS8C,QACO,MAAfwM,IAA8D,IAAvCA,EAAYC,QAAQ,cAG5CtB,UAAUC,cAAcsB,MAAMzP,MAAK,SAAAqO,GACjCA,EAAaqB,aAAa1P,MAAK,WAC7BiK,OAAO3I,SAAS+B,eAKpB0K,EAAgBC,EAAOC,MAG1B/N,OAAM,WACLE,QAAQC,IACN,oEAvFAsP,CAAwB3B,EAAOC,GAI/BC,UAAUC,cAAcsB,MAAMzP,MAAK,WACjCI,QAAQC,IACN,iHAMJ0N,EAAgBC,EAAOC,OCnC/BE,K","file":"static/js/main.dc27a546.chunk.js","sourcesContent":["// export const API = \"http://localhost:8888/api\";\nexport const API = \"https://www.tnfpapp.org/checkin/api\";\n\n","import { API } from \"../../config\";\nimport axios from \"axios\";\n\nexport const doLogin = ({ username, password }) => {\n  return axios\n    .post(`${API}/user_login.php`, {\n      username,\n      password,\n    })\n    .then((response) => response)\n    .catch((error) => console.log(error));\n};\n\nexport const getClients = (placeOfService) => {\n  const jwt = sessionStorage.getItem(\"jwt\");\n\n  return axios\n    .post(`${API}/client_list.php`, {\n      jwt,\n      placeOfService,\n    })\n    .then((response) => {\n      return response;\n    })\n    .catch((error) => console.log(error));\n};\n\nexport const saveClient = (client) => {\n  const jwt = sessionStorage.getItem(\"jwt\");\n\n  return axios\n    .post(`${API}/client_save.php`, {\n      client,\n      jwt,\n    })\n    .then((response) => response)\n    .catch((error) => console.log(error));\n};\n\nexport const updateClientStatus = (client) => {\n  const jwt = sessionStorage.getItem(\"jwt\");\n\n  return axios\n    .post(`${API}/client_update_status.php`, { client, jwt })\n    .then((response) => response)\n    .catch((error) => console.log(error));\n};\n\nexport const getClient = (email) => {\n  const jwt = sessionStorage.getItem(\"jwt\");\n\n  return axios\n    .post(`${API}/client_detail.php`, { email, jwt })\n    .then((response) => response)\n    .catch((error) => console.log(error));\n};\n\nexport const getClientById = (id) => {\n  const jwt = sessionStorage.getItem(\"jwt\");\n\n  return axios\n    .post(`${API}/client_detail_by_id.php`, { id, jwt })\n    .then((response) => response)\n    .catch((error) => console.log(error));\n};\n\nexport const updateClientInfo = (client) => {\n  const jwt = sessionStorage.getItem(\"jwt\");\n\n  return axios\n    .post(`${API}/client_update_info.php`, { client, jwt })\n    .then((response) => response)\n    .catch((error) => console.log(error));\n};\n\nexport const registerClient = (client) => {\n  const jwt = sessionStorage.getItem(\"jwt\");\n\n  return axios\n    .post(`${API}/client_register.php`, { client, jwt })\n    .then((response) => response)\n    .catch((error) => console.log(error));\n};\n\nexport const saveClientVisitItem = (visit) => {\n  const jwt = sessionStorage.getItem(\"jwt\");\n\n  return axios\n    .post(`${API}/client_save_visit_items.php`, { visit, jwt })\n    .then((response) => response)\n    .catch((error) => console.log(error));\n};\n\nexport const saveClientVisitItems = (visit) => {\n  const jwt = sessionStorage.getItem(\"jwt\");\n\n  return axios\n    .post(`${API}/save_visit_items.php`, { visit, jwt })\n    .then((response) => response)\n    .catch((error) => console.log(error));\n};\n\nexport const getPlaceOfService = () => {\n  const jwt = sessionStorage.getItem(\"jwt\");\n\n  return axios\n    .post(`${API}/item_placeofservice.php`, { jwt })\n    .then((response) => response)\n    .catch((error) => console.log(error));\n};\n\nexport const getItems = (place_of_service) => {\n  const jwt = sessionStorage.getItem(\"jwt\");\n\n  return axios\n    .post(`${API}/items.php`, { place_of_service, jwt })\n    .then((response) => response)\n    .catch((error) => console.log(error));\n};\n\nexport const clearCheckout = (placeOfService) => {\n  console.log('placeOfService', placeOfService)\n  const jwt = sessionStorage.getItem(\"jwt\");\n\n  return axios\n    .post(`${API}/client_checkout.php`, { placeOfService, jwt })\n    .then((response) => response)\n    .catch((error) => console.log(error));\n};\n\nexport const getVisitItems = (client_id) => {\n  const jwt = sessionStorage.getItem(\"jwt\");\n\n  return axios\n    .post(`${API}/visit_items.php`, { client_id, jwt })\n    .then((response) => response)\n    .catch((error) => console.log(error));\n};\n\nexport const updateCheckinItems = (\n  client_id,\n  placeOfService,\n  methodOfPickup,\n  items\n) => {\n  const jwt = sessionStorage.getItem(\"jwt\");\n\n  return axios\n    .post(`${API}/update_visit_items.php`, {\n      client_id,\n      placeOfService,\n      methodOfPickup,\n      items,\n      jwt,\n    })\n    .then((response) => response)\n    .catch((error) => console.log(error));\n};\n","import React, { Fragment } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nconst Navigation = ({ logoutFunction, logoutLink, history }) => {\n  const isActive = (history, path) => {\n    if (history.location.pathname === path) {\n      return { color: \"#ff9900\", textDecoration: \"none\" };\n    } else {\n      return { color: \"#FFFFFF\", textDecoration: \"none\" };\n    }\n  };\n\n  return (\n    <nav className=\"navbar navbar-dark bg-dark\">\n      {!logoutLink && (\n        <Link style={style.navLink} to=\"/storehouse\">\n          Gods Vast Resources\n        </Link>\n      )}\n      {logoutLink && (\n        <Fragment>\n          <Link\n            style={isActive(history, \"/storehouse\")}\n            to={{\n              pathname: \"/storehouse\",\n              state: {\n                place: \"Clothing Bank\",\n              },\n            }}\n          >\n            Clothing Bank\n          </Link>\n          <Link\n            style={isActive(history, \"/foodpantry\")}\n            to={{\n              pathname: \"/foodpantry\",\n              state: {\n                place: \"Food pantry\",\n              },\n            }}\n          >\n            Food Pantry\n          </Link>\n          <Link\n            style={isActive(history, \"/mrc\")}\n            to={{\n              pathname: \"/mrc\",\n              state: {\n                place: \"Mobile resource center\",\n              },\n            }}\n          >\n            Mobile Resource Center\n          </Link>\n          <Link style={style.navLink} onClick={logoutFunction} to=\"#\">\n            Log out\n          </Link>\n        </Fragment>\n      )}\n    </nav>\n  );\n};\n\nconst style = {\n  navLink: {\n    color: \"#FFFFFF\",\n    textDecoration: \"none\",\n  },\n};\n\nexport default withRouter(Navigation);\n","import React, { Fragment, useState } from \"react\";\nimport { Link, Redirect, withRouter } from \"react-router-dom\";\n\nconst ViewClient = ({ client }) => {\n  const [redirect, setRedirect] = useState(false);\n\n  if (redirect) {\n    return <Redirect to=\"/\" />;\n  }\n\n  const buttons = () => (\n    <div className=\"row\" style={{ paddingTop: 15 }}>\n      <div className=\"col-sm\">\n        <Link\n          to={{\n            pathname: \"/placeofservice\",\n            state: {\n              client,\n            },\n          }}\n          style={{ textDecoration: \"none\" }}\n        >\n          <button type=\"button\" className=\"btn btn-success btn-lg btn-block\">\n            Check In\n          </button>\n        </Link>\n      </div>\n      <div className=\"col-sm\">\n        <Link\n          to={{\n            pathname: \"/updateclient\",\n            state: {\n              client,\n            },\n          }}\n          style={{ textDecoration: \"none\" }}\n        >\n          <button type=\"button\" className=\"btn btn-primary btn-lg btn-block\">\n            Update Info\n          </button>\n        </Link>\n      </div>\n    </div>\n  );\n\n  return (\n    <Fragment>\n      <div className=\"row\">\n        <div className=\"col-sm\">\n          <table className=\"table table-bordered table-striped mb-0\">\n            <thead>\n              <tr>\n                <th scope=\"col\">First</th>\n                <th scope=\"col\">Last</th>\n                <th scope=\"col\">Address</th>\n                <th scope=\"col\">Email</th>\n                <th scope=\"col\">Phone</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>{client.fname}</td>\n                <td>{client.lname}</td>\n                <td>{client.address}</td>\n                <td>{client.email}</td>\n                <td>{client.phone}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n      {buttons()}\n    </Fragment>\n  );\n};\n\nexport default withRouter(ViewClient);\n","import React from \"react\";\n\nexport const errorMessage = (message) => (\n  <div className=\"alert alert-danger\" role=\"alert\">\n    <b>Error!</b> {message}\n  </div>\n);\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport { Redirect, withRouter, Link } from \"react-router-dom\";\nimport { getClient } from \"./common/apiCore\";\nimport Navigation from \"./common/Navigation\";\nimport ViewClient from \"./ViewClient\";\nimport { errorMessage } from \"./common/Error\";\n\nconst SearchClient = (props) => {\n  const [error, setError] = useState(false);\n  const [errorMsg, setErrMsg] = useState(\"\");\n  const [redirect, setRedirect] = useState(false);\n  const [client, setClient] = useState({});\n  const [values, setValues] = useState({\n    email: \"\",\n    status: \"checkin\",\n    familyNumber: \"0\",\n    specificRequest: [],\n  });\n\n  const { email, specificRequest } = values;\n\n  useEffect(() => {\n    if (sessionStorage.getItem(\"jwt\")) {\n    } else {\n      setRedirect(true);\n    }\n\n    if (props.location.reload) {\n      getClient(props.location.email).then((response) => {\n        if (response) {\n          if (response.data.error) {\n            setError(true);\n            setErrMsg(response.data.error);\n          } else {\n            setError(false);\n            setClient(response.data.client);\n          }\n        } else {\n          setError(true);\n          setErrMsg(\"No response from server\");\n        }\n      });\n    }\n  }, []);\n\n  const doLogout = () => {\n    sessionStorage.setItem(\"jwt\", \"\");\n    sessionStorage.clear();\n    setRedirect(true);\n  };\n\n  if (redirect) {\n    return <Redirect to=\"/\" />;\n  }\n\n  const handleChange = (name) => (event) => {\n    if (name == \"specificRequest\") {\n      setValues({\n        ...values,\n        specificRequest: [...specificRequest, event.target.value],\n      });\n    } else {\n      setValues({ ...values, [name]: event.target.value });\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (email !== \"\") {\n      getClient(email).then((response) => {\n        if (response) {\n          if (response.data.error) {\n            setError(true);\n            setErrMsg(response.data.error);\n          } else {\n            setError(false);\n            setClient(response.data.client);\n          }\n        } else {\n          setError(true);\n          setErrMsg(\"No response from server\");\n        }\n      });\n    } else {\n      setError(true);\n      setErrMsg(\"Email address must not be blank\");\n    }\n  };\n\n  const form = () => (\n    <form style={{ padding: 15 }}>\n      <div className=\"form-row\">\n        <div className=\"form-group mx-auto\" style={{ width: 400 }}>\n          <label htmlFor=\"inputEmail\">\n            <strong>Email or Unique ID</strong>\n          </label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            id=\"inputEmail\"\n            onChange={handleChange(\"email\")}\n          />\n          <br />\n          <div className=\"form-row\">\n            <div className=\"col-sm-6\">\n              <Link\n                style={{ textDecoration: \"none\" }}\n                to={{\n                  pathname: \"/registerclient\",\n                }}\n              >\n                <button className=\"btn btn-info btn-lg btn-block\">\n                  Register Client\n                </button>\n              </Link>\n            </div>\n            <div className=\"col-sm-6\">\n              <button\n                onClick={handleSubmit}\n                className=\"btn btn-success btn-lg btn-block\"\n              >\n                Search Client\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n\n  return (\n    <Fragment>\n      <Navigation logoutFunction={doLogout} logoutLink={true} />\n      {error && errorMessage(errorMsg)}\n      {form()}\n      {Object.entries(client).length > 0 && <ViewClient client={client} />}\n    </Fragment>\n  );\n};\n\nexport default withRouter(SearchClient);\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport Navigation from \"./common/Navigation\";\nimport { updateClientInfo } from \"./common/apiCore\";\nimport { errorMessage } from \"./common/Error\";\n\nconst UpdateClient = ({ location }) => {\n  const [error, setError] = useState(false);\n  const [errorMsg, setErrMsg] = useState(\"\");\n  const [redirect, setRedirect] = useState(false);\n  const [values, setValues] = useState({\n    id: 0,\n    fname: \"\",\n    lname: \"\",\n    address: \"\",\n    inhouse: \"\",\n    city: \"\",\n    state: \"\",\n    postalCode: \"\",\n    email: \"\",\n    phone: \"\",\n  });\n\n  useEffect(() => {\n    if (location.state) {\n      const { client } = location.state;\n\n      setValues({\n        id: client.id,\n        fname: client.fname,\n        lname: client.lname,\n        address: client.address,\n        inhouse: client.inhouse,\n        city: client.city,\n        state: \"AZ\",\n        postalCode: client.postalCode,\n        email: client.email,\n        phone: client.phone,\n      });\n    }\n  }, []);\n\n  const { fname, lname, address, inhouse, city, postalCode, email, phone } =\n    values;\n\n  const doLogout = () => {\n    sessionStorage.setItem(\"jwt\", \"\");\n    sessionStorage.clear();\n    setRedirect(true);\n  };\n\n  if (redirect) {\n    return (\n      <Redirect\n        to={{\n          pathname: \"/searchclient\",\n          email: email,\n          reload: true,\n        }}\n      />\n    );\n  }\n\n  if (!location.state) {\n    return <Redirect to=\"/\" />;\n  }\n\n  const handleChange = (name) => (event) => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    updateClientInfo(values).then((response) => {\n      if (response) {\n        if (response.data.error) {\n          setError(true);\n          setErrMsg(response.data.error);\n        } else {\n          setRedirect(true);\n        }\n      } else {\n        setError(true);\n        setErrMsg(\"No response from server\");\n      }\n    });\n  };\n\n  const form = () => (\n    <Fragment>\n      <div className=\"form-row\" style={{ padding: 15 }}>\n        <div className=\"form-group col-md-6\">\n          <label htmlFor=\"inputFname\">\n            <strong>First Name</strong>\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"inputFname\"\n            placeholder=\"First Name\"\n            onChange={handleChange(\"fname\")}\n            value={fname}\n          />\n        </div>\n        <div className=\"form-group col-md-6\">\n          <label htmlFor=\"inputLname\">\n            <strong>Last Name</strong>\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"inputLname\"\n            placeholder=\"Last Name\"\n            onChange={handleChange(\"lname\")}\n            value={lname}\n          />\n        </div>\n      </div>\n      <div className=\"form-row\" style={{ padding: 15 }}>\n        <div className=\"form-group col-md-6\" style={{ padding: 15 }}>\n          <label htmlFor=\"inputAddress\">\n            <strong>Address</strong>\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"inputAddress\"\n            placeholder=\"1234 Main St\"\n            onChange={handleChange(\"address\")}\n            value={address}\n          />\n        </div>\n        <div className=\"form-group col-md-6\" style={{ padding: 15 }}>\n          <label htmlFor=\"inHouse\">\n            <strong># in house</strong>\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"inHouse\"\n            placeholder=\"# in house\"\n            onChange={handleChange(\"inhouse\")}\n            value={inhouse}\n          />\n        </div>\n      </div>\n      <div className=\"form-row\" style={{ padding: 15 }}>\n        <div className=\"form-group col-md-6\">\n          <label htmlFor=\"inputCity\">\n            <strong>City</strong>\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"inputCity\"\n            onChange={handleChange(\"city\")}\n            placeholder=\"Tucson\"\n            value={city}\n          />\n        </div>\n        <div className=\"form-group col-md-4\">\n          <label htmlFor=\"inputState\">\n            <strong>State</strong>\n          </label>\n          <select id=\"inputState\" className=\"form-control\">\n            <option>Arizona</option>\n          </select>\n        </div>\n        <div className=\"form-group col-md-2\">\n          <label htmlFor=\"inputZip\">\n            <strong>Zip</strong>\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"inputZip\"\n            onChange={handleChange(\"postalCode\")}\n            value={postalCode}\n          />\n        </div>\n      </div>\n      <div className=\"form-row\" style={{ padding: 15 }}>\n        <div className=\"form-group col-md-6\">\n          <label htmlFor=\"inputEmail\">\n            <strong>Email</strong>\n          </label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            id=\"inputEmail\"\n            placeholder=\"Email\"\n            onChange={handleChange(\"email\")}\n            value={email}\n          />\n        </div>\n        <div className=\"form-group col-md-6\">\n          <label htmlFor=\"inputPhone\">\n            <strong>Phone</strong>\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"inputPhone\"\n            placeholder=\"Phone\"\n            onChange={handleChange(\"phone\")}\n            value={phone}\n          />\n        </div>\n      </div>\n      <div className=\"form-row\" style={{ padding: 15 }}>\n        <div className=\"form-group col-md-12\">\n          <button\n            onClick={handleSubmit}\n            className=\"btn btn-success btn-lg btn-block\"\n          >\n            Submit\n          </button>\n        </div>\n      </div>\n    </Fragment>\n  );\n\n  return (\n    <Fragment>\n      <Navigation logoutFunction={doLogout} logoutLink={true} />\n      {error && errorMessage(errorMsg)}\n\n      {form()}\n    </Fragment>\n  );\n};\n\nexport default withRouter(UpdateClient);\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport Navigation from \"./common/Navigation\";\nimport { registerClient } from \"./common/apiCore\";\nimport { errorMessage } from \"./common/Error\";\n\nconst RegisterClient = ({ location }) => {\n  const [error, setError] = useState(false);\n  const [errorMsg, setErrMsg] = useState(\"\");\n  const [redirect, setRedirect] = useState(false);\n  const [values, setValues] = useState({\n    id: 0,\n    fname: \"\",\n    lname: \"\",\n    address: \"\",\n    inhouse: \"\",\n    city: \"\",\n    state: \"AZ\",\n    postalCode: \"\",\n    email: \"\",\n    phone: \"\",\n  });\n\n  const doLogout = () => {\n    sessionStorage.setItem(\"jwt\", \"\");\n    sessionStorage.clear();\n    setRedirect(true);\n  };\n\n  if (redirect) {\n    return (\n      <Redirect\n        to={{\n          pathname: \"/searchclient\",\n        }}\n      />\n    );\n  }\n\n  const { fname, lname, address, inhouse, city, postalCode, email, phone } =\n    values;\n\n  const handleChange = (name) => (event) => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    registerClient(values).then((response) => {\n      if (response) {\n        if (response.data.error) {\n          setError(true);\n          setErrMsg(response.data.error);\n        } else {\n          setRedirect(true);\n        }\n      } else {\n        setError(true);\n        setErrMsg(\"No response from server\");\n      }\n    });\n  };\n\n  const form = () => (\n    <Fragment>\n      <div className=\"form-row\" style={{ padding: 15 }}>\n        <div className=\"form-group col-md-6\">\n          <label htmlFor=\"inputFname\">\n            <strong>First Name</strong>\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"inputFname\"\n            placeholder=\"First Name\"\n            onChange={handleChange(\"fname\")}\n            value={fname}\n          />\n        </div>\n        <div className=\"form-group col-md-6\">\n          <label htmlFor=\"inputLname\">\n            <strong>Last Name</strong>\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"inputLname\"\n            placeholder=\"Last Name\"\n            onChange={handleChange(\"lname\")}\n            value={lname}\n          />\n        </div>\n      </div>\n      <div className=\"form-row\" style={{ padding: 15 }}>\n        <div className=\"form-group col-md-6\" style={{ padding: 15 }}>\n          <label htmlFor=\"inputAddress\">\n            <strong>Address</strong>\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"inputAddress\"\n            placeholder=\"1234 Main St\"\n            onChange={handleChange(\"address\")}\n            value={address}\n          />\n        </div>\n        <div className=\"form-group col-md-6\" style={{ padding: 15 }}>\n          <label htmlFor=\"inHouse\">\n            <strong># in house</strong>\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"inHouse\"\n            placeholder=\"# in house\"\n            onChange={handleChange(\"inhouse\")}\n            value={inhouse}\n          />\n        </div>\n      </div>\n      <div className=\"form-row\" style={{ padding: 15 }}>\n        <div className=\"form-group col-md-6\">\n          <label htmlFor=\"inputCity\">\n            <strong>City</strong>\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"inputCity\"\n            onChange={handleChange(\"city\")}\n            placeholder=\"Tucson\"\n            value={city}\n          />\n        </div>\n        <div className=\"form-group col-md-4\">\n          <label htmlFor=\"inputState\">\n            <strong>State</strong>\n          </label>\n          <select id=\"inputState\" className=\"form-control\">\n            <option>Arizona</option>\n          </select>\n        </div>\n        <div className=\"form-group col-md-2\">\n          <label htmlFor=\"inputZip\">\n            <strong>Zip</strong>\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"inputZip\"\n            onChange={handleChange(\"postalCode\")}\n            value={postalCode}\n          />\n        </div>\n      </div>\n      <div className=\"form-row\" style={{ padding: 15 }}>\n        <div className=\"form-group col-md-6\">\n          <label htmlFor=\"inputEmail\">\n            <strong>Email</strong>\n          </label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            id=\"inputEmail\"\n            placeholder=\"Email\"\n            onChange={handleChange(\"email\")}\n            value={email}\n          />\n        </div>\n        <div className=\"form-group col-md-6\">\n          <label htmlFor=\"inputPhone\">\n            <strong>Phone</strong>\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"inputPhone\"\n            placeholder=\"Phone\"\n            onChange={handleChange(\"phone\")}\n            value={phone}\n          />\n        </div>\n      </div>\n      <div className=\"form-row\" style={{ padding: 15 }}>\n        <div className=\"form-group col-md-12\">\n          <button\n            onClick={handleSubmit}\n            className=\"btn btn-success btn-lg btn-block\"\n          >\n            Submit\n          </button>\n        </div>\n      </div>\n    </Fragment>\n  );\n\n  return (\n    <Fragment>\n      <Navigation logoutFunction={doLogout} logoutLink={true} />\n      {error && errorMessage(errorMsg)}\n\n      {form()}\n    </Fragment>\n  );\n};\n\nexport default withRouter(RegisterClient);\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport { Redirect, withRouter, useHistory } from \"react-router-dom\";\nimport Navigation from \"./common/Navigation\";\nimport { errorMessage } from \"./common/Error\";\nimport {\n  getPlaceOfService,\n  getItems,\n  saveClient,\n  getClientById,\n} from \"./common/apiCore\";\n\nconst PlaceOfService = (props) => {\n  const [error, setError] = useState(false);\n  const [errorMsg, setErrMsg] = useState(\"\");\n  const [redirect, setRedirect] = useState(false);\n  const [places, setPlaces] = useState([]);\n  const history = useHistory();\n\n  const [methodsOfPickup, setMethodsOfPickup] = useState([\n    \"Drive-Thru\",\n    \"Walk-Up\",\n  ]);\n\n  // all items at the selected place\n  const [items, setItems] = useState([]);\n\n  // items checked\n  const [clientItems, setClientItems] = useState([]);\n  const [clientPlaceOfService, setClientPlaceOfService] = useState(\"\");\n  const [clientMethodOfPickup, setClientMethodOfPickup] = useState(\"\");\n\n  useEffect(() => {\n    console.log(\"component mounted\");\n\n    if (!sessionStorage.getItem(\"jwt\")) {\n      setRedirect(true);\n    }\n\n    getPlaceOfService().then((response) => {\n      if (response) {\n        if (response.data.error) {\n          setError(true);\n          setErrMsg(response.data.error);\n        } else {\n          setError(false);\n          setPlaces(response.data.places);\n        }\n      } else {\n        setError(true);\n        setErrMsg(\"No response from server\");\n      }\n    });\n\n    return () => {\n      console.log(\"component unmounted\");\n    };\n  }, []);\n\n  // callback for when client updates their items\n  useEffect(() => {\n    console.log(\"component updated due to items changing\");\n  }, [clientItems]);\n\n  // redirect if client is not defined\n  if (typeof props.location.state === \"undefined\") {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (redirect) {\n    let defaultPlace = \"\";\n    switch (clientPlaceOfService) {\n      case \"Food pantry\":\n        defaultPlace = \"foodpantry\";\n        break;\n      case \"Mobile Resource Center\":\n        defaultPlace = \"mrc\";\n        break;\n      default:\n        defaultPlace = \"storehouse\";\n    }\n\n    return (\n      <Redirect\n        to={{\n          pathname: `/${defaultPlace}`,\n        }}\n      />\n    );\n  }\n\n  const doLogout = () => {\n    sessionStorage.setItem(\"jwt\", \"\");\n    sessionStorage.clear();\n    setRedirect(true);\n  };\n\n  const handleMethod = (name) => (event) => {\n    setClientMethodOfPickup(event.target.value);\n  };\n\n  const handlePlace = (name) => (event) => {\n    // clear checkboxes after place switch\n    let inputs = document.querySelectorAll(\".form-check-input\");\n\n    for (let i = 0; i < inputs.length; i++) {\n      inputs[i].checked = false;\n    }\n\n    // clear items selected after place switch\n    setClientItems([]);\n\n    // set client place of service\n    setClientPlaceOfService(event.target.value);\n\n    getItems(event.target.value).then((response) => {\n      if (response) {\n        if (response.data.error) {\n          setError(true);\n          setErrMsg(response.data.error);\n        } else {\n          setError(false);\n          setItems(response.data.items);\n        }\n      } else {\n        setError(true);\n        setErrMsg(\"No response from server\");\n      }\n    });\n  };\n\n  const handleItems = (name) => (event) => {\n    if (event.target.checked) {\n      setClientItems([...clientItems, event.target.value]);\n    } else {\n      let clientItemsFilter = clientItems.filter(\n        (item) => item !== event.target.value\n      );\n      setClientItems(clientItemsFilter);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (clientItems.length === 0 || clientMethodOfPickup === \"\") {\n      setError(true);\n      setErrMsg(\"Please fill in all the information\");\n      return false;\n    }\n\n    const { client } = props.location.state;\n\n    getClientById(client.id).then((response) => {\n      if (response) {\n        if (response.data.error) {\n          setError(true);\n          setErrMsg(response.data.error);\n        } else {\n          const { client } = response.data;\n\n          const clientUpdated = {\n            fname: client.fname,\n            lname: client.lname,\n            status: \"checkin\",\n            familyNumber: client.inhouse,\n            placeOfService: clientPlaceOfService,\n            items: clientItems,\n            email: client.email,\n            methodOfPickup: clientMethodOfPickup,\n          };\n\n          saveClient(clientUpdated).then((response) => {\n            if (response) {\n              if (response.data.error) {\n                setError(true);\n                setErrMsg(response.data.error);\n              } else {\n                setError(false);\n                setRedirect(true);\n              }\n            } else {\n              setError(true);\n              setErrMsg(\"No response from server\");\n            }\n          });\n        }\n      } else {\n        setError(true);\n        setErrMsg(\"No response from server\");\n      }\n    });\n  };\n\n  const form = () => (\n    <form style={{ padding: 15 }}>\n      <div className=\"form-row\">\n        <div className=\"form-group mx-auto\" style={{ width: 400 }}>\n          <div className=\"form-group col-sm\">\n            <label htmlFor=\"inputPlaceOfService\">\n              <strong>Place Of Service</strong>\n            </label>\n            <select\n              onChange={handlePlace(\"place_of_service\")}\n              className=\"custom-select\"\n              id=\"placeOfService\"\n            >\n              <option defaultValue value=\"0\">\n                Choose...\n              </option>\n              {places.map((place, index) => (\n                <option key={index} value={place.place_of_service}>\n                  {place.place_of_service}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"form-group col-sm\">\n            <label>\n              <strong>Method of pickup</strong>\n            </label>\n            <select\n              onChange={handleMethod(\"method_of_pickup\")}\n              className=\"custom-select\"\n              id=\"methodsOfPickup\"\n            >\n              <option defaultValue value=\"0\">\n                Choose...\n              </option>\n              {methodsOfPickup.map((method, index) => (\n                <option key={index} value={method}>\n                  {method}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div\n            className=\"form-group col-sm\"\n            style={{ display: items.length > 0 ? \"block\" : \"none\" }}\n          >\n            <label>\n              <strong>Items</strong>\n            </label>\n\n            {items.map((item, index) => (\n              <div className=\"form-check\" key={index}>\n                <input\n                  onChange={handleItems(index)}\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  value={item.name}\n                  id={index}\n                />\n                <label className=\"form-check-label\" htmlFor={index}>\n                  {item.name}\n                </label>\n              </div>\n            ))}\n          </div>\n\n          <div className=\"form-group col-sm\">\n            <button\n              onClick={handleSubmit}\n              className=\"btn btn-success btn-lg btn-block\"\n            >\n              Submit\n            </button>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n\n  return (\n    <Fragment>\n      <Navigation logoutFunction={doLogout} logoutLink={true} />\n      {error && errorMessage(errorMsg)}\n      {form()}\n    </Fragment>\n  );\n};\n\nexport default withRouter(PlaceOfService);\n","import React, { useState, useEffect, createContext } from \"react\";\nimport { getClients } from \"./apiCore\";\n\nexport const ClientContext = createContext();\n\nexport const ClientProvider = (props) => {\n  var [clients, setClients] = useState({\n    place: \"\",\n    checkedIn: [],\n    serving: [],\n    checkedOut: [],\n  });\n\n  useEffect(() => {\n    getClients(clients.place).then((response) => {\n      if (response) {\n        if (response.data.error) {\n          console.log(\"Response error: \", response.data.error);\n        } else {\n          const checkedIn = response.data.clients.filter((client) => {\n            return client.status === \"checkin\";\n          });\n\n          const serving = response.data.clients.filter((client) => {\n            return client.status === \"serving\";\n          });\n\n          const checkedOut = response.data.clients.filter((client) => {\n            return client.status === \"checkout\";\n          });\n\n          setClients((prevClients) => {\n            return {\n              ...prevClients,\n              place: clients.place,\n              checkedIn,\n              serving,\n              checkedOut,\n            };\n          });\n        }\n      } else {\n        console.log(\"No response error\");\n      }\n    });\n\n    const interval = setInterval(() => {\n      getClients(clients.place).then((response) => {\n        if (response) {\n          if (response.data.error) {\n            console.log(\"Response error: \", response.data.error);\n          } else {\n            const checkedIn = response.data.clients.filter((client) => {\n              return client.status === \"checkin\";\n            });\n\n            const serving = response.data.clients.filter((client) => {\n              return client.status === \"serving\";\n            });\n\n            const checkedOut = response.data.clients.filter((client) => {\n              return client.status === \"checkout\";\n            });\n\n            setClients((prevClients) => {\n              return {\n                ...prevClients,\n                place: clients.place,\n                checkedIn,\n                serving,\n                checkedOut,\n              };\n            });\n          }\n        } else {\n          console.log(\"No response error\");\n        }\n      });\n    }, 30000);\n\n    // This is the equivilent of componentWillUnmount in a React Class component.\n    return () => clearInterval(interval);\n  }, [clients.place, clients.updateCheckout]); // fire whats inside this again when a place changes; component only mounts once, but can re-render (update) multiple times\n\n  return (\n    <ClientContext.Provider value={[clients, setClients]}>\n      {props.children}\n    </ClientContext.Provider>\n  );\n};\n","export const clientUpdateStatus = (clients) => {\n  const checkedIn = clients.filter((client) => {\n    return client.status === \"checkin\";\n  });\n\n  const serving = clients.filter((client) => {\n    return client.status === \"serving\";\n  });\n\n  const checkedOut = clients.filter((client) => {\n    return client.status === \"checkout\";\n  });\n\n  return { checkedIn, serving, checkedOut };\n};\n","import React, { useEffect, Fragment, useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ClientContext } from \"../common/ClientContext\";\nimport { clientUpdateStatus } from \"../common/ClientHelpers\";\nimport { errorMessage } from \"../common/Error\";\nimport {\n  updateClientStatus,\n  saveClientVisitItem,\n  getClients,\n  clearCheckout,\n  getItems,\n  updateCheckinItems,\n} from \"./apiCore\";\n\nconst Modal = ({ modalId, client, type, refreshFunction, place }) => {\n  const [error, setError] = useState(false);\n  const [errorMsg, setErrMsg] = useState(\"\");\n  const [visitSaved, setVisitSaved] = useState(false);\n  const [clients, setClients] = useContext(ClientContext);\n  const [weightValue, setWeightValue] = useState(\"\");\n  const [numItemsValue, setNumItemsValue] = useState(\"\");\n  const history = useHistory();\n\n  const [methodsOfPickup, setMethodsOfPickup] = useState([\n    \"Drive-Thru\",\n    \"Walk-Up\",\n  ]);\n\n  const [selectedMethodOfPickup, setSelectedMethodOfPickup] = useState(\"\");\n\n  // all items at the selected place\n  const [itemsCheckin, setItemsCheckin] = useState([]);\n  const [clientItems, setClientItems] = useState([]);\n\n  // all items at the selected place\n  const [items, setItems] = useState([]);\n\n  const [visit, setVisit] = useState({\n    place_of_service: \"\",\n    date_of_visit: \"\",\n    item: \"\",\n    notes: \"\",\n    weight: \"\",\n    numOfItems: \"\",\n  });\n\n  const { date_of_visit, item, notes, weight, numOfItems } = visit;\n\n  useEffect(() => {\n    if (type === \"editCheckin\") {\n      setSelectedMethodOfPickup(client.methodOfPickup);\n      getItems(client.placeOfService).then(({ data }) => {  \n        setItemsCheckin(data.items);\n      });\n      let selectedItems = [];\n      if (client.items) {\n        client.items.map((i) => selectedItems.push(i.item));\n      }\n      setClientItems(selectedItems);\n    }\n\n    if (type === \"checkout\") {\n      getItems(place).then(({ data }) => {\n        setItems(data.items);\n\n        if (client.items !== undefined && client.items.length > 0) {\n          let selectedItem = data.items.find(\n            (e) => e.name === client.items[0].item\n          );\n\n          if (selectedItem !== undefined) {\n            if (selectedItem.itemType === \"Weight\") {\n              setVisit({\n                ...visit,\n                item: selectedItem.name,\n                weight: 0,\n                numOfItems: \"\",\n              });\n            } else {\n              setVisit({\n                ...visit,\n                item: selectedItem.name,\n                weight: \"\",\n                numOfItems: 0,\n              });\n            }\n          }\n        }\n      });\n    }\n  }, [client]);\n\n  const handleChange = (name) => (event) => {\n    if (name == \"item\") {\n      const itemType = document.querySelector(\n        `option[value=\"${event.target.value}\"]`\n      ).dataset.type;\n\n      if (itemType === \"Weight\") {\n        setVisit({\n          ...visit,\n          item: event.target.value,\n          weight: 0,\n          numOfItems: \"\",\n        });\n      } else {\n        setVisit({\n          ...visit,\n          item: event.target.value,\n          weight: \"\",\n          numOfItems: 0,\n        });\n      }\n    } else {\n      if (name === \"weight\") {\n        setWeightValue(event.target.value);\n      }\n\n      if (name === \"numOfItems\") {\n        setNumItemsValue(event.target.value);\n      }\n\n      setVisit({ ...visit, [name]: event.target.value });\n    }\n  };\n\n  const handleServing = (e) => {\n    e.preventDefault();\n    let hasError = false;\n    client.status = type;\n\n    if (type == 'checkout') {\n      client.items.forEach(item => {\n        if (!item.quantity) {\n          hasError = true;\n        }\n      });\n\n      if (!hasError) {\n        updateClientStatus(client).then((response) => {\n          refreshFunction();\n        });\n      } else {\n        // throw error message\n        alert('Error: User can\\'t have empty items!');\n      }\n    } else {\n      updateClientStatus(client).then((response) => {\n        refreshFunction();\n      });\n    }\n  };\n\n  const refreshPage = (e) => {\n    history.push('/foodpantry?active=serving'); \n    window.location.reload(false);\n  };\n\n  const handleVisitBeforeCheckout = (e) => {\n    e.preventDefault();\n\n    if (weight === 0) {\n      if (weightValue === \"\") {\n        alert(\"Weight value can not be empty\");\n        return false;\n      }\n    }\n\n    if (numOfItems === 0) {\n      if (numItemsValue === \"\") {\n        alert(\"Number of items can not be empty\");\n        return false;\n      }\n    }\n\n    const visit = {\n      id: client.id,\n      c_id: client.c_id,\n      place_of_service: client.placeOfService,\n      date_of_visit,\n      item,\n      notes,\n      weight,\n      numOfItems,\n    };\n\n    saveClientVisitItem(visit).then((response) => {\n      setVisitSaved(true);\n\n      setTimeout(() => {\n        setVisitSaved(false);\n        setWeightValue(\"\");\n        setNumItemsValue(\"\");\n        setVisit({ ...visit, notes: \"\" });\n      }, 2000);\n    });\n  };\n\n  const handleClearCheckout = (e) => {\n    e.preventDefault();\n\n    clearCheckout(place).then((response) => {\n      getClients(place).then((response) => {\n        if (response) {\n          if (response.data.error) {\n            // response can come back as error if there are no other clients in this place\n            // (checkedIn, serving) after being cleared from checkout\n            setClients((prevClients) => {\n              return { ...prevClients, checkedOut: [] };\n            });\n          } else {\n            const { checkedIn, serving, checkedOut } = clientUpdateStatus(\n              response.data.clients\n            );\n\n            setClients((prevClients) => {\n              return {\n                ...prevClients,\n                place,\n                checkedIn,\n                serving,\n                checkedOut,\n              };\n            });\n          }\n        } else {\n          setError(true);\n          setErrMsg(\"No response from server\");\n        }\n      });\n    });\n  };\n\n  const handleItems = (name) => (event) => {\n    if (event.target.checked) {\n      setClientItems([...clientItems, event.target.value]);\n    } else {\n      let clientItemsFilter = clientItems.filter(\n        (item) => item !== event.target.value\n      );\n      setClientItems(clientItemsFilter);\n    }\n  };\n\n  const handleEditCheckin = () => {\n    if (clientItems.length === 0 || selectedMethodOfPickup === \"\") {\n      alert(\"Please fill in all the information\");\n      return false;\n    }\n\n    updateCheckinItems(\n      client.c_id,\n      client.placeOfService,\n      selectedMethodOfPickup,\n      clientItems\n    ).then((result) => {\n      console.log(\"result \", result);\n      history.push('/foodpantry');\n      window.location.reload(false);\n    });\n  };\n\n  const editCheckin = () => (\n    <div\n      className=\"modal fade\"\n      id={modalId}\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"clientModalTitle\"\n      aria-hidden=\"true\"\n    >\n      <div className=\"modal-dialog\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            {error && errorMessage(errorMsg)}\n            <h5 className=\"modal-title\" id=\"clientModalTitle\">\n              Edit\n            </h5>\n            <button\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <div className=\"form-group col-sm\">\n              <label>\n                <strong>Method of pickup</strong>\n              </label>\n              <select\n                onChange={(e) => setSelectedMethodOfPickup(e.target.value)}\n                className=\"custom-select\"\n                id=\"methodsOfPickup\"\n              >\n                <option defaultValue value=\"0\">\n                  Choose...\n                </option>\n                {client &&\n                  methodsOfPickup.map((method, index) => {\n                    if (method === selectedMethodOfPickup) {\n                      return (\n                        <option key={index} selected value={method}>\n                          {method}\n                        </option>\n                      );\n                    }\n                    return (\n                      <option key={index} value={method}>\n                        {method}\n                      </option>\n                    );\n                  })}\n              </select>\n            </div>\n            <div className=\"form-group col-sm\">\n              <label>\n                <strong>Items</strong>\n              </label>\n\n              {itemsCheckin &&\n                itemsCheckin.map((item, index) => {\n                  let selectedItem = clientItems.find((i) => i === item.name);\n                  if (selectedItem) {\n                    return (\n                      <div className=\"form-check\" key={index}>\n                        <input\n                          onChange={handleItems(index)}\n                          className=\"form-check-input\"\n                          type=\"checkbox\"\n                          value={item.name}\n                          id={index}\n                          checked\n                        />\n                        <label className=\"form-check-label\" htmlFor={index}>\n                          {item.name}\n                        </label>\n                      </div>\n                    );\n                  }\n                  return (\n                    <div className=\"form-check\" key={index}>\n                      <input\n                        onChange={handleItems(index)}\n                        className=\"form-check-input\"\n                        type=\"checkbox\"\n                        value={item.name}\n                        id={index}\n                      />\n                      <label className=\"form-check-label\" htmlFor={index}>\n                        {item.name}\n                      </label>\n                    </div>\n                  );\n                })}\n            </div>\n          </div>\n          <div className=\"modal-footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-dismiss=\"modal\"\n            >\n              Cancel\n            </button>\n            <button\n              onClick={handleEditCheckin}\n              className=\"btn btn-primary\"\n              data-dismiss=\"modal\"\n            >\n              Save\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const serving = () => (\n    <div\n      className=\"modal fade\"\n      id={modalId}\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"clientModalTitle\"\n      aria-hidden=\"true\"\n    >\n      <div className=\"modal-dialog\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            {error && errorMessage(errorMsg)}\n            <h5 className=\"modal-title\" id=\"clientModalTitle\">\n              Move{\" \"}\n              <span style={{ color: \"green\" }}>\n                {client.fname} {client.lname}\n              </span>{\" \"}\n              to {type}?\n            </h5>\n            <button\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">They will be moved to the {type} tab</div>\n          <div className=\"modal-footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-dismiss=\"modal\"\n            >\n              Cancel\n            </button>\n            <button\n              onClick={handleServing}\n              className=\"btn btn-primary\"\n              data-dismiss=\"modal\"\n            >\n              Yes\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const checkout = () => (\n    <div\n      className=\"modal fade\"\n      id={modalId}\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"clientModalTitle\"\n      aria-hidden=\"true\"\n    >\n      <div className=\"modal-dialog\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"clientModalTitle\">\n              Add visit for{\" \"}\n              <span style={{ color: \"green\" }}>\n                {client.fname} {client.lname}\n              </span>{\" \"}\n              and move to {type}?\n            </h5>\n\n            <button\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <div className=\"form-group col-sm\">\n              <div\n                className=\"alert alert-success\"\n                role=\"alert\"\n                style={{ display: visitSaved ? \"block\" : \"none\" }}\n              >\n                Client visit has been saved!\n              </div>\n\n              <label htmlFor=\"dateOfVisit\">\n                <strong>Date of Visit</strong>\n              </label>\n              <input\n                onChange={handleChange(\"date_of_visit\")}\n                type=\"date\"\n                className=\"form-control\"\n                id=\"dateOfVisit\"\n              />\n            </div>\n            <div className=\"form-group col-sm\">\n              <label htmlFor=\"item\">\n                <strong>Item</strong>\n              </label>\n\n              <div className=\"input-group mb-3\">\n                {items && (\n                  <select\n                    onChange={handleChange(\"item\")}\n                    className=\"custom-select\"\n                    id=\"item\"\n                  >\n                    {items.map((i, index) => {\n                      if (item !== \"\") {\n                        if (i.name === item) {\n                          return (\n                            <option\n                              key={index}\n                              selected\n                              data-type={i.itemType}\n                              value={i.name}\n                            >\n                              {i.name}\n                            </option>\n                          );\n                        }\n                      }\n\n                      return (\n                        <option\n                          key={index}\n                          data-type={i.itemType}\n                          value={i.name}\n                        >\n                          {i.name}\n                        </option>\n                      );\n                    })}\n                  </select>\n                )}\n              </div>\n            </div>\n            <div\n              className=\"form-group col-sm\"\n              style={{ display: weight !== \"\" ? \"block\" : \"none\" }}\n            >\n              <label htmlFor=\"weight\">\n                <strong>Weight</strong>\n              </label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                id=\"weight\"\n                onChange={handleChange(\"weight\")}\n                value={weightValue}\n                required\n              />\n            </div>\n            <div\n              className=\"form-group col-sm\"\n              style={{ display: numOfItems !== \"\" ? \"block\" : \"none\" }}\n            >\n              <label htmlFor=\"numOfItems\">\n                <strong>Number of items</strong>\n              </label>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                id=\"numOfItems\"\n                onChange={handleChange(\"numOfItems\")}\n                value={numItemsValue}\n                required\n              />\n            </div>\n            <div className=\"form-group col-sm\">\n              <label htmlFor=\"notes\">\n                <strong>Notes</strong>\n              </label>\n              <textarea\n                onChange={handleChange(\"notes\")}\n                className=\"form-control rounded-0\"\n                id=\"notes\"\n                rows=\"3\"\n                value={notes}\n              >\n                {notes}\n              </textarea>\n            </div>\n          </div>\n          <div className=\"modal-footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-dismiss=\"modal\"\n              onClick={refreshPage}\n            >\n              Cancel\n            </button>\n            <button\n              onClick={handleVisitBeforeCheckout}\n              className=\"btn btn-success\"\n            >\n              Save\n            </button>\n            <button\n              onClick={handleServing}\n              className=\"btn btn-primary\"\n              data-dismiss=\"modal\"\n            >\n              Move to checkout\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const clearClients = () => (\n    <div\n      className=\"modal fade\"\n      id={modalId}\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"clientModalTitle\"\n      aria-hidden=\"true\"\n    >\n      <div className=\"modal-dialog\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"clientModalTitle\">\n              Clear checked out clients?\n            </h5>\n            <button\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">The list will be cleared</div>\n          <div className=\"modal-footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-dismiss=\"modal\"\n            >\n              Cancel\n            </button>\n            <button\n              onClick={handleClearCheckout}\n              className=\"btn btn-primary\"\n              data-dismiss=\"modal\"\n            >\n              Yes\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <Fragment>\n      {type == \"editCheckin\" && editCheckin()}\n      {type == \"serving\" && serving()}\n      {type == \"checkout\" && checkout()}\n      {type == \"clearcheckout\" && clearClients()}\n    </Fragment>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\n\nconst DisplayItems = ({ items, noQty }) => {\n  return items.map((item, index) => (\n    noQty && !item.quantity.length ? \n      <Items index={index} item={item} key={index} />\n    :\n      !noQty ? \n        <Items index={index} item={item} key={index} />\n      :\n      null\n  ));\n};\n\nconst Items = ({ index, item }) => {\n  return (\n    <li key={index}>\n      {item.item} - {item.quantity} - {item.notes}\n    </li>\n  );\n}\n\nexport default DisplayItems;\n","import React, { Fragment, useState, useEffect, useContext } from \"react\";\nimport { ClientContext } from \"./common/ClientContext\";\nimport { getClients, getVisitItems } from \"./common/apiCore\";\nimport { clientUpdateStatus } from \"./common/ClientHelpers\";\nimport Modal from \"./common/Modal\";\nimport { errorMessage } from \"./common/Error\";\nimport DisplayItems from \"./DisplayItems\";\n\nconst Checkout = (props) => {\n  const { place } = props;\n  const [clients, setClients] = useContext(ClientContext);\n  const [client, setClient] = useState({});\n  const [error, setError] = useState(false);\n  const [errorMsg, setErrMsg] = useState(\"\");\n  const { checkedOut } = clients;\n\n  const refreshCheckout = () => {\n    getClients(place).then((response) => {\n      if (response) {\n        if (response.data.error) {\n          setError(true);\n          setErrMsg(response.data.error);\n        } else {\n          const { checkedIn, serving, checkedOut } = clientUpdateStatus(\n            response.data.clients\n          );\n          setClients((prevClients) => {\n            return { ...prevClients, place, checkedIn, serving, checkedOut };\n          });\n        }\n      } else {\n        setError(true);\n        setErrMsg(\"No response from server\");\n      }\n    });\n  };\n\n  return (\n    <Fragment>\n      {error && errorMessage(errorMsg)}\n      {checkedOut.length == 0 && (\n        <div className=\"row\">\n          <div className=\"col-sm-6 offset-sm-3\">\n            <div\n              className=\"alert alert-success\"\n              role=\"alert\"\n              style={{ textAlign: \"center\" }}\n            >\n              <strong>No clients in checkout</strong>\n            </div>\n          </div>\n        </div>\n      )}\n      {checkedOut.length > 0 && (\n        <div className=\"row\">\n          <div className=\"col-sm\">\n            <button\n              style={{ float: \"right\", marginBottom: 5 }}\n              type=\"button\"\n              className=\"btn btn-secondary btn-sm\"\n              data-toggle=\"modal\"\n              data-target=\"#checkoutModal\"\n            >\n              Clear Checkout\n            </button>\n            <table className=\"table table-bordered table-striped mb-0\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">#</th>\n                  <th scope=\"col\">First</th>\n                  <th scope=\"col\">Last</th>\n                  <th scope=\"col\"># in House</th>\n                  <th scope=\"col\">Specific request</th>\n                  <th scope=\"col\">Method of Pickup</th>\n                </tr>\n              </thead>\n              <tbody>\n                {checkedOut.map((client, index) => {\n                  return (\n                    <tr\n                      data-id={client.id}\n                      id=\"modalLaunch\"\n                      key={index}\n                      onClick={() => setClient(client)}\n                      data-toggle=\"modal\"\n                      data-target=\"#moveBackToServingModal\"\n                    >\n                      <th scope=\"row\">{index + 1}</th>\n                      <td>{client.fname}</td>\n                      <td>{client.lname}</td>\n                      <td>{client.familyNumber}</td>\n                      <td>\n                        <ul>\n                          {client.items && (\n                            <DisplayItems items={client.items} />\n                          )}\n                        </ul>\n                      </td>\n                      <td>{client.methodOfPickup}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n      <Modal\n        modalId=\"moveBackToServingModal\"\n        client={client}\n        type=\"serving\"\n        refreshFunction={refreshCheckout}\n      />\n      <Modal\n        modalId=\"checkoutModal\"\n        client={client}\n        type=\"clearcheckout\"\n        place={place}\n      />\n    </Fragment>\n  );\n};\n\nexport default Checkout;\n","import React, { Fragment, useState, useContext, useEffect } from \"react\";\nimport { getClients } from \"./common/apiCore\";\nimport Modal from \"./common/Modal\";\nimport { ClientContext } from \"./common/ClientContext\";\nimport { clientUpdateStatus } from \"./common/ClientHelpers\";\nimport DisplayItems from \"./DisplayItems\";\n\nconst Serving = (props) => {\n  const [clients, setClients] = useContext(ClientContext);\n  const [client, setClient] = useState({});\n\n  const refreshServing = () => {\n    getClients(props.place).then((response) => {\n      if (response) {\n        if (response.data.error) {\n          console.log(\"Response error: \", response.data.error);\n        } else {\n          const { checkedIn, serving, checkedOut } = clientUpdateStatus(\n            response.data.clients\n          );\n\n          setClients((prevClients) => {\n            return {\n              ...prevClients,\n              place: props.place,\n              checkedIn,\n              serving,\n              checkedOut,\n            };\n          });\n        }\n      } else {\n        console.log(\"No response error\");\n      }\n    });\n  };\n\n  const { serving } = clients;\n\n  return (\n    <Fragment>\n      {serving.length == 0 && (\n        <div className=\"row\">\n          <div className=\"col-sm-6 offset-sm-3\">\n            <div\n              className=\"alert alert-success\"\n              role=\"alert\"\n              style={{ textAlign: \"center\" }}\n            >\n              <strong>No clients being served</strong>\n            </div>\n          </div>\n        </div>\n      )}\n      {serving.length > 0 && (\n        <div className=\"row\">\n          <div className=\"col-sm\">\n            <table className=\"table table-bordered table-striped mb-0\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">#</th>\n                  <th scope=\"col\">First</th>\n                  <th scope=\"col\">Last</th>\n                  <th scope=\"col\"># in House</th>\n                  <th scope=\"col\">Specific request</th>\n                  <th scope=\"col\">Method of Pickup</th>\n                </tr>\n              </thead>\n              <tbody>\n                {serving.map((client, index) => {\n                  return (\n                    <tr\n                      data-id={client.id}\n                      id=\"modalLaunch\"\n                      key={index}\n                      onClick={() => setClient(client)}\n                      data-toggle=\"modal\"\n                      data-target=\"#servingModal\"\n                    >\n                      <th scope=\"row\">{index + 1}</th>\n                      <td>{client.fname}</td>\n                      <td>{client.lname}</td>\n                      <td>{client.familyNumber}</td>\n                      <td>\n                        <ul>\n                          {client.items && (\n                            <DisplayItems items={client.items} />\n                          )}\n                        </ul>\n                      </td>\n                      <td>{client.methodOfPickup}</td>\n                      <td>\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-secondary btn-sm\"\n                        >\n                          Edit\n                        </button>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n      <Modal\n        modalId=\"servingModal\"\n        client={client}\n        type=\"checkout\"\n        refreshFunction={refreshServing}\n        place={props.place}\n      />\n    </Fragment>\n  );\n};\n\nexport default Serving;\n","import React, { Fragment, useState, useEffect, useContext } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { getClients } from \"./common/apiCore\";\nimport Modal from \"./common/Modal\";\nimport { ClientContext } from \"./common/ClientContext\";\nimport { clientUpdateStatus } from \"./common/ClientHelpers\";\nimport { errorMessage } from \"./common/Error\";\nimport DisplayItems from \"./DisplayItems\";\n\nconst CheckIn = (props) => {\n  const [error, setError] = useState(false);\n  const [errorMsg, setErrMsg] = useState(\"\");\n  const [clients, setClients] = useContext(ClientContext);\n  const [client, setClient] = useState({});\n  \n  if (props.place !== undefined) {\n    var place = props.place;\n  } else {\n    var place = \"Clothing Bank\";\n  }\n\n  useEffect(() => {\n    setClients((prevClients) => {\n      return {\n        ...prevClients,\n        place,\n      };\n    });\n  }, []);\n\n  const refreshCheckin = () => {\n    getClients(place).then((response) => {\n      if (response) {\n        if (response.data.error) {\n          setError(true);\n          setErrMsg(response.data.error);\n        } else {\n          const { checkedIn, serving, checkedOut } = clientUpdateStatus(\n            response.data.clients\n          );\n          setClients((prevClients) => {\n            return { ...prevClients, place, checkedIn, serving, checkedOut };\n          });\n        }\n      } else {\n        setError(true);\n        setErrMsg(\"No response from server\");\n      }\n    });\n  };\n\n  const { checkedIn } = clients;\n\n  return (\n    <Fragment>\n      {error && errorMessage(errorMsg)}\n\n      {checkedIn.length == 0 && (\n        <div className=\"row\">\n          <div className=\"col-sm-6 offset-sm-3\">\n            <div\n              className=\"alert alert-success\"\n              role=\"alert\"\n              style={{ textAlign: \"center\" }}\n            >\n              <strong>Please check in</strong>\n            </div>\n          </div>\n        </div>\n      )}\n      {checkedIn.length > 0 && (\n        <div className=\"row\">\n          <div className=\"col-sm\">\n            <table className=\"table table-bordered table-striped mb-0\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">#</th>\n                  <th scope=\"col\">First</th>\n                  <th scope=\"col\">Last</th>\n                  <th scope=\"col\"># in House</th>\n                  <th scope=\"col\">Specific request</th>\n                  <th scope=\"col\">Method of Pickup</th>\n                  <th>&nbsp;</th>\n                </tr>\n              </thead>\n              <tbody>\n                {checkedIn.map((client, index) => {\n                  return (\n                    <tr data-id={client.id} id=\"modalLaunch\" key={index}>\n                      <th scope=\"row\">{index + 1}</th>\n                      <td\n                        onClick={() => setClient(client)}\n                        data-toggle=\"modal\"\n                        data-target=\"#checkinModal\"\n                      >\n                        {client.fname}\n                      </td>\n                      <td\n                        onClick={() => setClient(client)}\n                        data-toggle=\"modal\"\n                        data-target=\"#checkinModal\"\n                      >\n                        {client.lname}\n                      </td>\n                      <td\n                        onClick={() => setClient(client)}\n                        data-toggle=\"modal\"\n                        data-target=\"#checkinModal\"\n                      >\n                        {client.familyNumber}\n                      </td>\n                      <td\n                        onClick={() => setClient(client)}\n                        data-toggle=\"modal\"\n                        data-target=\"#checkinModal\"\n                      >\n                        <ul>\n                          {client.items && (\n                            <DisplayItems items={client.items} />\n                          )}\n                        </ul>\n                      </td>\n                      <td\n                        onClick={() => setClient(client)}\n                        data-toggle=\"modal\"\n                        data-target=\"#checkinModal\"\n                      >\n                        {client.methodOfPickup}\n                      </td>\n                      <td>\n                        <button\n                          onClick={() => setClient(client)}\n                          type=\"button\"\n                          className=\"btn btn-secondary btn-sm\"\n                          data-toggle=\"modal\"\n                          data-target=\"#editModal\"\n                        >\n                          Edit\n                        </button>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n      <Modal\n        modalId=\"checkinModal\"\n        client={client}\n        type=\"serving\"\n        refreshFunction={refreshCheckin}\n      />\n      <Modal\n        modalId=\"editModal\"\n        client={client}\n        type=\"editCheckin\"\n        refreshFunction={refreshCheckin}\n      />\n    </Fragment>\n  );\n};\n\nexport default withRouter(CheckIn);\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport { Redirect, Link, withRouter } from \"react-router-dom\";\nimport Navigation from \"./common/Navigation\";\nimport Checkout from \"./Checkout\";\nimport Serving from \"./Serving\";\nimport CheckIn from \"./CheckIn\";\nimport { ClientProvider } from \"./common/ClientContext\";\n\nconst Storehouse = (props) => {\n  const [redirect, setRedirect] = useState(false);\n\n  useEffect(() => {\n    if (sessionStorage.getItem(\"jwt\")) {\n    } else {\n      setRedirect(true);\n    }\n  }, []);\n\n  const doLogout = () => {\n    sessionStorage.setItem(\"jwt\", \"\");\n    sessionStorage.clear();\n    setRedirect(true);\n  };\n\n  if (redirect) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <ClientProvider>\n      <Fragment>\n        <Navigation logoutFunction={doLogout} logoutLink={true} />\n        <section id=\"tabs\">\n          <div className=\"container\" style={{ maxWidth: \"100%\" }}>\n            <div className=\"row\">\n              <div className=\"col-xs-12\" style={{ width: \"100%\" }}>\n                <nav>\n                  <div\n                    className=\"nav nav-tabs nav-fill\"\n                    id=\"nav-tab\"\n                    role=\"tablist\"\n                    style={{ backgroundColor: \"white\" }}\n                  >\n                    <a\n                      className=\"nav-item nav-link active\"\n                      id=\"nav-home-tab\"\n                      data-toggle=\"tab\"\n                      href=\"#nav-home\"\n                      role=\"tab\"\n                      aria-controls=\"nav-home\"\n                      aria-selected=\"true\"\n                    >\n                      Check In\n                    </a>\n                    <a\n                      className=\"nav-item nav-link\"\n                      id=\"nav-profile-tab\"\n                      data-toggle=\"tab\"\n                      href=\"#nav-profile\"\n                      role=\"tab\"\n                      aria-controls=\"nav-profile\"\n                      aria-selected=\"false\"\n                    >\n                      Serving\n                    </a>\n                    <a\n                      className=\"nav-item nav-link\"\n                      id=\"nav-about-tab\"\n                      data-toggle=\"tab\"\n                      href=\"#nav-about\"\n                      role=\"tab\"\n                      aria-controls=\"nav-about\"\n                      aria-selected=\"false\"\n                    >\n                      Check Out\n                    </a>\n                  </div>\n                </nav>\n                <div\n                  className=\"tab-content py-3 px-3 px-sm-0\"\n                  id=\"nav-tabContent\"\n                >\n                  <div\n                    className=\"tab-pane fade show active outer-wrapper\"\n                    id=\"nav-home\"\n                    role=\"tabpanel\"\n                    aria-labelledby=\"nav-home-tab\"\n                  >\n                    <div className=\"table-wrapper-scroll-y my-custom-scrollbar\">\n                      <CheckIn place=\"Clothing Bank\" />\n                    </div>\n                    <Link to=\"/searchclient\" style={{ textDecoration: \"none\" }}>\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-success btn-lg btn-block\"\n                      >\n                        Check In\n                      </button>\n                    </Link>\n                  </div>\n                  <div\n                    className=\"tab-pane fade outer-wrapper\"\n                    id=\"nav-profile\"\n                    role=\"tabpanel\"\n                    aria-labelledby=\"nav-profile-tab\"\n                  >\n                    <div className=\"table-wrapper-scroll-y my-custom-scrollbar\">\n                      <Serving place=\"Clothing Bank\" />\n                    </div>\n                  </div>\n                  <div\n                    className=\"tab-pane fade outer-wrapper\"\n                    id=\"nav-about\"\n                    role=\"tabpanel\"\n                    aria-labelledby=\"nav-about-tab\"\n                  >\n                    <div className=\"table-wrapper-scroll-y my-custom-scrollbar\">\n                      <Checkout place=\"Clothing Bank\" />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </Fragment>\n    </ClientProvider>\n  );\n};\n\nexport default withRouter(Storehouse);\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport { Redirect, Link, withRouter, useLocation } from \"react-router-dom\";\nimport Navigation from \"./common/Navigation\";\nimport Checkout from \"./Checkout\";\nimport Serving from \"./Serving\";\nimport CheckIn from \"./CheckIn\";\nimport { ClientProvider } from \"./common/ClientContext\";\n\nconst FoodPantry = (props) => {\n  const [redirect, setRedirect] = useState(false);\n  const activeTab = useLocation().search;\n  const activeParam = new URLSearchParams(activeTab).get('active');\n  const checkinTabActive = !activeParam ? 'active' : '';\n  const servingTabActive = activeParam == 'serving' ? 'active' : '';\n  const checkoutTabActive = activeParam == 'checkout' ? 'active' : '';\n  const checkinContentActive = !activeParam ? 'show' : '';\n  const servingContentActive = activeParam == 'serving' ? 'show' : '';\n  const checkoutContentActive = activeParam == 'checkout' ? 'show' : '';\n\n  useEffect(() => {\n    console.log('activeParam', activeParam);\n\n    if (sessionStorage.getItem(\"jwt\")) {\n    } else {\n      setRedirect(true);\n    }\n  }, []);\n\n  const doLogout = () => {\n    sessionStorage.setItem(\"jwt\", \"\");\n    sessionStorage.clear();\n    setRedirect(true);\n  };\n\n  if (redirect) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <ClientProvider>\n      <Fragment>\n        <Navigation logoutFunction={doLogout} logoutLink={true} />\n        <section id=\"tabs\">\n          <div className=\"container\" style={{ maxWidth: \"100%\" }}>\n            <div className=\"row\">\n              <div className=\"col-xs-12\" style={{ width: \"100%\" }}>\n                <nav>\n                  <div\n                    className=\"nav nav-tabs nav-fill\"\n                    id=\"nav-tab\"\n                    role=\"tablist\"\n                    style={{ backgroundColor: \"white\" }}\n                  >\n                    <a\n                      className={`nav-item nav-link ${checkinTabActive}`}\n                      id=\"nav-home-tab\"\n                      data-toggle=\"tab\"\n                      href=\"#nav-home\"\n                      role=\"tab\"\n                      aria-controls=\"nav-home\"\n                      aria-selected=\"true\"\n                    >\n                      Check In\n                    </a>\n                    <a\n                      className={`nav-item nav-link ${servingTabActive}`}\n                      id=\"nav-profile-tab\"\n                      data-toggle=\"tab\"\n                      href=\"#nav-profile\"\n                      role=\"tab\"\n                      aria-controls=\"nav-profile\"\n                      aria-selected=\"false\"\n                    >\n                      Serving\n                    </a>\n                    <a\n                      className={`nav-item nav-link ${checkoutTabActive}`}\n                      id=\"nav-about-tab\"\n                      data-toggle=\"tab\"\n                      href=\"#nav-about\"\n                      role=\"tab\"\n                      aria-controls=\"nav-about\"\n                      aria-selected=\"false\"\n                    >\n                      Check Out\n                    </a>\n                  </div>\n                </nav>\n                <div\n                  className=\"tab-content py-3 px-3 px-sm-0\"\n                  id=\"nav-tabContent\"\n                >\n                  <div\n                    className={`tab-pane fade ${checkinContentActive} ${checkinTabActive} outer-wrapper`}\n                    id=\"nav-home\"\n                    role=\"tabpanel\"\n                    aria-labelledby=\"nav-home-tab\"\n                  >\n                    <div className=\"table-wrapper-scroll-y my-custom-scrollbar\">\n                      <CheckIn place=\"Food pantry\" />\n                    </div>\n                    <Link to=\"/searchclient\" style={{ textDecoration: \"none\" }}>\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-success btn-lg btn-block\"\n                      >\n                        Check In\n                      </button>\n                    </Link>\n                  </div>\n                  <div\n                    className={`tab-pane fade ${servingContentActive} ${servingTabActive} outer-wrapper`}\n                    id=\"nav-profile\"\n                    role=\"tabpanel\"\n                    aria-labelledby=\"nav-profile-tab\"\n                  >\n                    <div className=\"table-wrapper-scroll-y my-custom-scrollbar\">\n                      <Serving place=\"Food pantry\" />\n                    </div>\n                  </div>\n                  <div\n                    className={`tab-pane fade ${checkoutContentActive} ${checkoutTabActive} outer-wrapper`}\n                    id=\"nav-about\"\n                    role=\"tabpanel\"\n                    aria-labelledby=\"nav-about-tab\"\n                  >\n                    <div className=\"table-wrapper-scroll-y my-custom-scrollbar\">\n                      <Checkout place=\"Food pantry\" />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </Fragment>\n    </ClientProvider>\n  );\n};\n\nexport default withRouter(FoodPantry);\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport { Redirect, Link, withRouter } from \"react-router-dom\";\nimport Navigation from \"./common/Navigation\";\nimport Checkout from \"./Checkout\";\nimport Serving from \"./Serving\";\nimport CheckIn from \"./CheckIn\";\nimport { ClientProvider } from \"./common/ClientContext\";\n\nconst MRC = (props) => {\n  const [redirect, setRedirect] = useState(false);\n\n  useEffect(() => {\n    if (sessionStorage.getItem(\"jwt\")) {\n    } else {\n      setRedirect(true);\n    }\n  }, []);\n\n  const doLogout = () => {\n    sessionStorage.setItem(\"jwt\", \"\");\n    sessionStorage.clear();\n    setRedirect(true);\n  };\n\n  if (redirect) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <ClientProvider>\n      <Fragment>\n        <Navigation logoutFunction={doLogout} logoutLink={true} />\n        <section id=\"tabs\">\n          <div className=\"container\" style={{ maxWidth: \"100%\" }}>\n            <div className=\"row\">\n              <div className=\"col-xs-12\" style={{ width: \"100%\" }}>\n                <nav>\n                  <div\n                    className=\"nav nav-tabs nav-fill\"\n                    id=\"nav-tab\"\n                    role=\"tablist\"\n                    style={{ backgroundColor: \"white\" }}\n                  >\n                    <a\n                      className=\"nav-item nav-link active\"\n                      id=\"nav-home-tab\"\n                      data-toggle=\"tab\"\n                      href=\"#nav-home\"\n                      role=\"tab\"\n                      aria-controls=\"nav-home\"\n                      aria-selected=\"true\"\n                    >\n                      Check In\n                    </a>\n                    <a\n                      className=\"nav-item nav-link\"\n                      id=\"nav-profile-tab\"\n                      data-toggle=\"tab\"\n                      href=\"#nav-profile\"\n                      role=\"tab\"\n                      aria-controls=\"nav-profile\"\n                      aria-selected=\"false\"\n                    >\n                      Serving\n                    </a>\n                    <a\n                      className=\"nav-item nav-link\"\n                      id=\"nav-about-tab\"\n                      data-toggle=\"tab\"\n                      href=\"#nav-about\"\n                      role=\"tab\"\n                      aria-controls=\"nav-about\"\n                      aria-selected=\"false\"\n                    >\n                      Check Out\n                    </a>\n                  </div>\n                </nav>\n                <div\n                  className=\"tab-content py-3 px-3 px-sm-0\"\n                  id=\"nav-tabContent\"\n                >\n                  <div\n                    className=\"tab-pane fade show active outer-wrapper\"\n                    id=\"nav-home\"\n                    role=\"tabpanel\"\n                    aria-labelledby=\"nav-home-tab\"\n                  >\n                    <div className=\"table-wrapper-scroll-y my-custom-scrollbar\">\n                      <CheckIn place=\"Mobile Resource Center\" />\n                    </div>\n                    <Link to=\"/searchclient\" style={{ textDecoration: \"none\" }}>\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-success btn-lg btn-block\"\n                      >\n                        Check In\n                      </button>\n                    </Link>\n                  </div>\n                  <div\n                    className=\"tab-pane fade outer-wrapper\"\n                    id=\"nav-profile\"\n                    role=\"tabpanel\"\n                    aria-labelledby=\"nav-profile-tab\"\n                  >\n                    <div className=\"table-wrapper-scroll-y my-custom-scrollbar\">\n                      <Serving place=\"Mobile Resource Center\" />\n                    </div>\n                  </div>\n                  <div\n                    className=\"tab-pane fade outer-wrapper\"\n                    id=\"nav-about\"\n                    role=\"tabpanel\"\n                    aria-labelledby=\"nav-about-tab\"\n                  >\n                    <div className=\"table-wrapper-scroll-y my-custom-scrollbar\">\n                      <Checkout place=\"Mobile Resource Center\" />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </Fragment>\n    </ClientProvider>\n  );\n};\n\nexport default withRouter(MRC);\n","import React, { Fragment, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { doLogin } from \"./common/apiCore\";\nimport Navigation from \"./common/Navigation\";\nimport { errorMessage } from \"./common/Error\";\n\nconst Login = () => {\n  const [error, setError] = useState(false);\n  const [errorMsg, setErrMsg] = useState(\"\");\n  const [redirect, setRedirect] = useState(false);\n  const [values, setValues] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const { username, password } = values;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    doLogin(values).then(({ data }) => {\n      if (data.jwt) {\n        sessionStorage.setItem(\"jwt\", data.jwt);\n        setRedirect(true);\n      }\n      if (data.error) {\n        setError(true);\n        setErrMsg(data.error);\n      }\n    });\n  };\n\n  const handleChange = (name) => (event) => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  const showLogin = () => (\n    <div className=\"cotainer\" style={{ marginTop: 15 }}>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-8\">\n          <div className=\"card\">\n            <div className=\"card-header\">Client Check In System</div>\n            <div className=\"card-body\">\n              {error && errorMessage(errorMsg)}\n              <form action=\"\" method=\"\">\n                <div className=\"form-group row\">\n                  <label\n                    htmlFor=\"username\"\n                    className=\"col-md-4 col-form-label text-md-right\"\n                  >\n                    Username\n                  </label>\n                  <div className=\"col-md-6\">\n                    <input\n                      onChange={handleChange(\"username\")}\n                      type=\"text\"\n                      id=\"username\"\n                      className=\"form-control\"\n                      name=\"username\"\n                      required\n                      autoFocus\n                      value={username}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"form-group row\">\n                  <label\n                    htmlFor=\"password\"\n                    className=\"col-md-4 col-form-label text-md-right\"\n                  >\n                    Password\n                  </label>\n                  <div className=\"col-md-6\">\n                    <input\n                      onChange={handleChange(\"password\")}\n                      type=\"password\"\n                      id=\"password\"\n                      className=\"form-control\"\n                      name=\"password\"\n                      required\n                      value={password}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"col-md-6 offset-md-4\">\n                  <button onClick={handleSubmit} className=\"btn btn-primary\">\n                    Submit\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  if (redirect || sessionStorage.getItem(\"jwt\")) {\n    return <Redirect to=\"/storehouse\" />;\n  }\n\n  return (\n    <Fragment>\n      <Navigation logoutLink={false} />\n      <main role=\"main\" className=\"container\" style={{ maxWidth: \"100%\" }}>\n        {showLogin()}\n      </main>\n    </Fragment>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport SearchClient from \"./core/SearchClient\";\nimport UpdateClient from \"./core/UpdateClient\";\nimport RegisterClient from \"./core/RegisterClient\";\nimport ViewClient from \"./core/ViewClient\";\nimport PlaceOfService from \"./core/PlaceOfService\";\nimport Storehouse from \"./core/Storehouse\";\nimport FoodPantry from \"./core/FoodPantry\";\nimport MRC from \"./core/MRC\";\nimport Login from \"./core/Login\";\n\nconst Routes = () => {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path=\"/placeofservice\">\n          <PlaceOfService />\n        </Route>\n        <Route path=\"/viewclient\">\n          <ViewClient />\n        </Route>\n        <Route path=\"/updateclient\">\n          <UpdateClient />\n        </Route>\n        <Route path=\"/registerclient\">\n          <RegisterClient />\n        </Route>\n        <Route path=\"/searchclient\">\n          <SearchClient />\n        </Route>\n        <Route path=\"/storehouse\">\n          <Storehouse />\n        </Route>\n        <Route path=\"/foodpantry\">\n          <FoodPantry />\n        </Route>\n        <Route path=\"/mrc\">\n          <MRC />\n        </Route>\n        <Route path=\"/\">\n          <Login />\n        </Route>\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default Routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Routes from \"./Routes\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}