{"version":3,"sources":["config.js","core/common/apiCore.js","core/common/Navigation.js","core/ViewClient.js","core/common/Error.js","core/SearchClient.js","core/UpdateClient.js","core/RegisterClient.js","core/PlaceOfService.js","core/common/ClientContext.js","core/common/ClientHelpers.js","core/common/Modal.js","core/DisplayItems.js","core/Checkout.js","core/Serving.js","core/CheckIn.js","core/Storehouse.js","core/FoodPantry.js","core/MRC.js","core/Login.js","Routes.js","serviceWorker.js","index.js"],"names":["API","getClients","placeOfService","jwt","sessionStorage","getItem","axios","post","then","response","catch","error","console","log","getClient","email","getItems","place_of_service","style","navLink","color","textDecoration","withRouter","logoutFunction","logoutLink","history","isActive","path","location","pathname","className","to","state","place","onClick","client","useState","redirect","scope","fname","lname","address","phone","paddingTop","type","errorMessage","message","role","props","setError","errorMsg","setErrMsg","setRedirect","setClient","status","familyNumber","specificRequest","values","setValues","useEffect","reload","data","handleSubmit","e","preventDefault","setItem","clear","padding","width","htmlFor","id","onChange","name","event","target","value","form","Object","entries","length","inhouse","city","postalCode","handleChange","updateClientInfo","placeholder","registerClient","places","setPlaces","useHistory","methodsOfPickup","items","setItems","clientItems","setClientItems","clientPlaceOfService","setClientPlaceOfService","clientMethodOfPickup","setClientMethodOfPickup","getPlaceOfService","defaultPlace","getClientById","saveClient","methodOfPickup","inputs","document","querySelectorAll","i","checked","defaultValue","map","index","key","method","display","item","clientItemsFilter","filter","ClientContext","createContext","ClientProvider","checkedIn","serving","checkedOut","clients","setClients","prevClients","interval","setInterval","clearInterval","updateCheckout","Provider","children","clientUpdateStatus","Modal","modalId","refreshFunction","visitSaved","setVisitSaved","useContext","weightValue","setWeightValue","numItemsValue","setNumItemsValue","selectedMethodOfPickup","setSelectedMethodOfPickup","itemsCheckin","setItemsCheckin","date_of_visit","notes","weight","numOfItems","visit","setVisit","selectedItems","push","undefined","selectedItem","find","itemType","querySelector","dataset","handleServing","updateClientStatus","handleVisitBeforeCheckout","alert","c_id","saveClientVisitItem","setTimeout","handleClearCheckout","clearCheckout","handleItems","handleEditCheckin","client_id","updateCheckinItems","result","tabIndex","aria-labelledby","aria-hidden","data-dismiss","aria-label","selected","data-type","required","rows","DisplayItems","quantity","Checkout","textAlign","float","marginBottom","data-toggle","data-target","data-id","Serving","refreshCheckin","maxWidth","backgroundColor","href","aria-controls","aria-selected","Login","username","password","doLogin","marginTop","action","autoFocus","Routes","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","get","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.64eda7e1.chunk.js","sourcesContent":["export const API = \"https://www.tnfpapp.org/checkin/api\";\r\n","import { API } from \"../../config\";\r\nimport axios from \"axios\";\r\n\r\nexport const doLogin = ({ username, password }) => {\r\n  return axios\r\n    .post(`${API}/user_login.php`, {\r\n      username,\r\n      password,\r\n    })\r\n    .then((response) => response)\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\nexport const getClients = (placeOfService) => {\r\n  const jwt = sessionStorage.getItem(\"jwt\");\r\n\r\n  return axios\r\n    .post(`${API}/client_list.php`, {\r\n      jwt,\r\n      placeOfService,\r\n    })\r\n    .then((response) => {\r\n      return response;\r\n    })\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\nexport const saveClient = (client) => {\r\n  const jwt = sessionStorage.getItem(\"jwt\");\r\n\r\n  return axios\r\n    .post(`${API}/client_save.php`, {\r\n      client,\r\n      jwt,\r\n    })\r\n    .then((response) => response)\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\nexport const updateClientStatus = (client) => {\r\n  const jwt = sessionStorage.getItem(\"jwt\");\r\n\r\n  return axios\r\n    .post(`${API}/client_update_status.php`, { client, jwt })\r\n    .then((response) => response)\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\nexport const getClient = (email) => {\r\n  const jwt = sessionStorage.getItem(\"jwt\");\r\n\r\n  return axios\r\n    .post(`${API}/client_detail.php`, { email, jwt })\r\n    .then((response) => response)\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\nexport const getClientById = (id) => {\r\n  const jwt = sessionStorage.getItem(\"jwt\");\r\n\r\n  return axios\r\n    .post(`${API}/client_detail_by_id.php`, { id, jwt })\r\n    .then((response) => response)\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\nexport const updateClientInfo = (client) => {\r\n  const jwt = sessionStorage.getItem(\"jwt\");\r\n\r\n  return axios\r\n    .post(`${API}/client_update_info.php`, { client, jwt })\r\n    .then((response) => response)\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\nexport const registerClient = (client) => {\r\n  const jwt = sessionStorage.getItem(\"jwt\");\r\n\r\n  return axios\r\n    .post(`${API}/client_register.php`, { client, jwt })\r\n    .then((response) => response)\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\nexport const saveClientVisitItem = (visit) => {\r\n  const jwt = sessionStorage.getItem(\"jwt\");\r\n\r\n  return axios\r\n    .post(`${API}/client_save_visit_items.php`, { visit, jwt })\r\n    .then((response) => response)\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\nexport const saveClientVisitItems = (visit) => {\r\n  const jwt = sessionStorage.getItem(\"jwt\");\r\n\r\n  return axios\r\n    .post(`${API}/save_visit_items.php`, { visit, jwt })\r\n    .then((response) => response)\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\nexport const getPlaceOfService = () => {\r\n  const jwt = sessionStorage.getItem(\"jwt\");\r\n\r\n  return axios\r\n    .post(`${API}/item_placeofservice.php`, { jwt })\r\n    .then((response) => response)\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\nexport const getItems = (place_of_service) => {\r\n  const jwt = sessionStorage.getItem(\"jwt\");\r\n\r\n  return axios\r\n    .post(`${API}/items.php`, { place_of_service, jwt })\r\n    .then((response) => response)\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\nexport const clearCheckout = (placeOfService) => {\r\n  const jwt = sessionStorage.getItem(\"jwt\");\r\n\r\n  return axios\r\n    .post(`${API}/client_checkout.php`, { placeOfService, jwt })\r\n    .then((response) => response)\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\nexport const getVisitItems = (client_id) => {\r\n  const jwt = sessionStorage.getItem(\"jwt\");\r\n\r\n  return axios\r\n    .post(`${API}/visit_items.php`, { client_id, jwt })\r\n    .then((response) => response)\r\n    .catch((error) => console.log(error));\r\n};\r\n\r\nexport const updateCheckinItems = (\r\n  client_id,\r\n  placeOfService,\r\n  methodOfPickup,\r\n  items\r\n) => {\r\n  const jwt = sessionStorage.getItem(\"jwt\");\r\n\r\n  return axios\r\n    .post(`${API}/update_visit_items.php`, {\r\n      client_id,\r\n      placeOfService,\r\n      methodOfPickup,\r\n      items,\r\n      jwt,\r\n    })\r\n    .then((response) => response)\r\n    .catch((error) => console.log(error));\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nconst Navigation = ({ logoutFunction, logoutLink, history }) => {\r\n  const isActive = (history, path) => {\r\n    if (history.location.pathname === path) {\r\n      return { color: \"#ff9900\", textDecoration: \"none\" };\r\n    } else {\r\n      return { color: \"#FFFFFF\", textDecoration: \"none\" };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-dark bg-dark\">\r\n      {!logoutLink && (\r\n        <Link style={style.navLink} to=\"/storehouse\">\r\n          Gods Vast Resources\r\n        </Link>\r\n      )}\r\n      {logoutLink && (\r\n        <Fragment>\r\n          <Link\r\n            style={isActive(history, \"/storehouse\")}\r\n            to={{\r\n              pathname: \"/storehouse\",\r\n              state: {\r\n                place: \"Clothing Bank\",\r\n              },\r\n            }}\r\n          >\r\n            Clothing Bank\r\n          </Link>\r\n          <Link\r\n            style={isActive(history, \"/foodpantry\")}\r\n            to={{\r\n              pathname: \"/foodpantry\",\r\n              state: {\r\n                place: \"Food pantry\",\r\n              },\r\n            }}\r\n          >\r\n            Food Pantry\r\n          </Link>\r\n          <Link\r\n            style={isActive(history, \"/mrc\")}\r\n            to={{\r\n              pathname: \"/mrc\",\r\n              state: {\r\n                place: \"Mobile resource center\",\r\n              },\r\n            }}\r\n          >\r\n            Mobile Resource Center\r\n          </Link>\r\n          <Link style={style.navLink} onClick={logoutFunction} to=\"#\">\r\n            Log out\r\n          </Link>\r\n        </Fragment>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst style = {\r\n  navLink: {\r\n    color: \"#FFFFFF\",\r\n    textDecoration: \"none\",\r\n  },\r\n};\r\n\r\nexport default withRouter(Navigation);\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Link, Redirect, withRouter } from \"react-router-dom\";\r\n\r\nconst ViewClient = ({ client }) => {\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  if (redirect) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  const buttons = () => (\r\n    <div className=\"row\" style={{ paddingTop: 15 }}>\r\n      <div className=\"col-sm\">\r\n        <Link\r\n          to={{\r\n            pathname: \"/placeofservice\",\r\n            state: {\r\n              client,\r\n            },\r\n          }}\r\n          style={{ textDecoration: \"none\" }}\r\n        >\r\n          <button type=\"button\" className=\"btn btn-success btn-lg btn-block\">\r\n            Check In\r\n          </button>\r\n        </Link>\r\n      </div>\r\n      <div className=\"col-sm\">\r\n        <Link\r\n          to={{\r\n            pathname: \"/updateclient\",\r\n            state: {\r\n              client,\r\n            },\r\n          }}\r\n          style={{ textDecoration: \"none\" }}\r\n        >\r\n          <button type=\"button\" className=\"btn btn-primary btn-lg btn-block\">\r\n            Update Info\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"row\">\r\n        <div className=\"col-sm\">\r\n          <table className=\"table table-bordered table-striped mb-0\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">First</th>\r\n                <th scope=\"col\">Last</th>\r\n                <th scope=\"col\">Address</th>\r\n                <th scope=\"col\">Email</th>\r\n                <th scope=\"col\">Phone</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>{client.fname}</td>\r\n                <td>{client.lname}</td>\r\n                <td>{client.address}</td>\r\n                <td>{client.email}</td>\r\n                <td>{client.phone}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      {buttons()}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(ViewClient);\r\n","import React from \"react\";\r\n\r\nexport const errorMessage = (message) => (\r\n  <div className=\"alert alert-danger\" role=\"alert\">\r\n    <b>Error!</b> {message}\r\n  </div>\r\n);\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Redirect, withRouter, Link } from \"react-router-dom\";\r\nimport { getClient } from \"./common/apiCore\";\r\nimport Navigation from \"./common/Navigation\";\r\nimport ViewClient from \"./ViewClient\";\r\nimport { errorMessage } from \"./common/Error\";\r\n\r\nconst SearchClient = (props) => {\r\n  const [error, setError] = useState(false);\r\n  const [errorMsg, setErrMsg] = useState(\"\");\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [client, setClient] = useState({});\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    status: \"checkin\",\r\n    familyNumber: \"0\",\r\n    specificRequest: [],\r\n  });\r\n\r\n  const { email, specificRequest } = values;\r\n\r\n  useEffect(() => {\r\n    if (sessionStorage.getItem(\"jwt\")) {\r\n    } else {\r\n      setRedirect(true);\r\n    }\r\n\r\n    if (props.location.reload) {\r\n      getClient(props.location.email).then((response) => {\r\n        if (response) {\r\n          if (response.data.error) {\r\n            setError(true);\r\n            setErrMsg(response.data.error);\r\n          } else {\r\n            setError(false);\r\n            setClient(response.data.client);\r\n          }\r\n        } else {\r\n          setError(true);\r\n          setErrMsg(\"No response from server\");\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const doLogout = () => {\r\n    sessionStorage.setItem(\"jwt\", \"\");\r\n    sessionStorage.clear();\r\n    setRedirect(true);\r\n  };\r\n\r\n  if (redirect) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  const handleChange = (name) => (event) => {\r\n    if (name == \"specificRequest\") {\r\n      setValues({\r\n        ...values,\r\n        specificRequest: [...specificRequest, event.target.value],\r\n      });\r\n    } else {\r\n      setValues({ ...values, [name]: event.target.value });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (email !== \"\") {\r\n      getClient(email).then((response) => {\r\n        if (response) {\r\n          if (response.data.error) {\r\n            setError(true);\r\n            setErrMsg(response.data.error);\r\n          } else {\r\n            setError(false);\r\n            setClient(response.data.client);\r\n          }\r\n        } else {\r\n          setError(true);\r\n          setErrMsg(\"No response from server\");\r\n        }\r\n      });\r\n    } else {\r\n      setError(true);\r\n      setErrMsg(\"Email address must not be blank\");\r\n    }\r\n  };\r\n\r\n  const form = () => (\r\n    <form style={{ padding: 15 }}>\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group mx-auto\" style={{ width: 400 }}>\r\n          <label htmlFor=\"inputEmail\">\r\n            <strong>Email or Unique ID</strong>\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            id=\"inputEmail\"\r\n            onChange={handleChange(\"email\")}\r\n          />\r\n          <br />\r\n          <div className=\"form-row\">\r\n            <div className=\"col-sm-6\">\r\n              <Link\r\n                style={{ textDecoration: \"none\" }}\r\n                to={{\r\n                  pathname: \"/registerclient\",\r\n                }}\r\n              >\r\n                <button className=\"btn btn-info btn-lg btn-block\">\r\n                  Register Client\r\n                </button>\r\n              </Link>\r\n            </div>\r\n            <div className=\"col-sm-6\">\r\n              <button\r\n                onClick={handleSubmit}\r\n                className=\"btn btn-success btn-lg btn-block\"\r\n              >\r\n                Search Client\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <Navigation logoutFunction={doLogout} logoutLink={true} />\r\n      {error && errorMessage(errorMsg)}\r\n      {form()}\r\n      {Object.entries(client).length > 0 && <ViewClient client={client} />}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(SearchClient);\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport Navigation from \"./common/Navigation\";\r\nimport { updateClientInfo } from \"./common/apiCore\";\r\nimport { errorMessage } from \"./common/Error\";\r\n\r\nconst UpdateClient = ({ location }) => {\r\n  const [error, setError] = useState(false);\r\n  const [errorMsg, setErrMsg] = useState(\"\");\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [values, setValues] = useState({\r\n    id: 0,\r\n    fname: \"\",\r\n    lname: \"\",\r\n    address: \"\",\r\n    inhouse: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    postalCode: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (location.state) {\r\n      const { client } = location.state;\r\n\r\n      setValues({\r\n        id: client.id,\r\n        fname: client.fname,\r\n        lname: client.lname,\r\n        address: client.address,\r\n        inhouse: client.inhouse,\r\n        city: client.city,\r\n        state: \"AZ\",\r\n        postalCode: client.postalCode,\r\n        email: client.email,\r\n        phone: client.phone,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const { fname, lname, address, inhouse, city, postalCode, email, phone } =\r\n    values;\r\n\r\n  const doLogout = () => {\r\n    sessionStorage.setItem(\"jwt\", \"\");\r\n    sessionStorage.clear();\r\n    setRedirect(true);\r\n  };\r\n\r\n  if (redirect) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: \"/searchclient\",\r\n          email: email,\r\n          reload: true,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (!location.state) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    updateClientInfo(values).then((response) => {\r\n      if (response) {\r\n        if (response.data.error) {\r\n          setError(true);\r\n          setErrMsg(response.data.error);\r\n        } else {\r\n          setRedirect(true);\r\n        }\r\n      } else {\r\n        setError(true);\r\n        setErrMsg(\"No response from server\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const form = () => (\r\n    <Fragment>\r\n      <div className=\"form-row\" style={{ padding: 15 }}>\r\n        <div className=\"form-group col-md-6\">\r\n          <label htmlFor=\"inputFname\">\r\n            <strong>First Name</strong>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"inputFname\"\r\n            placeholder=\"First Name\"\r\n            onChange={handleChange(\"fname\")}\r\n            value={fname}\r\n          />\r\n        </div>\r\n        <div className=\"form-group col-md-6\">\r\n          <label htmlFor=\"inputLname\">\r\n            <strong>Last Name</strong>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"inputLname\"\r\n            placeholder=\"Last Name\"\r\n            onChange={handleChange(\"lname\")}\r\n            value={lname}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"form-row\" style={{ padding: 15 }}>\r\n        <div className=\"form-group col-md-6\" style={{ padding: 15 }}>\r\n          <label htmlFor=\"inputAddress\">\r\n            <strong>Address</strong>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"inputAddress\"\r\n            placeholder=\"1234 Main St\"\r\n            onChange={handleChange(\"address\")}\r\n            value={address}\r\n          />\r\n        </div>\r\n        <div className=\"form-group col-md-6\" style={{ padding: 15 }}>\r\n          <label htmlFor=\"inHouse\">\r\n            <strong># in house</strong>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"inHouse\"\r\n            placeholder=\"# in house\"\r\n            onChange={handleChange(\"inhouse\")}\r\n            value={inhouse}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"form-row\" style={{ padding: 15 }}>\r\n        <div className=\"form-group col-md-6\">\r\n          <label htmlFor=\"inputCity\">\r\n            <strong>City</strong>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"inputCity\"\r\n            onChange={handleChange(\"city\")}\r\n            placeholder=\"Tucson\"\r\n            value={city}\r\n          />\r\n        </div>\r\n        <div className=\"form-group col-md-4\">\r\n          <label htmlFor=\"inputState\">\r\n            <strong>State</strong>\r\n          </label>\r\n          <select id=\"inputState\" className=\"form-control\">\r\n            <option>Arizona</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group col-md-2\">\r\n          <label htmlFor=\"inputZip\">\r\n            <strong>Zip</strong>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"inputZip\"\r\n            onChange={handleChange(\"postalCode\")}\r\n            value={postalCode}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"form-row\" style={{ padding: 15 }}>\r\n        <div className=\"form-group col-md-6\">\r\n          <label htmlFor=\"inputEmail\">\r\n            <strong>Email</strong>\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            id=\"inputEmail\"\r\n            placeholder=\"Email\"\r\n            onChange={handleChange(\"email\")}\r\n            value={email}\r\n          />\r\n        </div>\r\n        <div className=\"form-group col-md-6\">\r\n          <label htmlFor=\"inputPhone\">\r\n            <strong>Phone</strong>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"inputPhone\"\r\n            placeholder=\"Phone\"\r\n            onChange={handleChange(\"phone\")}\r\n            value={phone}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"form-row\" style={{ padding: 15 }}>\r\n        <div className=\"form-group col-md-12\">\r\n          <button\r\n            onClick={handleSubmit}\r\n            className=\"btn btn-success btn-lg btn-block\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <Navigation logoutFunction={doLogout} logoutLink={true} />\r\n      {error && errorMessage(errorMsg)}\r\n\r\n      {form()}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(UpdateClient);\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport Navigation from \"./common/Navigation\";\r\nimport { registerClient } from \"./common/apiCore\";\r\nimport { errorMessage } from \"./common/Error\";\r\n\r\nconst RegisterClient = ({ location }) => {\r\n  const [error, setError] = useState(false);\r\n  const [errorMsg, setErrMsg] = useState(\"\");\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [values, setValues] = useState({\r\n    id: 0,\r\n    fname: \"\",\r\n    lname: \"\",\r\n    address: \"\",\r\n    inhouse: \"\",\r\n    city: \"\",\r\n    state: \"AZ\",\r\n    postalCode: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n  });\r\n\r\n  const doLogout = () => {\r\n    sessionStorage.setItem(\"jwt\", \"\");\r\n    sessionStorage.clear();\r\n    setRedirect(true);\r\n  };\r\n\r\n  if (redirect) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: \"/searchclient\",\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  const { fname, lname, address, inhouse, city, postalCode, email, phone } =\r\n    values;\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    registerClient(values).then((response) => {\r\n      if (response) {\r\n        if (response.data.error) {\r\n          setError(true);\r\n          setErrMsg(response.data.error);\r\n        } else {\r\n          setRedirect(true);\r\n        }\r\n      } else {\r\n        setError(true);\r\n        setErrMsg(\"No response from server\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const form = () => (\r\n    <Fragment>\r\n      <div className=\"form-row\" style={{ padding: 15 }}>\r\n        <div className=\"form-group col-md-6\">\r\n          <label htmlFor=\"inputFname\">\r\n            <strong>First Name</strong>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"inputFname\"\r\n            placeholder=\"First Name\"\r\n            onChange={handleChange(\"fname\")}\r\n            value={fname}\r\n          />\r\n        </div>\r\n        <div className=\"form-group col-md-6\">\r\n          <label htmlFor=\"inputLname\">\r\n            <strong>Last Name</strong>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"inputLname\"\r\n            placeholder=\"Last Name\"\r\n            onChange={handleChange(\"lname\")}\r\n            value={lname}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"form-row\" style={{ padding: 15 }}>\r\n        <div className=\"form-group col-md-6\" style={{ padding: 15 }}>\r\n          <label htmlFor=\"inputAddress\">\r\n            <strong>Address</strong>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"inputAddress\"\r\n            placeholder=\"1234 Main St\"\r\n            onChange={handleChange(\"address\")}\r\n            value={address}\r\n          />\r\n        </div>\r\n        <div className=\"form-group col-md-6\" style={{ padding: 15 }}>\r\n          <label htmlFor=\"inHouse\">\r\n            <strong># in house</strong>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"inHouse\"\r\n            placeholder=\"# in house\"\r\n            onChange={handleChange(\"inhouse\")}\r\n            value={inhouse}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"form-row\" style={{ padding: 15 }}>\r\n        <div className=\"form-group col-md-6\">\r\n          <label htmlFor=\"inputCity\">\r\n            <strong>City</strong>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"inputCity\"\r\n            onChange={handleChange(\"city\")}\r\n            placeholder=\"Tucson\"\r\n            value={city}\r\n          />\r\n        </div>\r\n        <div className=\"form-group col-md-4\">\r\n          <label htmlFor=\"inputState\">\r\n            <strong>State</strong>\r\n          </label>\r\n          <select id=\"inputState\" className=\"form-control\">\r\n            <option>Arizona</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group col-md-2\">\r\n          <label htmlFor=\"inputZip\">\r\n            <strong>Zip</strong>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"inputZip\"\r\n            onChange={handleChange(\"postalCode\")}\r\n            value={postalCode}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"form-row\" style={{ padding: 15 }}>\r\n        <div className=\"form-group col-md-6\">\r\n          <label htmlFor=\"inputEmail\">\r\n            <strong>Email</strong>\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            id=\"inputEmail\"\r\n            placeholder=\"Email\"\r\n            onChange={handleChange(\"email\")}\r\n            value={email}\r\n          />\r\n        </div>\r\n        <div className=\"form-group col-md-6\">\r\n          <label htmlFor=\"inputPhone\">\r\n            <strong>Phone</strong>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"inputPhone\"\r\n            placeholder=\"Phone\"\r\n            onChange={handleChange(\"phone\")}\r\n            value={phone}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"form-row\" style={{ padding: 15 }}>\r\n        <div className=\"form-group col-md-12\">\r\n          <button\r\n            onClick={handleSubmit}\r\n            className=\"btn btn-success btn-lg btn-block\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <Navigation logoutFunction={doLogout} logoutLink={true} />\r\n      {error && errorMessage(errorMsg)}\r\n\r\n      {form()}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(RegisterClient);\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Redirect, withRouter, useHistory } from \"react-router-dom\";\r\nimport Navigation from \"./common/Navigation\";\r\nimport { errorMessage } from \"./common/Error\";\r\nimport {\r\n  getPlaceOfService,\r\n  getItems,\r\n  saveClient,\r\n  getClientById,\r\n} from \"./common/apiCore\";\r\n\r\nconst PlaceOfService = (props) => {\r\n  const [error, setError] = useState(false);\r\n  const [errorMsg, setErrMsg] = useState(\"\");\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [places, setPlaces] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const [methodsOfPickup, setMethodsOfPickup] = useState([\r\n    \"Drive-Thru\",\r\n    \"Walk-Up\",\r\n  ]);\r\n\r\n  // all items at the selected place\r\n  const [items, setItems] = useState([]);\r\n\r\n  // items checked\r\n  const [clientItems, setClientItems] = useState([]);\r\n  const [clientPlaceOfService, setClientPlaceOfService] = useState(\"\");\r\n  const [clientMethodOfPickup, setClientMethodOfPickup] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    console.log(\"component mounted\");\r\n\r\n    if (!sessionStorage.getItem(\"jwt\")) {\r\n      setRedirect(true);\r\n    }\r\n\r\n    getPlaceOfService().then((response) => {\r\n      if (response) {\r\n        if (response.data.error) {\r\n          setError(true);\r\n          setErrMsg(response.data.error);\r\n        } else {\r\n          setError(false);\r\n          setPlaces(response.data.places);\r\n        }\r\n      } else {\r\n        setError(true);\r\n        setErrMsg(\"No response from server\");\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      console.log(\"component unmounted\");\r\n    };\r\n  }, []);\r\n\r\n  // callback for when client updates their items\r\n  useEffect(() => {\r\n    console.log(\"component updated due to items changing\");\r\n  }, [clientItems]);\r\n\r\n  // redirect if client is not defined\r\n  if (typeof props.location.state === \"undefined\") {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  if (redirect) {\r\n    let defaultPlace = \"\";\r\n    switch (clientPlaceOfService) {\r\n      case \"Food pantry\":\r\n        defaultPlace = \"foodpantry\";\r\n        break;\r\n      case \"Mobile Resource Center\":\r\n        defaultPlace = \"mrc\";\r\n        break;\r\n      default:\r\n        defaultPlace = \"storehouse\";\r\n    }\r\n\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: `/${defaultPlace}`,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  const doLogout = () => {\r\n    sessionStorage.setItem(\"jwt\", \"\");\r\n    sessionStorage.clear();\r\n    setRedirect(true);\r\n  };\r\n\r\n  const handleMethod = (name) => (event) => {\r\n    setClientMethodOfPickup(event.target.value);\r\n  };\r\n\r\n  const handlePlace = (name) => (event) => {\r\n    // clear checkboxes after place switch\r\n    let inputs = document.querySelectorAll(\".form-check-input\");\r\n\r\n    for (let i = 0; i < inputs.length; i++) {\r\n      inputs[i].checked = false;\r\n    }\r\n\r\n    // clear items selected after place switch\r\n    setClientItems([]);\r\n\r\n    // set client place of service\r\n    setClientPlaceOfService(event.target.value);\r\n\r\n    getItems(event.target.value).then((response) => {\r\n      if (response) {\r\n        if (response.data.error) {\r\n          setError(true);\r\n          setErrMsg(response.data.error);\r\n        } else {\r\n          setError(false);\r\n          setItems(response.data.items);\r\n        }\r\n      } else {\r\n        setError(true);\r\n        setErrMsg(\"No response from server\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleItems = (name) => (event) => {\r\n    if (event.target.checked) {\r\n      setClientItems([...clientItems, event.target.value]);\r\n    } else {\r\n      let clientItemsFilter = clientItems.filter(\r\n        (item) => item !== event.target.value\r\n      );\r\n      setClientItems(clientItemsFilter);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (clientItems.length === 0 || clientMethodOfPickup === \"\") {\r\n      setError(true);\r\n      setErrMsg(\"Please fill in all the information\");\r\n      return false;\r\n    }\r\n\r\n    const { client } = props.location.state;\r\n\r\n    getClientById(client.id).then((response) => {\r\n      if (response) {\r\n        if (response.data.error) {\r\n          setError(true);\r\n          setErrMsg(response.data.error);\r\n        } else {\r\n          const { client } = response.data;\r\n\r\n          const clientUpdated = {\r\n            fname: client.fname,\r\n            lname: client.lname,\r\n            status: \"checkin\",\r\n            familyNumber: client.inhouse,\r\n            placeOfService: clientPlaceOfService,\r\n            items: clientItems,\r\n            email: client.email,\r\n            methodOfPickup: clientMethodOfPickup,\r\n          };\r\n\r\n          saveClient(clientUpdated).then((response) => {\r\n            if (response) {\r\n              if (response.data.error) {\r\n                setError(true);\r\n                setErrMsg(response.data.error);\r\n              } else {\r\n                setError(false);\r\n                setRedirect(true);\r\n              }\r\n            } else {\r\n              setError(true);\r\n              setErrMsg(\"No response from server\");\r\n            }\r\n          });\r\n        }\r\n      } else {\r\n        setError(true);\r\n        setErrMsg(\"No response from server\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const form = () => (\r\n    <form style={{ padding: 15 }}>\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group mx-auto\" style={{ width: 400 }}>\r\n          <div className=\"form-group col-sm\">\r\n            <label htmlFor=\"inputPlaceOfService\">\r\n              <strong>Place Of Service</strong>\r\n            </label>\r\n            <select\r\n              onChange={handlePlace(\"place_of_service\")}\r\n              className=\"custom-select\"\r\n              id=\"placeOfService\"\r\n            >\r\n              <option defaultValue value=\"0\">\r\n                Choose...\r\n              </option>\r\n              {places.map((place, index) => (\r\n                <option key={index} value={place.place_of_service}>\r\n                  {place.place_of_service}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"form-group col-sm\">\r\n            <label>\r\n              <strong>Method of pickup</strong>\r\n            </label>\r\n            <select\r\n              onChange={handleMethod(\"method_of_pickup\")}\r\n              className=\"custom-select\"\r\n              id=\"methodsOfPickup\"\r\n            >\r\n              <option defaultValue value=\"0\">\r\n                Choose...\r\n              </option>\r\n              {methodsOfPickup.map((method, index) => (\r\n                <option key={index} value={method}>\r\n                  {method}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div\r\n            className=\"form-group col-sm\"\r\n            style={{ display: items.length > 0 ? \"block\" : \"none\" }}\r\n          >\r\n            <label>\r\n              <strong>Items</strong>\r\n            </label>\r\n\r\n            {items.map((item, index) => (\r\n              <div className=\"form-check\" key={index}>\r\n                <input\r\n                  onChange={handleItems(index)}\r\n                  className=\"form-check-input\"\r\n                  type=\"checkbox\"\r\n                  value={item.name}\r\n                  id={index}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor={index}>\r\n                  {item.name}\r\n                </label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"form-group col-sm\">\r\n            <button\r\n              onClick={handleSubmit}\r\n              className=\"btn btn-success btn-lg btn-block\"\r\n            >\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <Navigation logoutFunction={doLogout} logoutLink={true} />\r\n      {error && errorMessage(errorMsg)}\r\n      {form()}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(PlaceOfService);\r\n","import React, { useState, useEffect, createContext } from \"react\";\r\nimport { getClients } from \"./apiCore\";\r\n\r\nexport const ClientContext = createContext();\r\n\r\nexport const ClientProvider = (props) => {\r\n  var [clients, setClients] = useState({\r\n    place: \"\",\r\n    checkedIn: [],\r\n    serving: [],\r\n    checkedOut: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getClients(clients.place).then((response) => {\r\n      if (response) {\r\n        if (response.data.error) {\r\n          console.log(\"Response error: \", response.data.error);\r\n        } else {\r\n          const checkedIn = response.data.clients.filter((client) => {\r\n            return client.status === \"checkin\";\r\n          });\r\n\r\n          const serving = response.data.clients.filter((client) => {\r\n            return client.status === \"serving\";\r\n          });\r\n\r\n          const checkedOut = response.data.clients.filter((client) => {\r\n            return client.status === \"checkout\";\r\n          });\r\n\r\n          setClients((prevClients) => {\r\n            return {\r\n              ...prevClients,\r\n              place: clients.place,\r\n              checkedIn,\r\n              serving,\r\n              checkedOut,\r\n            };\r\n          });\r\n        }\r\n      } else {\r\n        console.log(\"No response error\");\r\n      }\r\n    });\r\n\r\n    const interval = setInterval(() => {\r\n      getClients(clients.place).then((response) => {\r\n        if (response) {\r\n          if (response.data.error) {\r\n            console.log(\"Response error: \", response.data.error);\r\n          } else {\r\n            const checkedIn = response.data.clients.filter((client) => {\r\n              return client.status === \"checkin\";\r\n            });\r\n\r\n            const serving = response.data.clients.filter((client) => {\r\n              return client.status === \"serving\";\r\n            });\r\n\r\n            const checkedOut = response.data.clients.filter((client) => {\r\n              return client.status === \"checkout\";\r\n            });\r\n\r\n            setClients((prevClients) => {\r\n              return {\r\n                ...prevClients,\r\n                place: clients.place,\r\n                checkedIn,\r\n                serving,\r\n                checkedOut,\r\n              };\r\n            });\r\n          }\r\n        } else {\r\n          console.log(\"No response error\");\r\n        }\r\n      });\r\n    }, 30000);\r\n\r\n    // This is the equivilent of componentWillUnmount in a React Class component.\r\n    return () => clearInterval(interval);\r\n  }, [clients.place, clients.updateCheckout]); // fire whats inside this again when a place changes; component only mounts once, but can re-render (update) multiple times\r\n\r\n  return (\r\n    <ClientContext.Provider value={[clients, setClients]}>\r\n      {props.children}\r\n    </ClientContext.Provider>\r\n  );\r\n};\r\n","export const clientUpdateStatus = (clients) => {\r\n  const checkedIn = clients.filter((client) => {\r\n    return client.status === \"checkin\";\r\n  });\r\n\r\n  const serving = clients.filter((client) => {\r\n    return client.status === \"serving\";\r\n  });\r\n\r\n  const checkedOut = clients.filter((client) => {\r\n    return client.status === \"checkout\";\r\n  });\r\n\r\n  return { checkedIn, serving, checkedOut };\r\n};\r\n","import React, { useEffect, Fragment, useState, useContext } from \"react\";\r\nimport { ClientContext } from \"../common/ClientContext\";\r\nimport { clientUpdateStatus } from \"../common/ClientHelpers\";\r\nimport { errorMessage } from \"../common/Error\";\r\nimport {\r\n  updateClientStatus,\r\n  saveClientVisitItem,\r\n  getClients,\r\n  clearCheckout,\r\n  getItems,\r\n  updateCheckinItems,\r\n} from \"./apiCore\";\r\n\r\nconst Modal = ({ modalId, client, type, refreshFunction, place }) => {\r\n  const [error, setError] = useState(false);\r\n  const [errorMsg, setErrMsg] = useState(\"\");\r\n  const [visitSaved, setVisitSaved] = useState(false);\r\n  const [clients, setClients] = useContext(ClientContext);\r\n  const [weightValue, setWeightValue] = useState(\"\");\r\n  const [numItemsValue, setNumItemsValue] = useState(\"\");\r\n\r\n  const [methodsOfPickup, setMethodsOfPickup] = useState([\r\n    \"Drive-Thru\",\r\n    \"Walk-Up\",\r\n  ]);\r\n\r\n  const [selectedMethodOfPickup, setSelectedMethodOfPickup] = useState(\"\");\r\n\r\n  // all items at the selected place\r\n  const [itemsCheckin, setItemsCheckin] = useState([]);\r\n  const [clientItems, setClientItems] = useState([]);\r\n\r\n  // all items at the selected place\r\n  const [items, setItems] = useState([]);\r\n\r\n  const [visit, setVisit] = useState({\r\n    place_of_service: \"\",\r\n    date_of_visit: \"\",\r\n    item: \"\",\r\n    notes: \"\",\r\n    weight: \"\",\r\n    numOfItems: \"\",\r\n  });\r\n\r\n  const { date_of_visit, item, notes, weight, numOfItems } = visit;\r\n\r\n  useEffect(() => {\r\n    if (type === \"editCheckin\") {\r\n      setSelectedMethodOfPickup(client.methodOfPickup);\r\n      getItems(client.placeOfService).then(({ data }) => {\r\n        setItemsCheckin(data.items);\r\n      });\r\n      let selectedItems = [];\r\n      if (client.items) {\r\n        client.items.map((i) => selectedItems.push(i.item));\r\n      }\r\n      setClientItems(selectedItems);\r\n    }\r\n\r\n    if (type === \"checkout\") {\r\n      getItems(place).then(({ data }) => {\r\n        setItems(data.items);\r\n\r\n        if (client.items !== undefined && client.items.length > 0) {\r\n          let selectedItem = data.items.find(\r\n            (e) => e.name === client.items[0].item\r\n          );\r\n\r\n          if (selectedItem !== undefined) {\r\n            if (selectedItem.itemType === \"Weight\") {\r\n              setVisit({\r\n                ...visit,\r\n                item: selectedItem.name,\r\n                weight: 0,\r\n                numOfItems: \"\",\r\n              });\r\n            } else {\r\n              setVisit({\r\n                ...visit,\r\n                item: selectedItem.name,\r\n                weight: \"\",\r\n                numOfItems: 0,\r\n              });\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }, [client]);\r\n\r\n  const handleChange = (name) => (event) => {\r\n    if (name == \"item\") {\r\n      const itemType = document.querySelector(\r\n        `option[value=\"${event.target.value}\"]`\r\n      ).dataset.type;\r\n\r\n      if (itemType === \"Weight\") {\r\n        setVisit({\r\n          ...visit,\r\n          item: event.target.value,\r\n          weight: 0,\r\n          numOfItems: \"\",\r\n        });\r\n      } else {\r\n        setVisit({\r\n          ...visit,\r\n          item: event.target.value,\r\n          weight: \"\",\r\n          numOfItems: 0,\r\n        });\r\n      }\r\n    } else {\r\n      if (name === \"weight\") {\r\n        setWeightValue(event.target.value);\r\n      }\r\n\r\n      if (name === \"numOfItems\") {\r\n        setNumItemsValue(event.target.value);\r\n      }\r\n\r\n      setVisit({ ...visit, [name]: event.target.value });\r\n    }\r\n  };\r\n\r\n  const handleServing = (e) => {\r\n    e.preventDefault();\r\n\r\n    client.status = type;\r\n\r\n    updateClientStatus(client).then((response) => {\r\n      refreshFunction();\r\n    });\r\n  };\r\n\r\n  const handleVisitBeforeCheckout = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (weight === 0) {\r\n      if (weightValue === \"\") {\r\n        alert(\"Weight value can not be empty\");\r\n        return false;\r\n      }\r\n    }\r\n\r\n    if (numOfItems === 0) {\r\n      if (numItemsValue === \"\") {\r\n        alert(\"Number of items can not be empty\");\r\n        return false;\r\n      }\r\n    }\r\n\r\n    const visit = {\r\n      id: client.id,\r\n      c_id: client.c_id,\r\n      place_of_service: client.placeOfService,\r\n      date_of_visit,\r\n      item,\r\n      notes,\r\n      weight,\r\n      numOfItems,\r\n    };\r\n\r\n    saveClientVisitItem(visit).then((response) => {\r\n      setVisitSaved(true);\r\n\r\n      setTimeout(() => {\r\n        setVisitSaved(false);\r\n        setWeightValue(\"\");\r\n        setNumItemsValue(\"\");\r\n        setVisit({ ...visit, notes: \"\" });\r\n      }, 2000);\r\n    });\r\n  };\r\n\r\n  const handleClearCheckout = (e) => {\r\n    e.preventDefault();\r\n\r\n    clearCheckout(place).then((response) => {\r\n      getClients(place).then((response) => {\r\n        if (response) {\r\n          if (response.data.error) {\r\n            // response can come back as error if there are no other clients in this place\r\n            // (checkedIn, serving) after being cleared from checkout\r\n            setClients((prevClients) => {\r\n              return { ...prevClients, checkedOut: [] };\r\n            });\r\n          } else {\r\n            const { checkedIn, serving, checkedOut } = clientUpdateStatus(\r\n              response.data.clients\r\n            );\r\n\r\n            setClients((prevClients) => {\r\n              return {\r\n                ...prevClients,\r\n                place,\r\n                checkedIn,\r\n                serving,\r\n                checkedOut,\r\n              };\r\n            });\r\n          }\r\n        } else {\r\n          setError(true);\r\n          setErrMsg(\"No response from server\");\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  const handleItems = (name) => (event) => {\r\n    if (event.target.checked) {\r\n      setClientItems([...clientItems, event.target.value]);\r\n    } else {\r\n      let clientItemsFilter = clientItems.filter(\r\n        (item) => item !== event.target.value\r\n      );\r\n      setClientItems(clientItemsFilter);\r\n    }\r\n  };\r\n\r\n  const handleEditCheckin = () => {\r\n    if (clientItems.length === 0 || selectedMethodOfPickup === \"\") {\r\n      alert(\"Please fill in all the information\");\r\n      return false;\r\n    }\r\n\r\n    updateCheckinItems(\r\n      client.c_id,\r\n      client.placeOfService,\r\n      selectedMethodOfPickup,\r\n      clientItems\r\n    ).then((result) => {\r\n      console.log(\"result \", result);\r\n    });\r\n  };\r\n\r\n  const editCheckin = () => (\r\n    <div\r\n      className=\"modal fade\"\r\n      id={modalId}\r\n      tabIndex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-labelledby=\"clientModalTitle\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            {error && errorMessage(errorMsg)}\r\n            <h5 className=\"modal-title\" id=\"clientModalTitle\">\r\n              Edit\r\n            </h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <div className=\"form-group col-sm\">\r\n              <label>\r\n                <strong>Method of pickup</strong>\r\n              </label>\r\n              <select\r\n                onChange={(e) => setSelectedMethodOfPickup(e.target.value)}\r\n                className=\"custom-select\"\r\n                id=\"methodsOfPickup\"\r\n              >\r\n                <option defaultValue value=\"0\">\r\n                  Choose...\r\n                </option>\r\n                {client &&\r\n                  methodsOfPickup.map((method, index) => {\r\n                    if (method === selectedMethodOfPickup) {\r\n                      return (\r\n                        <option key={index} selected value={method}>\r\n                          {method}\r\n                        </option>\r\n                      );\r\n                    }\r\n                    return (\r\n                      <option key={index} value={method}>\r\n                        {method}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group col-sm\">\r\n              <label>\r\n                <strong>Items</strong>\r\n              </label>\r\n\r\n              {itemsCheckin &&\r\n                itemsCheckin.map((item, index) => {\r\n                  let selectedItem = clientItems.find((i) => i === item.name);\r\n                  if (selectedItem) {\r\n                    return (\r\n                      <div className=\"form-check\" key={index}>\r\n                        <input\r\n                          onChange={handleItems(index)}\r\n                          className=\"form-check-input\"\r\n                          type=\"checkbox\"\r\n                          value={item.name}\r\n                          id={index}\r\n                          checked\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor={index}>\r\n                          {item.name}\r\n                        </label>\r\n                      </div>\r\n                    );\r\n                  }\r\n                  return (\r\n                    <div className=\"form-check\" key={index}>\r\n                      <input\r\n                        onChange={handleItems(index)}\r\n                        className=\"form-check-input\"\r\n                        type=\"checkbox\"\r\n                        value={item.name}\r\n                        id={index}\r\n                      />\r\n                      <label className=\"form-check-label\" htmlFor={index}>\r\n                        {item.name}\r\n                      </label>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              data-dismiss=\"modal\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              onClick={handleEditCheckin}\r\n              className=\"btn btn-primary\"\r\n              data-dismiss=\"modal\"\r\n            >\r\n              Save\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const serving = () => (\r\n    <div\r\n      className=\"modal fade\"\r\n      id={modalId}\r\n      tabIndex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-labelledby=\"clientModalTitle\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            {error && errorMessage(errorMsg)}\r\n            <h5 className=\"modal-title\" id=\"clientModalTitle\">\r\n              Move{\" \"}\r\n              <span style={{ color: \"green\" }}>\r\n                {client.fname} {client.lname}\r\n              </span>{\" \"}\r\n              to {type}?\r\n            </h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\">They will be moved to the {type} tab</div>\r\n          <div className=\"modal-footer\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              data-dismiss=\"modal\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              onClick={handleServing}\r\n              className=\"btn btn-primary\"\r\n              data-dismiss=\"modal\"\r\n            >\r\n              Yes\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const checkout = () => (\r\n    <div\r\n      className=\"modal fade\"\r\n      id={modalId}\r\n      tabIndex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-labelledby=\"clientModalTitle\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\" id=\"clientModalTitle\">\r\n              Add visit for{\" \"}\r\n              <span style={{ color: \"green\" }}>\r\n                {client.fname} {client.lname}\r\n              </span>{\" \"}\r\n              and move to {type}?\r\n            </h5>\r\n\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <div className=\"form-group col-sm\">\r\n              <div\r\n                className=\"alert alert-success\"\r\n                role=\"alert\"\r\n                style={{ display: visitSaved ? \"block\" : \"none\" }}\r\n              >\r\n                Client visit has been saved!\r\n              </div>\r\n\r\n              <label htmlFor=\"dateOfVisit\">\r\n                <strong>Date of Visit</strong>\r\n              </label>\r\n              <input\r\n                onChange={handleChange(\"date_of_visit\")}\r\n                type=\"date\"\r\n                className=\"form-control\"\r\n                id=\"dateOfVisit\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group col-sm\">\r\n              <label htmlFor=\"item\">\r\n                <strong>Item</strong>\r\n              </label>\r\n\r\n              <div className=\"input-group mb-3\">\r\n                {items && (\r\n                  <select\r\n                    onChange={handleChange(\"item\")}\r\n                    className=\"custom-select\"\r\n                    id=\"item\"\r\n                  >\r\n                    {items.map((i, index) => {\r\n                      if (item !== \"\") {\r\n                        if (i.name === item) {\r\n                          return (\r\n                            <option\r\n                              key={index}\r\n                              selected\r\n                              data-type={i.itemType}\r\n                              value={i.name}\r\n                            >\r\n                              {i.name}\r\n                            </option>\r\n                          );\r\n                        }\r\n                      }\r\n\r\n                      return (\r\n                        <option\r\n                          key={index}\r\n                          data-type={i.itemType}\r\n                          value={i.name}\r\n                        >\r\n                          {i.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"form-group col-sm\"\r\n              style={{ display: weight !== \"\" ? \"block\" : \"none\" }}\r\n            >\r\n              <label htmlFor=\"weight\">\r\n                <strong>Weight</strong>\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"weight\"\r\n                onChange={handleChange(\"weight\")}\r\n                value={weightValue}\r\n                required\r\n              />\r\n            </div>\r\n            <div\r\n              className=\"form-group col-sm\"\r\n              style={{ display: numOfItems !== \"\" ? \"block\" : \"none\" }}\r\n            >\r\n              <label htmlFor=\"numOfItems\">\r\n                <strong>Number of items</strong>\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"numOfItems\"\r\n                onChange={handleChange(\"numOfItems\")}\r\n                value={numItemsValue}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group col-sm\">\r\n              <label htmlFor=\"notes\">\r\n                <strong>Notes</strong>\r\n              </label>\r\n              <textarea\r\n                onChange={handleChange(\"notes\")}\r\n                className=\"form-control rounded-0\"\r\n                id=\"notes\"\r\n                rows=\"3\"\r\n                value={notes}\r\n              >\r\n                {notes}\r\n              </textarea>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              data-dismiss=\"modal\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              onClick={handleVisitBeforeCheckout}\r\n              className=\"btn btn-success\"\r\n            >\r\n              Save\r\n            </button>\r\n            <button\r\n              onClick={handleServing}\r\n              className=\"btn btn-primary\"\r\n              data-dismiss=\"modal\"\r\n            >\r\n              Move to checkout\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const clearClients = () => (\r\n    <div\r\n      className=\"modal fade\"\r\n      id={modalId}\r\n      tabIndex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-labelledby=\"clientModalTitle\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\" id=\"clientModalTitle\">\r\n              Clear checked out clients?\r\n            </h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\">The list will be cleared</div>\r\n          <div className=\"modal-footer\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              data-dismiss=\"modal\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              onClick={handleClearCheckout}\r\n              className=\"btn btn-primary\"\r\n              data-dismiss=\"modal\"\r\n            >\r\n              Yes\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      {type == \"editCheckin\" && editCheckin()}\r\n      {type == \"serving\" && serving()}\r\n      {type == \"checkout\" && checkout()}\r\n      {type == \"clearcheckout\" && clearClients()}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\n\r\nconst DisplayItems = ({ items }) => {\r\n  return items.map((item, index) => (\r\n    <li key={index}>\r\n      {item.item} - {item.quantity} - {item.notes}\r\n    </li>\r\n  ));\r\n};\r\n\r\nexport default DisplayItems;\r\n","import React, { Fragment, useState, useEffect, useContext } from \"react\";\r\nimport { ClientContext } from \"./common/ClientContext\";\r\nimport { getClients, getVisitItems } from \"./common/apiCore\";\r\nimport { clientUpdateStatus } from \"./common/ClientHelpers\";\r\nimport Modal from \"./common/Modal\";\r\nimport { errorMessage } from \"./common/Error\";\r\nimport DisplayItems from \"./DisplayItems\";\r\n\r\nconst Checkout = (props) => {\r\n  const { place } = props;\r\n  const [clients, setClients] = useContext(ClientContext);\r\n  const [client, setClient] = useState({});\r\n  const [error, setError] = useState(false);\r\n  const [errorMsg, setErrMsg] = useState(\"\");\r\n  const { checkedOut } = clients;\r\n\r\n  const refreshCheckout = () => {\r\n    getClients(place).then((response) => {\r\n      if (response) {\r\n        if (response.data.error) {\r\n          setError(true);\r\n          setErrMsg(response.data.error);\r\n        } else {\r\n          const { checkedIn, serving, checkedOut } = clientUpdateStatus(\r\n            response.data.clients\r\n          );\r\n          setClients((prevClients) => {\r\n            return { ...prevClients, place, checkedIn, serving, checkedOut };\r\n          });\r\n        }\r\n      } else {\r\n        setError(true);\r\n        setErrMsg(\"No response from server\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {error && errorMessage(errorMsg)}\r\n      {checkedOut.length == 0 && (\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-6 offset-sm-3\">\r\n            <div\r\n              className=\"alert alert-success\"\r\n              role=\"alert\"\r\n              style={{ textAlign: \"center\" }}\r\n            >\r\n              <strong>No clients in checkout</strong>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {checkedOut.length > 0 && (\r\n        <div className=\"row\">\r\n          <div className=\"col-sm\">\r\n            <button\r\n              style={{ float: \"right\", marginBottom: 5 }}\r\n              type=\"button\"\r\n              className=\"btn btn-secondary btn-sm\"\r\n              data-toggle=\"modal\"\r\n              data-target=\"#checkoutModal\"\r\n            >\r\n              Clear Checkout\r\n            </button>\r\n            <table className=\"table table-bordered table-striped mb-0\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">First</th>\r\n                  <th scope=\"col\">Last</th>\r\n                  <th scope=\"col\"># in House</th>\r\n                  <th scope=\"col\">Specific request</th>\r\n                  <th scope=\"col\">Method of Pickup</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {checkedOut.map((client, index) => {\r\n                  return (\r\n                    <tr\r\n                      data-id={client.id}\r\n                      id=\"modalLaunch\"\r\n                      key={index}\r\n                      onClick={() => setClient(client)}\r\n                      data-toggle=\"modal\"\r\n                      data-target=\"#moveBackToServingModal\"\r\n                    >\r\n                      <th scope=\"row\">{index + 1}</th>\r\n                      <td>{client.fname}</td>\r\n                      <td>{client.lname}</td>\r\n                      <td>{client.familyNumber}</td>\r\n                      <td>\r\n                        <ul>\r\n                          {client.items && (\r\n                            <DisplayItems items={client.items} />\r\n                          )}\r\n                        </ul>\r\n                      </td>\r\n                      <td>{client.methodOfPickup}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <Modal\r\n        modalId=\"moveBackToServingModal\"\r\n        client={client}\r\n        type=\"serving\"\r\n        refreshFunction={refreshCheckout}\r\n      />\r\n      <Modal\r\n        modalId=\"checkoutModal\"\r\n        client={client}\r\n        type=\"clearcheckout\"\r\n        place={place}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","import React, { Fragment, useState, useContext, useEffect } from \"react\";\r\nimport { getClients } from \"./common/apiCore\";\r\nimport Modal from \"./common/Modal\";\r\nimport { ClientContext } from \"./common/ClientContext\";\r\nimport { clientUpdateStatus } from \"./common/ClientHelpers\";\r\nimport DisplayItems from \"./DisplayItems\";\r\n\r\nconst Serving = (props) => {\r\n  const [clients, setClients] = useContext(ClientContext);\r\n  const [client, setClient] = useState({});\r\n\r\n  const refreshServing = () => {\r\n    getClients(props.place).then((response) => {\r\n      if (response) {\r\n        if (response.data.error) {\r\n          console.log(\"Response error: \", response.data.error);\r\n        } else {\r\n          const { checkedIn, serving, checkedOut } = clientUpdateStatus(\r\n            response.data.clients\r\n          );\r\n\r\n          setClients((prevClients) => {\r\n            return {\r\n              ...prevClients,\r\n              place: props.place,\r\n              checkedIn,\r\n              serving,\r\n              checkedOut,\r\n            };\r\n          });\r\n        }\r\n      } else {\r\n        console.log(\"No response error\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const { serving } = clients;\r\n\r\n  return (\r\n    <Fragment>\r\n      {serving.length == 0 && (\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-6 offset-sm-3\">\r\n            <div\r\n              className=\"alert alert-success\"\r\n              role=\"alert\"\r\n              style={{ textAlign: \"center\" }}\r\n            >\r\n              <strong>No clients being served</strong>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {serving.length > 0 && (\r\n        <div className=\"row\">\r\n          <div className=\"col-sm\">\r\n            <table className=\"table table-bordered table-striped mb-0\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">First</th>\r\n                  <th scope=\"col\">Last</th>\r\n                  <th scope=\"col\"># in House</th>\r\n                  <th scope=\"col\">Specific request</th>\r\n                  <th scope=\"col\">Method of Pickup</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {serving.map((client, index) => {\r\n                  return (\r\n                    <tr\r\n                      data-id={client.id}\r\n                      id=\"modalLaunch\"\r\n                      key={index}\r\n                      onClick={() => setClient(client)}\r\n                      data-toggle=\"modal\"\r\n                      data-target=\"#servingModal\"\r\n                    >\r\n                      <th scope=\"row\">{index + 1}</th>\r\n                      <td>{client.fname}</td>\r\n                      <td>{client.lname}</td>\r\n                      <td>{client.familyNumber}</td>\r\n                      <td>\r\n                        <ul>\r\n                          {client.items && (\r\n                            <DisplayItems items={client.items} />\r\n                          )}\r\n                        </ul>\r\n                      </td>\r\n                      <td>{client.methodOfPickup}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <Modal\r\n        modalId=\"servingModal\"\r\n        client={client}\r\n        type=\"checkout\"\r\n        refreshFunction={refreshServing}\r\n        place={props.place}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Serving;\r\n","import React, { Fragment, useState, useEffect, useContext } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getClients } from \"./common/apiCore\";\r\nimport Modal from \"./common/Modal\";\r\nimport { ClientContext } from \"./common/ClientContext\";\r\nimport { clientUpdateStatus } from \"./common/ClientHelpers\";\r\nimport { errorMessage } from \"./common/Error\";\r\nimport DisplayItems from \"./DisplayItems\";\r\n\r\nconst CheckIn = (props) => {\r\n  const [error, setError] = useState(false);\r\n  const [errorMsg, setErrMsg] = useState(\"\");\r\n  const [clients, setClients] = useContext(ClientContext);\r\n  const [client, setClient] = useState({});\r\n\r\n  if (props.place !== undefined) {\r\n    var place = props.place;\r\n  } else {\r\n    var place = \"Clothing Bank\";\r\n  }\r\n\r\n  useEffect(() => {\r\n    setClients((prevClients) => {\r\n      return {\r\n        ...prevClients,\r\n        place,\r\n      };\r\n    });\r\n  }, []);\r\n\r\n  const refreshCheckin = () => {\r\n    getClients(place).then((response) => {\r\n      if (response) {\r\n        if (response.data.error) {\r\n          setError(true);\r\n          setErrMsg(response.data.error);\r\n        } else {\r\n          const { checkedIn, serving, checkedOut } = clientUpdateStatus(\r\n            response.data.clients\r\n          );\r\n          setClients((prevClients) => {\r\n            return { ...prevClients, place, checkedIn, serving, checkedOut };\r\n          });\r\n        }\r\n      } else {\r\n        setError(true);\r\n        setErrMsg(\"No response from server\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const { checkedIn } = clients;\r\n\r\n  return (\r\n    <Fragment>\r\n      {error && errorMessage(errorMsg)}\r\n\r\n      {checkedIn.length == 0 && (\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-6 offset-sm-3\">\r\n            <div\r\n              className=\"alert alert-success\"\r\n              role=\"alert\"\r\n              style={{ textAlign: \"center\" }}\r\n            >\r\n              <strong>Please check in</strong>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {checkedIn.length > 0 && (\r\n        <div className=\"row\">\r\n          <div className=\"col-sm\">\r\n            <table className=\"table table-bordered table-striped mb-0\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">First</th>\r\n                  <th scope=\"col\">Last</th>\r\n                  <th scope=\"col\"># in House</th>\r\n                  <th scope=\"col\">Specific request</th>\r\n                  <th scope=\"col\">Method of Pickup</th>\r\n                  <th>&nbsp;</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {checkedIn.map((client, index) => {\r\n                  return (\r\n                    <tr data-id={client.id} id=\"modalLaunch\" key={index}>\r\n                      <th scope=\"row\">{index + 1}</th>\r\n                      <td\r\n                        onClick={() => setClient(client)}\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#checkinModal\"\r\n                      >\r\n                        {client.fname}\r\n                      </td>\r\n                      <td\r\n                        onClick={() => setClient(client)}\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#checkinModal\"\r\n                      >\r\n                        {client.lname}\r\n                      </td>\r\n                      <td\r\n                        onClick={() => setClient(client)}\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#checkinModal\"\r\n                      >\r\n                        {client.familyNumber}\r\n                      </td>\r\n                      <td\r\n                        onClick={() => setClient(client)}\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#checkinModal\"\r\n                      >\r\n                        <ul>\r\n                          {client.items && (\r\n                            <DisplayItems items={client.items} />\r\n                          )}\r\n                        </ul>\r\n                      </td>\r\n                      <td\r\n                        onClick={() => setClient(client)}\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#checkinModal\"\r\n                      >\r\n                        {client.methodOfPickup}\r\n                      </td>\r\n                      <td>\r\n                        <button\r\n                          onClick={() => setClient(client)}\r\n                          type=\"button\"\r\n                          className=\"btn btn-secondary btn-sm\"\r\n                          data-toggle=\"modal\"\r\n                          data-target=\"#editModal\"\r\n                        >\r\n                          Edit\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <Modal\r\n        modalId=\"checkinModal\"\r\n        client={client}\r\n        type=\"serving\"\r\n        refreshFunction={refreshCheckin}\r\n      />\r\n      <Modal\r\n        modalId=\"editModal\"\r\n        client={client}\r\n        type=\"editCheckin\"\r\n        refreshFunction={refreshCheckin}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withRouter(CheckIn);\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { Redirect, Link, withRouter } from \"react-router-dom\";\r\nimport Navigation from \"./common/Navigation\";\r\nimport Checkout from \"./Checkout\";\r\nimport Serving from \"./Serving\";\r\nimport CheckIn from \"./CheckIn\";\r\nimport { ClientProvider } from \"./common/ClientContext\";\r\n\r\nconst Storehouse = (props) => {\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (sessionStorage.getItem(\"jwt\")) {\r\n    } else {\r\n      setRedirect(true);\r\n    }\r\n  }, []);\r\n\r\n  const doLogout = () => {\r\n    sessionStorage.setItem(\"jwt\", \"\");\r\n    sessionStorage.clear();\r\n    setRedirect(true);\r\n  };\r\n\r\n  if (redirect) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <ClientProvider>\r\n      <Fragment>\r\n        <Navigation logoutFunction={doLogout} logoutLink={true} />\r\n        <section id=\"tabs\">\r\n          <div className=\"container\" style={{ maxWidth: \"100%\" }}>\r\n            <div className=\"row\">\r\n              <div className=\"col-xs-12\" style={{ width: \"100%\" }}>\r\n                <nav>\r\n                  <div\r\n                    className=\"nav nav-tabs nav-fill\"\r\n                    id=\"nav-tab\"\r\n                    role=\"tablist\"\r\n                    style={{ backgroundColor: \"white\" }}\r\n                  >\r\n                    <a\r\n                      className=\"nav-item nav-link active\"\r\n                      id=\"nav-home-tab\"\r\n                      data-toggle=\"tab\"\r\n                      href=\"#nav-home\"\r\n                      role=\"tab\"\r\n                      aria-controls=\"nav-home\"\r\n                      aria-selected=\"true\"\r\n                    >\r\n                      Check In\r\n                    </a>\r\n                    <a\r\n                      className=\"nav-item nav-link\"\r\n                      id=\"nav-profile-tab\"\r\n                      data-toggle=\"tab\"\r\n                      href=\"#nav-profile\"\r\n                      role=\"tab\"\r\n                      aria-controls=\"nav-profile\"\r\n                      aria-selected=\"false\"\r\n                    >\r\n                      Serving\r\n                    </a>\r\n                    <a\r\n                      className=\"nav-item nav-link\"\r\n                      id=\"nav-about-tab\"\r\n                      data-toggle=\"tab\"\r\n                      href=\"#nav-about\"\r\n                      role=\"tab\"\r\n                      aria-controls=\"nav-about\"\r\n                      aria-selected=\"false\"\r\n                    >\r\n                      Check Out\r\n                    </a>\r\n                  </div>\r\n                </nav>\r\n                <div\r\n                  className=\"tab-content py-3 px-3 px-sm-0\"\r\n                  id=\"nav-tabContent\"\r\n                >\r\n                  <div\r\n                    className=\"tab-pane fade show active outer-wrapper\"\r\n                    id=\"nav-home\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"nav-home-tab\"\r\n                  >\r\n                    <div className=\"table-wrapper-scroll-y my-custom-scrollbar\">\r\n                      <CheckIn place=\"Clothing Bank\" />\r\n                    </div>\r\n                    <Link to=\"/searchclient\" style={{ textDecoration: \"none\" }}>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-success btn-lg btn-block\"\r\n                      >\r\n                        Check In\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                  <div\r\n                    className=\"tab-pane fade outer-wrapper\"\r\n                    id=\"nav-profile\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"nav-profile-tab\"\r\n                  >\r\n                    <div className=\"table-wrapper-scroll-y my-custom-scrollbar\">\r\n                      <Serving place=\"Clothing Bank\" />\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    className=\"tab-pane fade outer-wrapper\"\r\n                    id=\"nav-about\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"nav-about-tab\"\r\n                  >\r\n                    <div className=\"table-wrapper-scroll-y my-custom-scrollbar\">\r\n                      <Checkout place=\"Clothing Bank\" />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </Fragment>\r\n    </ClientProvider>\r\n  );\r\n};\r\n\r\nexport default withRouter(Storehouse);\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { Redirect, Link, withRouter } from \"react-router-dom\";\r\nimport Navigation from \"./common/Navigation\";\r\nimport Checkout from \"./Checkout\";\r\nimport Serving from \"./Serving\";\r\nimport CheckIn from \"./CheckIn\";\r\nimport { ClientProvider } from \"./common/ClientContext\";\r\n\r\nconst FoodPantry = (props) => {\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (sessionStorage.getItem(\"jwt\")) {\r\n    } else {\r\n      setRedirect(true);\r\n    }\r\n  }, []);\r\n\r\n  const doLogout = () => {\r\n    sessionStorage.setItem(\"jwt\", \"\");\r\n    sessionStorage.clear();\r\n    setRedirect(true);\r\n  };\r\n\r\n  if (redirect) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <ClientProvider>\r\n      <Fragment>\r\n        <Navigation logoutFunction={doLogout} logoutLink={true} />\r\n        <section id=\"tabs\">\r\n          <div className=\"container\" style={{ maxWidth: \"100%\" }}>\r\n            <div className=\"row\">\r\n              <div className=\"col-xs-12\" style={{ width: \"100%\" }}>\r\n                <nav>\r\n                  <div\r\n                    className=\"nav nav-tabs nav-fill\"\r\n                    id=\"nav-tab\"\r\n                    role=\"tablist\"\r\n                    style={{ backgroundColor: \"white\" }}\r\n                  >\r\n                    <a\r\n                      className=\"nav-item nav-link active\"\r\n                      id=\"nav-home-tab\"\r\n                      data-toggle=\"tab\"\r\n                      href=\"#nav-home\"\r\n                      role=\"tab\"\r\n                      aria-controls=\"nav-home\"\r\n                      aria-selected=\"true\"\r\n                    >\r\n                      Check In\r\n                    </a>\r\n                    <a\r\n                      className=\"nav-item nav-link\"\r\n                      id=\"nav-profile-tab\"\r\n                      data-toggle=\"tab\"\r\n                      href=\"#nav-profile\"\r\n                      role=\"tab\"\r\n                      aria-controls=\"nav-profile\"\r\n                      aria-selected=\"false\"\r\n                    >\r\n                      Serving\r\n                    </a>\r\n                    <a\r\n                      className=\"nav-item nav-link\"\r\n                      id=\"nav-about-tab\"\r\n                      data-toggle=\"tab\"\r\n                      href=\"#nav-about\"\r\n                      role=\"tab\"\r\n                      aria-controls=\"nav-about\"\r\n                      aria-selected=\"false\"\r\n                    >\r\n                      Check Out\r\n                    </a>\r\n                  </div>\r\n                </nav>\r\n                <div\r\n                  className=\"tab-content py-3 px-3 px-sm-0\"\r\n                  id=\"nav-tabContent\"\r\n                >\r\n                  <div\r\n                    className=\"tab-pane fade show active outer-wrapper\"\r\n                    id=\"nav-home\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"nav-home-tab\"\r\n                  >\r\n                    <div className=\"table-wrapper-scroll-y my-custom-scrollbar\">\r\n                      <CheckIn place=\"Food pantry\" />\r\n                    </div>\r\n                    <Link to=\"/searchclient\" style={{ textDecoration: \"none\" }}>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-success btn-lg btn-block\"\r\n                      >\r\n                        Check In\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                  <div\r\n                    className=\"tab-pane fade outer-wrapper\"\r\n                    id=\"nav-profile\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"nav-profile-tab\"\r\n                  >\r\n                    <div className=\"table-wrapper-scroll-y my-custom-scrollbar\">\r\n                      <Serving place=\"Food pantry\" />\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    className=\"tab-pane fade outer-wrapper\"\r\n                    id=\"nav-about\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"nav-about-tab\"\r\n                  >\r\n                    <div className=\"table-wrapper-scroll-y my-custom-scrollbar\">\r\n                      <Checkout place=\"Food pantry\" />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </Fragment>\r\n    </ClientProvider>\r\n  );\r\n};\r\n\r\nexport default withRouter(FoodPantry);\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { Redirect, Link, withRouter } from \"react-router-dom\";\r\nimport Navigation from \"./common/Navigation\";\r\nimport Checkout from \"./Checkout\";\r\nimport Serving from \"./Serving\";\r\nimport CheckIn from \"./CheckIn\";\r\nimport { ClientProvider } from \"./common/ClientContext\";\r\n\r\nconst MRC = (props) => {\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (sessionStorage.getItem(\"jwt\")) {\r\n    } else {\r\n      setRedirect(true);\r\n    }\r\n  }, []);\r\n\r\n  const doLogout = () => {\r\n    sessionStorage.setItem(\"jwt\", \"\");\r\n    sessionStorage.clear();\r\n    setRedirect(true);\r\n  };\r\n\r\n  if (redirect) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <ClientProvider>\r\n      <Fragment>\r\n        <Navigation logoutFunction={doLogout} logoutLink={true} />\r\n        <section id=\"tabs\">\r\n          <div className=\"container\" style={{ maxWidth: \"100%\" }}>\r\n            <div className=\"row\">\r\n              <div className=\"col-xs-12\" style={{ width: \"100%\" }}>\r\n                <nav>\r\n                  <div\r\n                    className=\"nav nav-tabs nav-fill\"\r\n                    id=\"nav-tab\"\r\n                    role=\"tablist\"\r\n                    style={{ backgroundColor: \"white\" }}\r\n                  >\r\n                    <a\r\n                      className=\"nav-item nav-link active\"\r\n                      id=\"nav-home-tab\"\r\n                      data-toggle=\"tab\"\r\n                      href=\"#nav-home\"\r\n                      role=\"tab\"\r\n                      aria-controls=\"nav-home\"\r\n                      aria-selected=\"true\"\r\n                    >\r\n                      Check In\r\n                    </a>\r\n                    <a\r\n                      className=\"nav-item nav-link\"\r\n                      id=\"nav-profile-tab\"\r\n                      data-toggle=\"tab\"\r\n                      href=\"#nav-profile\"\r\n                      role=\"tab\"\r\n                      aria-controls=\"nav-profile\"\r\n                      aria-selected=\"false\"\r\n                    >\r\n                      Serving\r\n                    </a>\r\n                    <a\r\n                      className=\"nav-item nav-link\"\r\n                      id=\"nav-about-tab\"\r\n                      data-toggle=\"tab\"\r\n                      href=\"#nav-about\"\r\n                      role=\"tab\"\r\n                      aria-controls=\"nav-about\"\r\n                      aria-selected=\"false\"\r\n                    >\r\n                      Check Out\r\n                    </a>\r\n                  </div>\r\n                </nav>\r\n                <div\r\n                  className=\"tab-content py-3 px-3 px-sm-0\"\r\n                  id=\"nav-tabContent\"\r\n                >\r\n                  <div\r\n                    className=\"tab-pane fade show active outer-wrapper\"\r\n                    id=\"nav-home\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"nav-home-tab\"\r\n                  >\r\n                    <div className=\"table-wrapper-scroll-y my-custom-scrollbar\">\r\n                      <CheckIn place=\"Mobile Resource Center\" />\r\n                    </div>\r\n                    <Link to=\"/searchclient\" style={{ textDecoration: \"none\" }}>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-success btn-lg btn-block\"\r\n                      >\r\n                        Check In\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                  <div\r\n                    className=\"tab-pane fade outer-wrapper\"\r\n                    id=\"nav-profile\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"nav-profile-tab\"\r\n                  >\r\n                    <div className=\"table-wrapper-scroll-y my-custom-scrollbar\">\r\n                      <Serving place=\"Mobile Resource Center\" />\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    className=\"tab-pane fade outer-wrapper\"\r\n                    id=\"nav-about\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"nav-about-tab\"\r\n                  >\r\n                    <div className=\"table-wrapper-scroll-y my-custom-scrollbar\">\r\n                      <Checkout place=\"Mobile Resource Center\" />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </Fragment>\r\n    </ClientProvider>\r\n  );\r\n};\r\n\r\nexport default withRouter(MRC);\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { doLogin } from \"./common/apiCore\";\r\nimport Navigation from \"./common/Navigation\";\r\nimport { errorMessage } from \"./common/Error\";\r\n\r\nconst Login = () => {\r\n  const [error, setError] = useState(false);\r\n  const [errorMsg, setErrMsg] = useState(\"\");\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [values, setValues] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { username, password } = values;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    doLogin(values).then(({ data }) => {\r\n      if (data.jwt) {\r\n        sessionStorage.setItem(\"jwt\", data.jwt);\r\n        setRedirect(true);\r\n      }\r\n      if (data.error) {\r\n        setError(true);\r\n        setErrMsg(data.error);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const showLogin = () => (\r\n    <div className=\"cotainer\" style={{ marginTop: 15 }}>\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-8\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">Client Check In System</div>\r\n            <div className=\"card-body\">\r\n              {error && errorMessage(errorMsg)}\r\n              <form action=\"\" method=\"\">\r\n                <div className=\"form-group row\">\r\n                  <label\r\n                    htmlFor=\"username\"\r\n                    className=\"col-md-4 col-form-label text-md-right\"\r\n                  >\r\n                    Username\r\n                  </label>\r\n                  <div className=\"col-md-6\">\r\n                    <input\r\n                      onChange={handleChange(\"username\")}\r\n                      type=\"text\"\r\n                      id=\"username\"\r\n                      className=\"form-control\"\r\n                      name=\"username\"\r\n                      required\r\n                      autoFocus\r\n                      value={username}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                  <label\r\n                    htmlFor=\"password\"\r\n                    className=\"col-md-4 col-form-label text-md-right\"\r\n                  >\r\n                    Password\r\n                  </label>\r\n                  <div className=\"col-md-6\">\r\n                    <input\r\n                      onChange={handleChange(\"password\")}\r\n                      type=\"password\"\r\n                      id=\"password\"\r\n                      className=\"form-control\"\r\n                      name=\"password\"\r\n                      required\r\n                      value={password}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 offset-md-4\">\r\n                  <button onClick={handleSubmit} className=\"btn btn-primary\">\r\n                    Submit\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  if (redirect || sessionStorage.getItem(\"jwt\")) {\r\n    return <Redirect to=\"/storehouse\" />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Navigation logoutLink={false} />\r\n      <main role=\"main\" className=\"container\" style={{ maxWidth: \"100%\" }}>\r\n        {showLogin()}\r\n      </main>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\nimport SearchClient from \"./core/SearchClient\";\r\nimport UpdateClient from \"./core/UpdateClient\";\r\nimport RegisterClient from \"./core/RegisterClient\";\r\nimport ViewClient from \"./core/ViewClient\";\r\nimport PlaceOfService from \"./core/PlaceOfService\";\r\nimport Storehouse from \"./core/Storehouse\";\r\nimport FoodPantry from \"./core/FoodPantry\";\r\nimport MRC from \"./core/MRC\";\r\nimport Login from \"./core/Login\";\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route path=\"/placeofservice\">\r\n          <PlaceOfService />\r\n        </Route>\r\n        <Route path=\"/viewclient\">\r\n          <ViewClient />\r\n        </Route>\r\n        <Route path=\"/updateclient\">\r\n          <UpdateClient />\r\n        </Route>\r\n        <Route path=\"/registerclient\">\r\n          <RegisterClient />\r\n        </Route>\r\n        <Route path=\"/searchclient\">\r\n          <SearchClient />\r\n        </Route>\r\n        <Route path=\"/storehouse\">\r\n          <Storehouse />\r\n        </Route>\r\n        <Route path=\"/foodpantry\">\r\n          <FoodPantry />\r\n        </Route>\r\n        <Route path=\"/mrc\">\r\n          <MRC />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Login />\r\n        </Route>\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Routes from \"./Routes\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Routes />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}